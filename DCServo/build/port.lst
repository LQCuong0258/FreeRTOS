ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"port.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c"
  18              		.section	.text.prvTaskExitError,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	prvTaskExitError:
  25              	.LFB6:
   1:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
   2:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  *
   5:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  *
   7:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  *
  14:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  *
  17:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  *
  24:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  *
  27:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
  28:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  29:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------
  30:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** * Implementation of functions defined in portable.h for the ARM CM3 port.
  31:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** *----------------------------------------------------------*/
  32:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  33:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Scheduler includes. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 2


  34:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #include "FreeRTOS.h"
  35:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #include "task.h"
  36:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  37:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* For backward compatibility, ensure configKERNEL_INTERRUPT_PRIORITY is
  38:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * defined.  The value should also ensure backward compatibility.
  39:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS.org versions prior to V4.4.0 did not include this definition. */
  40:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #ifndef configKERNEL_INTERRUPT_PRIORITY
  41:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #define configKERNEL_INTERRUPT_PRIORITY    255
  42:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif
  43:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  44:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Constants required to manipulate the core.  Registers first... */
  45:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CTRL_REG             ( *( ( volatile uint32_t * ) 0xe000e010 ) )
  46:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_LOAD_REG             ( *( ( volatile uint32_t * ) 0xe000e014 ) )
  47:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG    ( *( ( volatile uint32_t * ) 0xe000e018 ) )
  48:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SHPR3_REG                    ( *( ( volatile uint32_t * ) 0xe000ed20 ) )
  49:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* ...then bits in the registers. */
  50:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CLK_BIT              ( 1UL << 2UL )
  51:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_INT_BIT              ( 1UL << 1UL )
  52:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT           ( 1UL << 0UL )
  53:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT       ( 1UL << 16UL )
  54:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSVCLEAR_BIT              ( 1UL << 27UL )
  55:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PEND_SYSTICK_SET_BIT         ( 1UL << 26UL )
  56:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT       ( 1UL << 25UL )
  57:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  58:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSV_PRI                   ( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) <<
  59:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_PRI                  ( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) <<
  60:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  61:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Constants required to check the validity of an interrupt priority. */
  62:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER       ( 16 )
  63:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16       ( 0xE000E3F0 )
  64:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portAIRCR_REG                         ( *( ( volatile uint32_t * ) 0xE000ED0C ) )
  65:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portMAX_8_BIT_VALUE                   ( ( uint8_t ) 0xff )
  66:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portTOP_BIT_OF_BYTE                   ( ( uint8_t ) 0x80 )
  67:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portMAX_PRIGROUP_BITS                 ( ( uint8_t ) 7 )
  68:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portPRIORITY_GROUP_MASK               ( 0x07UL << 8UL )
  69:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portPRIGROUP_SHIFT                    ( 8UL )
  70:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  71:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  72:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portVECTACTIVE_MASK                   ( 0xFFUL )
  73:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  74:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Constants required to set up the initial stack. */
  75:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portINITIAL_XPSR                      ( 0x01000000UL )
  76:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  77:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* The systick is a 24-bit counter. */
  78:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portMAX_24_BIT_NUMBER                 ( 0xffffffUL )
  79:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  80:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  81:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * occurred while the SysTick counter is stopped during tickless idle
  82:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * calculations. */
  83:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portMISSED_COUNTS_FACTOR              ( 94UL )
  84:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  85:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  86:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  87:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #define portSTART_ADDRESS_MASK                ( ( StackType_t ) 0xfffffffeUL )
  88:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
  89:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Let the user override the default SysTick clock rate.  If defined by the
  90:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * user, this symbol must equal the SysTick clock rate when the CLK bit is 0 in the
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 3


  91:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * configuration register. */
  92:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  93:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #define configSYSTICK_CLOCK_HZ             ( configCPU_CLOCK_HZ )
  94:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Ensure the SysTick is clocked at the same frequency as the core. */
  95:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #define portNVIC_SYSTICK_CLK_BIT_CONFIG    ( portNVIC_SYSTICK_CLK_BIT )
  96:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #else
  97:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Select the option to clock SysTick not at the same frequency as the core. */
  98:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #define portNVIC_SYSTICK_CLK_BIT_CONFIG    ( 0 )
  99:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif
 100:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 101:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 102:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * prvTaskExitError() in case it messes up unwinding of the stack in the
 103:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * debugger. */
 104:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #ifdef configTASK_RETURN_ADDRESS
 105:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #define portTASK_RETURN_ADDRESS    configTASK_RETURN_ADDRESS
 106:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #else
 107:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #define portTASK_RETURN_ADDRESS    prvTaskExitError
 108:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif
 109:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 110:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 111:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 112:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * file is weak to allow application writers to change the timer used to
 113:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * generate the tick interrupt.
 114:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 115:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void vPortSetupTimerInterrupt( void );
 116:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 117:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 118:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Exception handlers.
 119:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 120:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void ) __attribute__( ( naked ) );
 121:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void );
 122:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void ) __attribute__( ( naked ) );
 123:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 124:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 125:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 126:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 127:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void ) __attribute__( ( naked ) );
 128:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 129:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 130:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 131:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void );
 133:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 135:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 137:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * variable. */
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 139:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 140:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 141:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * The number of SysTick increments that make up one tick period.
 142:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 143:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 144:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     static uint32_t ulTimerCountsForOneTick = 0;
 145:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 146:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 147:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 4


 148:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 149:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * 24 bit resolution of the SysTick timer.
 150:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 151:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 152:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     static uint32_t xMaximumPossibleSuppressedTicks = 0;
 153:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 154:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 155:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 156:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 157:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * power functionality only.
 158:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 159:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 160:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     static uint32_t ulStoppedTimerCompensation = 0;
 161:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 162:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 163:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 164:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 165:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 166:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 167:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 168:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #if ( configASSERT_DEFINED == 1 )
 169:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     static uint8_t ucMaxSysCallPriority = 0;
 170:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     static uint32_t ulMaxPRIGROUPValue = 0;
 171:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t *
 172:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif /* configASSERT_DEFINED */
 173:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 174:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 175:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 176:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 177:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 178:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 179:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
 180:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                                      TaskFunction_t pxCode,
 181:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                                      void * pvParameters )
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 183:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Simulate the stack frame as it would be created by a context switch
 184:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * interrupt. */
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;                                                      /* Offset added to account
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = portINITIAL_XPSR;                                    /* xPSR */
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK; /* PC */
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;             /* LR */
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack -= 5;                                                   /* R12, R3, R2 and R1. */
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = ( StackType_t ) pvParameters;                        /* R0 */
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack -= 8;                                                   /* R11, R10, R9, R8, R7, R
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     return pxTopOfStack;
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 197:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 199:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void )
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
  26              		.loc 1 200 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 5


  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 201:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     volatile uint32_t ulDummy = 0UL;
  34              		.loc 1 201 5 view .LVU1
  35              		.loc 1 201 23 is_stmt 0 view .LVU2
  36 0002 0023     		movs	r3, #0
  37 0004 0193     		str	r3, [sp, #4]
 202:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* A function that implements a task must not exit or attempt to return to
 204:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * its caller as there is nothing to return to.  If a task wants to exit it
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * should instead call vTaskDelete( NULL ).
 206:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      *
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * Artificially force an assert() to be triggered if configASSERT() is
 208:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * defined, then stop here so application writers can catch the error. */
 209:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     configASSERT( uxCriticalNesting == ~0UL );
  38              		.loc 1 209 5 is_stmt 1 view .LVU3
  39 0006 0D4B     		ldr	r3, .L6
  40 0008 1B68     		ldr	r3, [r3]
  41 000a B3F1FF3F 		cmp	r3, #-1
  42 000e 08D0     		beq	.L2
  43              		.loc 1 209 5 discriminator 1 view .LVU4
  44              	.LBB27:
  45              	.LBI27:
  46              		.file 2 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h"
   1:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
   7:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  14:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  17:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  24:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  27:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  */
  28:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  29:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  30:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  31:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define PORTMACRO_H
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 6


  32:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  33:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifdef __cplusplus
  34:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         extern "C" {
  35:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
  36:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  37:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  38:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  39:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  40:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  42:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *
  43:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  44:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  45:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  */
  46:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  47:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  48:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portCHAR          char
  49:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portFLOAT         float
  50:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portDOUBLE        double
  51:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portLONG          long
  52:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSHORT         short
  53:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portBASE_TYPE     long
  55:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  56:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     typedef long             BaseType_t;
  58:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  60:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         typedef uint16_t     TickType_t;
  62:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #else
  64:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         typedef uint32_t     TickType_t;
  65:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  67:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * not need to be guarded with a critical section. */
  69:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
  71:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  72:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  73:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  74:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  79:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  80:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  81:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portYIELD()                                 \
  82:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {                                                   \
  83:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****                                                         \
  86:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 7


  89:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile ( "isb" );                                  \
  90:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
  91:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  92:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  97:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  98:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  99:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     extern void vPortEnterCritical( void );
 100:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     extern void vPortExitCritical( void );
 101:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 108:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 109:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 110:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****  * (which build with all the ports) will build. */
 113:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 116:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 117:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 118:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 122:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 123:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 124:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 125:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 128:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 129:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 131:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Generic helper function. */
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         {
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             uint8_t ucReturn;
 135:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             return ucReturn;
 139:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         }
 140:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 141:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Check the configuration. */
 142:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #endif
 145:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 8


 146:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 147:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 150:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 151:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 152:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 154:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 156:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 157:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 158:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifdef configASSERT
 159:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 162:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 163:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 164:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portNOP()
 165:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 166:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #define portINLINE              __inline
 167:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 168:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #ifndef portFORCE_INLINE
 169:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     #endif
 171:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 172:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 173:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 174:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 175:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 176:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         uint32_t ulCurrentInterrupt;
 177:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         BaseType_t xReturn;
 178:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 179:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 180:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 181:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 183:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         {
 184:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             xReturn = pdFALSE;
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         }
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         else
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         {
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             xReturn = pdTRUE;
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         }
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         return xReturn;
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  47              		.loc 2 196 34 view .LVU5
  48              	.LBB28:
 197:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         uint32_t ulNewBASEPRI;
  49              		.loc 2 198 9 view .LVU6
 199:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 9


 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile
  50              		.loc 2 200 9 view .LVU7
  51              		.syntax unified
  52              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
  53 0010 4FF05003 			mov r3, #80												
  54 0014 83F31188 		msr basepri, r3											
  55 0018 BFF36F8F 		isb														
  56 001c BFF34F8F 		dsb														
  57              	
  58              	@ 0 "" 2
  59              		.thumb
  60              		.syntax unified
  61              	.L3:
  62              	.LBE28:
  63              	.LBE27:
  64              		.loc 1 209 5 discriminator 3 view .LVU8
  65              		.loc 1 209 5 discriminator 3 view .LVU9
  66 0020 FEE7     		b	.L3
  67              	.L2:
  68              		.loc 1 209 46 discriminator 2 view .LVU10
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portDISABLE_INTERRUPTS();
  69              		.loc 1 210 5 view .LVU11
  70              	.LBB29:
  71              	.LBI29:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
  72              		.loc 2 196 34 view .LVU12
  73              	.LBB30:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
  74              		.loc 2 198 9 view .LVU13
  75              		.loc 2 200 9 view .LVU14
  76              		.syntax unified
  77              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
  78 0022 4FF05003 			mov r3, #80												
  79 0026 83F31188 		msr basepri, r3											
  80 002a BFF36F8F 		isb														
  81 002e BFF34F8F 		dsb														
  82              	
  83              	@ 0 "" 2
  84              		.thumb
  85              		.syntax unified
  86              	.LBE30:
  87              	.LBE29:
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     while( ulDummy == 0 )
  88              		.loc 1 212 5 view .LVU15
  89              	.L4:
 213:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* This file calls prvTaskExitError() after the scheduler has been
 215:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * started to remove a compiler warning about the function being defined
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * but never called.  ulDummy is used purely to quieten other warnings
 217:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * about code appearing after this function is called - making ulDummy
 218:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * volatile makes the compiler think the function could return and
 219:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * therefore not output an 'unreachable code' warning for code that appears
 220:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * after it. */
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
  90              		.loc 1 221 5 view .LVU16
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 10


  91              		.loc 1 212 20 discriminator 1 view .LVU17
  92 0032 019B     		ldr	r3, [sp, #4]
  93 0034 002B     		cmp	r3, #0
  94 0036 FCD0     		beq	.L4
 222:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
  95              		.loc 1 222 1 is_stmt 0 view .LVU18
  96 0038 02B0     		add	sp, sp, #8
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 0
  99              		@ sp needed
 100 003a 7047     		bx	lr
 101              	.L7:
 102              		.align	2
 103              	.L6:
 104 003c 00000000 		.word	uxCriticalNesting
 105              		.cfi_endproc
 106              	.LFE6:
 108              		.section	.text.prvPortStartFirstTask,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	prvPortStartFirstTask:
 115              	.LFB8:
 223:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 224:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 225:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void )
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 227:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     __asm volatile (
 228:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr	r3, pxCurrentTCBConst2		\n"/* Restore the context. */
 229:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr r1, [r3]					\n"/* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr r0, [r1]					\n"/* The first item in pxCurrentTCB is the task top of stack. */
 231:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldmia r0!, {r4-r11}				\n"/* Pop the registers that are not automatically saved on except
 232:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	msr psp, r0						\n"/* Restore the task stack pointer. */
 233:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	isb								\n"
 234:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	mov r0, #0 						\n"
 235:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	msr	basepri, r0					\n"
 236:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	orr r14, #0xd					\n"
 237:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	bx r14							\n"
 238:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "									\n"
 239:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	.align 4						\n"
 240:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 241:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         );
 242:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 243:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 244:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 245:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void )
 246:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 116              		.loc 1 246 1 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ Naked Function: prologue and epilogue provided by programmer.
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 247:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     __asm volatile (
 121              		.loc 1 247 5 view .LVU20
 122              		.syntax unified
 123              	@ 247 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c" 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 11


 124 0000 0648     		 ldr r0, =0xE000ED08 	
 125 0002 0068     	 ldr r0, [r0] 			
 126 0004 0068     	 ldr r0, [r0] 			
 127 0006 80F30888 	 msr msp, r0			
 128 000a 62B6     	 cpsie i				
 129 000c 61B6     	 cpsie f				
 130 000e BFF34F8F 	 dsb					
 131 0012 BFF36F8F 	 isb					
 132 0016 00DF     	 svc 0					
 133 0018 00BF     	 nop					
 134 001a 000008ED 	 .ltorg				
 134      00E0
 135              	
 136              	@ 0 "" 2
 248:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " ldr r0, =0xE000ED08 	\n"/* Use the NVIC offset register to locate the stack. */
 249:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " ldr r0, [r0] 			\n"
 250:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " ldr r0, [r0] 			\n"
 251:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " msr msp, r0			\n"/* Set the msp back to the start of the stack. */
 252:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " cpsie i				\n"/* Globally enable interrupts. */
 253:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " cpsie f				\n"
 254:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " dsb					\n"
 255:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " isb					\n"
 256:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " svc 0					\n"/* System call to start first task. */
 257:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " nop					\n"
 258:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         " .ltorg				\n"
 259:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         );
 260:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 137              		.loc 1 260 1 is_stmt 0 view .LVU21
 138              		.thumb
 139              		.syntax unified
 140              		.cfi_endproc
 141              	.LFE8:
 143              		.section	.text.pxPortInitialiseStack,"ax",%progbits
 144              		.align	1
 145              		.global	pxPortInitialiseStack
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	pxPortInitialiseStack:
 151              	.LVL0:
 152              	.LFB5:
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Simulate the stack frame as it would be created by a context switch
 153              		.loc 1 182 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = portINITIAL_XPSR;                                    /* xPSR */
 158              		.loc 1 185 5 view .LVU23
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;
 159              		.loc 1 186 5 view .LVU24
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;
 160              		.loc 1 186 19 is_stmt 0 view .LVU25
 161 0000 4FF08073 		mov	r3, #16777216
 162 0004 40F8043C 		str	r3, [r0, #-4]
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK; /* PC */
 163              		.loc 1 187 5 is_stmt 1 view .LVU26
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 12


 164              	.LVL1:
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;
 165              		.loc 1 188 5 view .LVU27
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;
 166              		.loc 1 188 48 is_stmt 0 view .LVU28
 167 0008 21F00101 		bic	r1, r1, #1
 168              	.LVL2:
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack--;
 169              		.loc 1 188 19 view .LVU29
 170 000c 40F8081C 		str	r1, [r0, #-8]
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;             /* LR */
 171              		.loc 1 189 5 is_stmt 1 view .LVU30
 172              	.LVL3:
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack -= 5;                                                   /* R12, R3, R2 and R1. */
 173              		.loc 1 190 5 view .LVU31
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack -= 5;                                                   /* R12, R3, R2 and R1. */
 174              		.loc 1 190 21 is_stmt 0 view .LVU32
 175 0010 034B     		ldr	r3, .L10
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack -= 5;                                                   /* R12, R3, R2 and R1. */
 176              		.loc 1 190 19 view .LVU33
 177 0012 40F80C3C 		str	r3, [r0, #-12]
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     *pxTopOfStack = ( StackType_t ) pvParameters;                        /* R0 */
 178              		.loc 1 191 5 is_stmt 1 view .LVU34
 179              	.LVL4:
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack -= 8;                                                   /* R11, R10, R9, R8, R7, R
 180              		.loc 1 192 5 view .LVU35
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     pxTopOfStack -= 8;                                                   /* R11, R10, R9, R8, R7, R
 181              		.loc 1 192 19 is_stmt 0 view .LVU36
 182 0016 40F8202C 		str	r2, [r0, #-32]
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 183              		.loc 1 193 5 is_stmt 1 view .LVU37
 184              	.LVL5:
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 185              		.loc 1 195 5 view .LVU38
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 186              		.loc 1 196 1 is_stmt 0 view .LVU39
 187 001a 4038     		subs	r0, r0, #64
 188              	.LVL6:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 189              		.loc 1 196 1 view .LVU40
 190 001c 7047     		bx	lr
 191              	.L11:
 192 001e 00BF     		.align	2
 193              	.L10:
 194 0020 00000000 		.word	prvTaskExitError
 195              		.cfi_endproc
 196              	.LFE5:
 198              		.section	.text.SVC_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	SVC_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	SVC_Handler:
 206              	.LFB7:
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     __asm volatile (
 207              		.loc 1 226 1 is_stmt 1 view -0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 13


 208              		.cfi_startproc
 209              		@ Naked Function: prologue and epilogue provided by programmer.
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 227:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr	r3, pxCurrentTCBConst2		\n"/* Restore the context. */
 212              		.loc 1 227 5 view .LVU42
 213              		.syntax unified
 214              	@ 227 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c" 1
 215 0000 074B     			ldr	r3, pxCurrentTCBConst2		
 216 0002 1968     		ldr r1, [r3]					
 217 0004 0868     		ldr r0, [r1]					
 218 0006 B0E8F00F 		ldmia r0!, {r4-r11}				
 219 000a 80F30988 		msr psp, r0						
 220 000e BFF36F8F 		isb								
 221 0012 4FF00000 		mov r0, #0 						
 222 0016 80F31188 		msr	basepri, r0					
 223 001a 4EF00D0E 		orr r14, #0xd					
 224 001e 7047     		bx r14							
 225              										
 226              		.align 4						
 227 0020 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 228              	
 229              	@ 0 "" 2
 242:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 230              		.loc 1 242 1 is_stmt 0 view .LVU43
 231              		.thumb
 232              		.syntax unified
 233              		.cfi_endproc
 234              	.LFE7:
 236              		.section	.text.vPortEndScheduler,"ax",%progbits
 237              		.align	1
 238              		.global	vPortEndScheduler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 243              	vPortEndScheduler:
 244              	.LFB10:
 261:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 262:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 263:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 264:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 265:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 266:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** BaseType_t xPortStartScheduler( void )
 267:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 268:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 269:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * See https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 270:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 271:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 272:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #if ( configASSERT_DEFINED == 1 )
 273:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 274:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         volatile uint32_t ulOriginalPriority;
 275:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( port
 276:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         volatile uint8_t ucMaxPriorityValue;
 277:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 278:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Determine the maximum priority from which ISR safe FreeRTOS API
 279:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * functions can be called.  ISR safe functions are those that end in
 280:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * "FromISR".  FreeRTOS maintains separate thread and ISR API functions to
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 14


 281:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * ensure interrupt entry is as fast and simple as possible.
 282:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          *
 283:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * Save the interrupt priority value that is about to be clobbered. */
 284:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulOriginalPriority = *pucFirstUserPriorityRegister;
 285:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 286:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Determine the number of priority bits available.  First write to all
 287:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * possible bits. */
 288:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         *pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 289:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 290:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Read the value back to see how many bits stuck. */
 291:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 292:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 293:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Use the same mask on the maximum system call priority. */
 294:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 295:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 296:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Calculate the maximum acceptable priority group value for the number
 297:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * of bits read back. */
 298:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 299:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 301:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 302:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             ulMaxPRIGROUPValue--;
 303:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 304:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 305:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 306:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         #ifdef __NVIC_PRIO_BITS
 307:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 308:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Check the CMSIS configuration that defines the number of
 309:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * priority bits matches the number of priority bits actually queried
 310:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * from the hardware. */
 311:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 312:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 313:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         #endif
 314:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 315:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         #ifdef configPRIO_BITS
 316:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 317:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Check the FreeRTOS configuration that defines the number of
 318:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * priority bits matches the number of priority bits actually queried
 319:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * from the hardware. */
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 321:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 322:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         #endif
 323:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 324:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Shift the priority group value back to its position within the AIRCR
 325:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * register. */
 326:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 327:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 328:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 329:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Restore the clobbered interrupt priority register to its original
 330:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * value. */
 331:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         *pucFirstUserPriorityRegister = ulOriginalPriority;
 332:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 333:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #endif /* configASSERT_DEFINED */
 334:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 335:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Make PendSV and SysTick the lowest priority interrupts. */
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 337:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 15


 338:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 339:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Start the timer that generates the tick ISR.  Interrupts are disabled
 340:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * here already. */
 341:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     vPortSetupTimerInterrupt();
 342:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 343:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Initialise the critical nesting count ready for the first task. */
 344:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     uxCriticalNesting = 0;
 345:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 346:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Start the first task. */
 347:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     prvPortStartFirstTask();
 348:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 349:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Should never get here as the tasks will now be executing!  Call the task
 350:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * exit error function to prevent compiler warnings about a static function
 351:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * not being called in the case that the application writer overrides this
 352:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * functionality by defining configTASK_RETURN_ADDRESS.  Call
 353:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * vTaskSwitchContext() so link time optimisation does not remove the
 354:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * symbol. */
 355:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     vTaskSwitchContext();
 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     prvTaskExitError();
 357:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 358:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Should not get here! */
 359:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     return 0;
 360:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 361:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 362:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 363:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void vPortEndScheduler( void )
 364:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 245              		.loc 1 364 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 365:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Not implemented in ports where there is nothing to return to.
 366:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * Artificially force an assert. */
 367:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     configASSERT( uxCriticalNesting == 1000UL );
 250              		.loc 1 367 5 view .LVU45
 251 0000 074B     		ldr	r3, .L16
 252 0002 1B68     		ldr	r3, [r3]
 253 0004 B3F57A7F 		cmp	r3, #1000
 254 0008 08D0     		beq	.L13
 255              		.loc 1 367 5 discriminator 1 view .LVU46
 256              	.LBB31:
 257              	.LBI31:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 258              		.loc 2 196 34 view .LVU47
 259              	.LBB32:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 260              		.loc 2 198 9 view .LVU48
 261              		.loc 2 200 9 view .LVU49
 262              		.syntax unified
 263              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 264 000a 4FF05003 			mov r3, #80												
 265 000e 83F31188 		msr basepri, r3											
 266 0012 BFF36F8F 		isb														
 267 0016 BFF34F8F 		dsb														
 268              	
 269              	@ 0 "" 2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 16


 270              		.thumb
 271              		.syntax unified
 272              	.L15:
 273              	.LBE32:
 274              	.LBE31:
 275              		.loc 1 367 5 discriminator 3 view .LVU50
 276              		.loc 1 367 5 discriminator 3 view .LVU51
 277 001a FEE7     		b	.L15
 278              	.L13:
 368:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 279              		.loc 1 368 1 is_stmt 0 view .LVU52
 280 001c 7047     		bx	lr
 281              	.L17:
 282 001e 00BF     		.align	2
 283              	.L16:
 284 0020 00000000 		.word	uxCriticalNesting
 285              		.cfi_endproc
 286              	.LFE10:
 288              		.section	.text.vPortEnterCritical,"ax",%progbits
 289              		.align	1
 290              		.global	vPortEnterCritical
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	vPortEnterCritical:
 296              	.LFB11:
 369:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 370:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 371:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void vPortEnterCritical( void )
 372:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 297              		.loc 1 372 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 373:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portDISABLE_INTERRUPTS();
 302              		.loc 1 373 5 view .LVU54
 303              	.LBB33:
 304              	.LBI33:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 305              		.loc 2 196 34 view .LVU55
 306              	.LBB34:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 307              		.loc 2 198 9 view .LVU56
 308              		.loc 2 200 9 view .LVU57
 309              		.syntax unified
 310              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 311 0000 4FF05003 			mov r3, #80												
 312 0004 83F31188 		msr basepri, r3											
 313 0008 BFF36F8F 		isb														
 314 000c BFF34F8F 		dsb														
 315              	
 316              	@ 0 "" 2
 317              		.thumb
 318              		.syntax unified
 319              	.LBE34:
 320              	.LBE33:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 17


 374:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     uxCriticalNesting++;
 321              		.loc 1 374 5 view .LVU58
 322              		.loc 1 374 22 is_stmt 0 view .LVU59
 323 0010 0B4A     		ldr	r2, .L22
 324 0012 1368     		ldr	r3, [r2]
 325 0014 0133     		adds	r3, r3, #1
 326 0016 1360     		str	r3, [r2]
 375:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 376:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* This is not the interrupt safe version of the enter critical function so
 377:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * assert() if it is being called from an interrupt context.  Only API
 378:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * functions that end in "FromISR" can be used in an interrupt.  Only assert if
 379:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * the critical nesting count is 1 to protect against recursive calls if the
 380:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * assert function also uses a critical section. */
 381:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     if( uxCriticalNesting == 1 )
 327              		.loc 1 381 5 is_stmt 1 view .LVU60
 328              		.loc 1 381 7 is_stmt 0 view .LVU61
 329 0018 012B     		cmp	r3, #1
 330 001a 00D0     		beq	.L21
 331              	.L18:
 382:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 383:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 384:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 385:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 332              		.loc 1 385 1 view .LVU62
 333 001c 7047     		bx	lr
 334              	.L21:
 383:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 335              		.loc 1 383 9 is_stmt 1 view .LVU63
 336 001e 4FF0E023 		mov	r3, #-536813568
 337 0022 D3F8043D 		ldr	r3, [r3, #3332]
 338 0026 13F0FF0F 		tst	r3, #255
 339 002a F7D0     		beq	.L18
 383:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 340              		.loc 1 383 9 discriminator 1 view .LVU64
 341              	.LBB35:
 342              	.LBI35:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 343              		.loc 2 196 34 view .LVU65
 344              	.LBB36:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 345              		.loc 2 198 9 view .LVU66
 346              		.loc 2 200 9 view .LVU67
 347              		.syntax unified
 348              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 349 002c 4FF05003 			mov r3, #80												
 350 0030 83F31188 		msr basepri, r3											
 351 0034 BFF36F8F 		isb														
 352 0038 BFF34F8F 		dsb														
 353              	
 354              	@ 0 "" 2
 355              		.thumb
 356              		.syntax unified
 357              	.L20:
 358              	.LBE36:
 359              	.LBE35:
 383:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 360              		.loc 1 383 9 discriminator 3 view .LVU68
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 18


 383:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 361              		.loc 1 383 9 discriminator 3 view .LVU69
 362 003c FEE7     		b	.L20
 363              	.L23:
 364 003e 00BF     		.align	2
 365              	.L22:
 366 0040 00000000 		.word	uxCriticalNesting
 367              		.cfi_endproc
 368              	.LFE11:
 370              		.section	.text.vPortExitCritical,"ax",%progbits
 371              		.align	1
 372              		.global	vPortExitCritical
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	vPortExitCritical:
 378              	.LFB12:
 386:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 387:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 388:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void vPortExitCritical( void )
 389:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 379              		.loc 1 389 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 390:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     configASSERT( uxCriticalNesting );
 384              		.loc 1 390 5 view .LVU71
 385 0000 094B     		ldr	r3, .L28
 386 0002 1B68     		ldr	r3, [r3]
 387 0004 43B9     		cbnz	r3, .L25
 388              		.loc 1 390 5 discriminator 1 view .LVU72
 389              	.LBB37:
 390              	.LBI37:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 391              		.loc 2 196 34 view .LVU73
 392              	.LBB38:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 393              		.loc 2 198 9 view .LVU74
 394              		.loc 2 200 9 view .LVU75
 395              		.syntax unified
 396              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 397 0006 4FF05003 			mov r3, #80												
 398 000a 83F31188 		msr basepri, r3											
 399 000e BFF36F8F 		isb														
 400 0012 BFF34F8F 		dsb														
 401              	
 402              	@ 0 "" 2
 403              		.thumb
 404              		.syntax unified
 405              	.L26:
 406              	.LBE38:
 407              	.LBE37:
 408              		.loc 1 390 5 discriminator 3 view .LVU76
 409              		.loc 1 390 5 discriminator 3 view .LVU77
 410 0016 FEE7     		b	.L26
 411              	.L25:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 19


 412              		.loc 1 390 38 discriminator 2 view .LVU78
 391:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     uxCriticalNesting--;
 413              		.loc 1 391 5 view .LVU79
 414              		.loc 1 391 22 is_stmt 0 view .LVU80
 415 0018 013B     		subs	r3, r3, #1
 416 001a 034A     		ldr	r2, .L28
 417 001c 1360     		str	r3, [r2]
 392:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 393:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     if( uxCriticalNesting == 0 )
 418              		.loc 1 393 5 is_stmt 1 view .LVU81
 419              		.loc 1 393 7 is_stmt 0 view .LVU82
 420 001e 0BB9     		cbnz	r3, .L24
 394:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 395:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         portENABLE_INTERRUPTS();
 421              		.loc 1 395 9 is_stmt 1 view .LVU83
 422              	.LVL7:
 423              	.LBB39:
 424              	.LBI39:
 201:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 202:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	mov %0, %1												\n"\
 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	msr basepri, %0											\n"\
 204:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	isb														\n"\
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	dsb														\n"\
 206:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         );
 208:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 209:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 213:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 215:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile
 217:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 218:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	mrs %0, basepri											\n"\
 219:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	mov %1, %2												\n"\
 220:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	msr basepri, %1											\n"\
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	isb														\n"\
 222:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             "	dsb														\n"\
 223:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 224:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         );
 225:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 227:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****          * warnings. */
 228:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         return ulOriginalBASEPRI;
 229:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     }
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 231:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 232:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 425              		.loc 2 232 34 view .LVU84
 426              	.LBB40:
 233:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 234:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         __asm volatile
 427              		.loc 2 234 9 view .LVU85
 428              		.syntax unified
 429              	@ 234 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 20


 430 0020 83F31188 			msr basepri, r3	
 431              	@ 0 "" 2
 432              	.LVL8:
 433              		.thumb
 434              		.syntax unified
 435              	.L24:
 436              		.loc 2 234 9 is_stmt 0 view .LVU86
 437              	.LBE40:
 438              	.LBE39:
 396:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 397:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 439              		.loc 1 397 1 view .LVU87
 440 0024 7047     		bx	lr
 441              	.L29:
 442 0026 00BF     		.align	2
 443              	.L28:
 444 0028 00000000 		.word	uxCriticalNesting
 445              		.cfi_endproc
 446              	.LFE12:
 448              		.section	.text.PendSV_Handler,"ax",%progbits
 449              		.align	1
 450              		.global	PendSV_Handler
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	PendSV_Handler:
 456              	.LFB13:
 398:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 399:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 400:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void )
 401:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 457              		.loc 1 401 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ Naked Function: prologue and epilogue provided by programmer.
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 402:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* This is a naked function. */
 403:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 404:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     __asm volatile
 462              		.loc 1 404 5 view .LVU89
 463              		.syntax unified
 464              	@ 404 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c" 1
 465 0000 EFF30980 			mrs r0, psp							
 466 0004 BFF36F8F 		isb									
 467              											
 468 0008 0D4B     		ldr	r3, pxCurrentTCBConst			
 469 000a 1A68     		ldr	r2, [r3]						
 470              											
 471 000c 20E9F00F 		stmdb r0!, {r4-r11}					
 472 0010 1060     		str r0, [r2]						
 473              											
 474 0012 2DE90840 		stmdb sp!, {r3, r14}				
 475 0016 4FF05000 		mov r0, #80							
 476 001a 80F31188 		msr basepri, r0						
 477 001e FFF7FEFF 		bl vTaskSwitchContext				
 478 0022 4FF00000 		mov r0, #0							
 479 0026 80F31188 		msr basepri, r0						
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 21


 480 002a BDE80840 		ldmia sp!, {r3, r14}				
 481              											
 482 002e 1968     		ldr r1, [r3]						
 483 0030 0868     		ldr r0, [r1]						
 484 0032 B0E8F00F 		ldmia r0!, {r4-r11}					
 485 0036 80F30988 		msr psp, r0							
 486 003a BFF36F8F 		isb									
 487 003e 7047     		bx r14								
 488              											
 489              		.align 4							
 490 0040 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 491              	
 492              	@ 0 "" 2
 405:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     (
 406:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	mrs r0, psp							\n"
 407:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	isb									\n"
 408:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "										\n"
 409:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr	r3, pxCurrentTCBConst			\n"/* Get the location of the current TCB. */
 410:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr	r2, [r3]						\n"
 411:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "										\n"
 412:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	stmdb r0!, {r4-r11}					\n"/* Save the remaining registers. */
 413:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	str r0, [r2]						\n"/* Save the new top of stack into the first member of the TCB. */
 414:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "										\n"
 415:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	stmdb sp!, {r3, r14}				\n"
 416:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	mov r0, %0							\n"
 417:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	msr basepri, r0						\n"
 418:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	bl vTaskSwitchContext				\n"
 419:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	mov r0, #0							\n"
 420:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	msr basepri, r0						\n"
 421:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldmia sp!, {r3, r14}				\n"
 422:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "										\n"/* Restore the context, including the critical nesting count. */
 423:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr r1, [r3]						\n"
 424:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldr r0, [r1]						\n"/* The first item in pxCurrentTCB is the task top of stack. */
 425:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	ldmia r0!, {r4-r11}					\n"/* Pop the registers. */
 426:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	msr psp, r0							\n"
 427:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	isb									\n"
 428:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	bx r14								\n"
 429:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "										\n"
 430:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "	.align 4							\n"
 431:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         "pxCurrentTCBConst: .word pxCurrentTCB	\n"
 432:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 433:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     );
 434:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 493              		.loc 1 434 1 is_stmt 0 view .LVU90
 494              		.thumb
 495              		.syntax unified
 496              		.cfi_endproc
 497              	.LFE13:
 499              		.section	.text.SysTick_Handler,"ax",%progbits
 500              		.align	1
 501              		.global	SysTick_Handler
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	SysTick_Handler:
 507              	.LFB14:
 435:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 22


 436:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 437:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void )
 438:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 508              		.loc 1 438 1 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 08B5     		push	{r3, lr}
 513              	.LCFI2:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 3, -8
 516              		.cfi_offset 14, -4
 439:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* The SysTick runs at the lowest interrupt priority, so when this interrupt
 440:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * executes all interrupts must be unmasked.  There is therefore no need to
 441:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * save and then restore the interrupt mask value as its value is already
 442:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****      * known. */
 443:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portDISABLE_INTERRUPTS();
 517              		.loc 1 443 5 view .LVU92
 518              	.LBB41:
 519              	.LBI41:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 520              		.loc 2 196 34 view .LVU93
 521              	.LBB42:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 522              		.loc 2 198 9 view .LVU94
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 523              		.loc 2 200 9 view .LVU95
 524              		.syntax unified
 525              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 526 0002 4FF05003 			mov r3, #80												
 527 0006 83F31188 		msr basepri, r3											
 528 000a BFF36F8F 		isb														
 529 000e BFF34F8F 		dsb														
 530              	
 531              	@ 0 "" 2
 532              		.thumb
 533              		.syntax unified
 534              	.LBE42:
 535              	.LBE41:
 444:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 445:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Increment the RTOS tick. */
 446:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         if( xTaskIncrementTick() != pdFALSE )
 536              		.loc 1 446 9 view .LVU96
 537              		.loc 1 446 13 is_stmt 0 view .LVU97
 538 0012 FFF7FEFF 		bl	xTaskIncrementTick
 539              	.LVL9:
 540              		.loc 1 446 11 discriminator 1 view .LVU98
 541 0016 28B1     		cbz	r0, .L32
 447:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 448:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* A context switch is required.  Context switching is performed in
 449:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * the PendSV interrupt.  Pend the PendSV interrupt. */
 450:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 542              		.loc 1 450 13 is_stmt 1 view .LVU99
 543              		.loc 1 450 35 is_stmt 0 view .LVU100
 544 0018 4FF0E023 		mov	r3, #-536813568
 545 001c 4FF08052 		mov	r2, #268435456
 546 0020 C3F8042D 		str	r2, [r3, #3332]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 23


 547              	.L32:
 451:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 452:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 453:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portENABLE_INTERRUPTS();
 548              		.loc 1 453 5 is_stmt 1 view .LVU101
 549              	.LVL10:
 550              	.LBB43:
 551              	.LBI43:
 232:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 552              		.loc 2 232 34 view .LVU102
 553              	.LBB44:
 554              		.loc 2 234 9 view .LVU103
 555 0024 0023     		movs	r3, #0
 556              		.syntax unified
 557              	@ 234 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 558 0026 83F31188 			msr basepri, r3	
 559              	@ 0 "" 2
 560              	.LVL11:
 561              		.loc 2 234 9 is_stmt 0 view .LVU104
 562              		.thumb
 563              		.syntax unified
 564              	.LBE44:
 565              	.LBE43:
 454:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 566              		.loc 1 454 1 view .LVU105
 567 002a 08BD     		pop	{r3, pc}
 568              		.cfi_endproc
 569              	.LFE14:
 571              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 572              		.align	1
 573              		.weak	vPortSetupTimerInterrupt
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	vPortSetupTimerInterrupt:
 579              	.LFB15:
 455:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 456:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 457:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 458:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 459:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     __attribute__( ( weak ) ) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 460:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 461:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements, ulSysTickDecre
 462:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         TickType_t xModifiableIdleTime;
 463:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 464:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Make sure the SysTick reload value does not overflow the counter. */
 465:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 466:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 467:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 468:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 469:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 470:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Enter a critical section but don't use the taskENTER_CRITICAL()
 471:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * method as that will mask interrupts that should exit sleep mode. */
 472:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         __asm volatile ( "cpsid i" ::: "memory" );
 473:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         __asm volatile ( "dsb" );
 474:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         __asm volatile ( "isb" );
 475:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 24


 476:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* If a context switch is pending or a task is waiting for the scheduler
 477:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * to be unsuspended then abandon the low power entry. */
 478:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 479:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 480:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Re-enable interrupts - see comments above the cpsid instruction
 481:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * above. */
 482:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 483:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 484:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         else
 485:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 486:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Stop the SysTick momentarily.  The time the SysTick is stopped for
 487:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * is accounted for as best it can be, but using the tickless mode will
 488:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * inevitably result in some tiny drift of the time maintained by the
 489:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * kernel with respect to calendar time. */
 490:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BI
 491:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 492:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Use the SysTick current-value register to determine the number of
 493:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * SysTick decrements remaining until the next tick interrupt.  If the
 494:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * current-value register is zero, then there are actually
 495:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * ulTimerCountsForOneTick decrements remaining, not zero, because the
 496:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * SysTick requests the interrupt when decrementing from 1 to 0. */
 497:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 498:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 499:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             if( ulSysTickDecrementsLeft == 0 )
 500:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
 501:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
 502:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 503:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 504:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Calculate the reload value required to wait xExpectedIdleTime
 505:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * tick periods.  -1 is used because this code normally executes part
 506:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * way through the first tick period.  But if the SysTick IRQ is now
 507:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * pending, then clear the IRQ, suppressing the first tick, and correct
 508:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * the reload value to reflect that the second tick period is already
 509:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * underway.  The expected idle time is always at least two ticks. */
 510:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTi
 511:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 512:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
 513:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
 514:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
 515:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulReloadValue -= ulTimerCountsForOneTick;
 516:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 517:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 518:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             if( ulReloadValue > ulStoppedTimerCompensation )
 519:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
 520:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulReloadValue -= ulStoppedTimerCompensation;
 521:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 522:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 523:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Set the new reload value. */
 524:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 525:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 526:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Clear the SysTick count flag and set the count value back to
 527:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * zero. */
 528:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 529:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 530:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Restart SysTick. */
 531:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 532:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 25


 533:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 534:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * set its parameter to 0 to indicate that its implementation contains
 535:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * its own wait for interrupt or wait for event instruction, and so wfi
 536:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * should not be executed again.  However, the original expected idle
 537:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * time variable must remain unmodified, so a copy is taken. */
 538:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             xModifiableIdleTime = xExpectedIdleTime;
 539:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 540:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 541:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             if( xModifiableIdleTime > 0 )
 542:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
 543:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 __asm volatile ( "dsb" ::: "memory" );
 544:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 __asm volatile ( "wfi" );
 545:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 __asm volatile ( "isb" );
 546:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 547:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 548:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 549:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 550:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Re-enable interrupts to allow the interrupt that brought the MCU
 551:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * out of sleep mode to execute immediately.  See comments above
 552:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * the cpsid instruction above. */
 553:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 554:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "dsb" );
 555:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "isb" );
 556:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 557:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Disable interrupts again because the clock is about to be stopped
 558:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * and interrupts that execute while the clock is stopped will increase
 559:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * any slippage between the time maintained by the RTOS and calendar
 560:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * time. */
 561:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "cpsid i" ::: "memory" );
 562:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "dsb" );
 563:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "isb" );
 564:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 565:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Disable the SysTick clock without reading the
 566:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * portNVIC_SYSTICK_CTRL_REG register to ensure the
 567:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 568:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * the time the SysTick is stopped for is accounted for as best it can
 569:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * be, but using the tickless mode will inevitably result in some tiny
 570:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * drift of the time maintained by the kernel with respect to calendar
 571:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * time*/
 572:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BI
 573:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 574:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Determine whether the SysTick has already counted to zero. */
 575:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 576:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
 577:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 uint32_t ulCalculatedLoadValue;
 578:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 579:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* The tick interrupt ended the sleep (or is now pending), and
 580:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * a new tick period has started.  Reset portNVIC_SYSTICK_LOAD_REG
 581:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * with whatever remains of the new tick period. */
 582:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portN
 583:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 584:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* Don't allow a tiny value, or values that have somehow
 585:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * underflowed because the post sleep hook did something
 586:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * that took too long or because the SysTick current-value register
 587:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * is zero. */
 588:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadVa
 589:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 26


 590:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                     ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 591:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 }
 592:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 593:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 594:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 595:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* As the pending tick will be processed as soon as this
 596:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * function exits, the tick value maintained by the tick is stepped
 597:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * forward by one less than the time spent waiting. */
 598:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 599:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 600:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             else
 601:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
 602:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* Something other than the tick interrupt ended the sleep. */
 603:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 604:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* Use the SysTick current-value register to determine the
 605:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * number of SysTick decrements remaining until the expected idle
 606:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * time would have ended. */
 607:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 608:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 #if ( portNVIC_SYSTICK_CLK_BIT_CONFIG != portNVIC_SYSTICK_CLK_BIT )
 609:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 {
 610:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                     /* If the SysTick is not using the core clock, the current-
 611:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                      * value register might still be zero here.  In that case, the
 612:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                      * SysTick didn't load from the reload register, and there are
 613:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                      * ulReloadValue decrements remaining in the expected idle
 614:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                      * time, not zero. */
 615:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                     if( ulSysTickDecrementsLeft == 0 )
 616:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                     {
 617:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                         ulSysTickDecrementsLeft = ulReloadValue;
 618:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                     }
 619:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 }
 620:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 #endif /* portNVIC_SYSTICK_CLK_BIT_CONFIG */
 621:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 622:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* Work out how long the sleep lasted rounded to complete tick
 623:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * periods (not the ulReload value which accounted for part
 624:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * ticks). */
 625:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ul
 626:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 627:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* How many complete tick periods passed while the processor
 628:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * was waiting? */
 629:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 630:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 631:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* The reload value is set to whatever fraction of a single tick
 632:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * period remains. */
 633:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOne
 634:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 635:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 636:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG again,
 637:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * then set portNVIC_SYSTICK_LOAD_REG back to its standard value.  If
 638:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * the SysTick is not using the core clock, temporarily configure it to
 639:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * use the core clock.  This configuration forces the SysTick to load
 640:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * from portNVIC_SYSTICK_LOAD_REG immediately instead of at the next
 641:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * cycle of the other clock.  Then portNVIC_SYSTICK_LOAD_REG is ready
 642:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * to receive the standard value immediately. */
 643:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 644:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portN
 645:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             #if ( portNVIC_SYSTICK_CLK_BIT_CONFIG == portNVIC_SYSTICK_CLK_BIT )
 646:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 27


 647:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 648:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 649:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             #else
 650:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             {
 651:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 /* The temporary usage of the core clock has served its purpose,
 652:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                  * as described above.  Resume usage of the other clock. */
 653:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT;
 654:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 655:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 656:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 {
 657:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                     /* The partial tick period already ended.  Be sure the SysTick
 658:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                      * counts it only once. */
 659:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0;
 660:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 }
 661:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 662:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 663:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****                 portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_
 664:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             }
 665:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             #endif /* portNVIC_SYSTICK_CLK_BIT_CONFIG */
 666:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 667:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Step the tick to account for any tick periods that elapsed. */
 668:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             vTaskStepTick( ulCompleteTickPeriods );
 669:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 670:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Exit with interrupts enabled. */
 671:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 672:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 673:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 674:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 675:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 676:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 677:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 678:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*
 679:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 680:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  * frequency.
 681:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****  */
 682:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** __attribute__( ( weak ) ) void vPortSetupTimerInterrupt( void )
 683:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** {
 580              		.loc 1 683 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 684:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Calculate the constants required to configure the tick interrupt. */
 685:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #if ( configUSE_TICKLESS_IDLE == 1 )
 686:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 687:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 688:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 689:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTIC
 690:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 691:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     #endif /* configUSE_TICKLESS_IDLE */
 692:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 693:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Stop and clear the SysTick. */
 694:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SYSTICK_CTRL_REG = 0UL;
 585              		.loc 1 694 5 view .LVU107
 586              		.loc 1 694 31 is_stmt 0 view .LVU108
 587 0000 4FF0E022 		mov	r2, #-536813568
 588 0004 0023     		movs	r3, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 28


 589 0006 1361     		str	r3, [r2, #16]
 695:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 590              		.loc 1 695 5 is_stmt 1 view .LVU109
 591              		.loc 1 695 40 is_stmt 0 view .LVU110
 592 0008 9361     		str	r3, [r2, #24]
 696:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 697:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* Configure SysTick to interrupt at the requested rate. */
 698:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 593              		.loc 1 698 5 is_stmt 1 view .LVU111
 594              		.loc 1 698 58 is_stmt 0 view .LVU112
 595 000a 054B     		ldr	r3, .L35
 596 000c 1B68     		ldr	r3, [r3]
 597 000e 0549     		ldr	r1, .L35+4
 598 0010 A1FB0313 		umull	r1, r3, r1, r3
 599 0014 9B09     		lsrs	r3, r3, #6
 600              		.loc 1 698 81 view .LVU113
 601 0016 013B     		subs	r3, r3, #1
 602              		.loc 1 698 31 view .LVU114
 603 0018 5361     		str	r3, [r2, #20]
 699:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | port
 604              		.loc 1 699 5 is_stmt 1 view .LVU115
 605              		.loc 1 699 31 is_stmt 0 view .LVU116
 606 001a 0723     		movs	r3, #7
 607 001c 1361     		str	r3, [r2, #16]
 700:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 608              		.loc 1 700 1 view .LVU117
 609 001e 7047     		bx	lr
 610              	.L36:
 611              		.align	2
 612              	.L35:
 613 0020 00000000 		.word	SystemCoreClock
 614 0024 D34D6210 		.word	274877907
 615              		.cfi_endproc
 616              	.LFE15:
 618              		.section	.text.xPortStartScheduler,"ax",%progbits
 619              		.align	1
 620              		.global	xPortStartScheduler
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 625              	xPortStartScheduler:
 626              	.LFB9:
 267:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 627              		.loc 1 267 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 8
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631 0000 10B5     		push	{r4, lr}
 632              	.LCFI3:
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 4, -8
 635              		.cfi_offset 14, -4
 636 0002 82B0     		sub	sp, sp, #8
 637              	.LCFI4:
 638              		.cfi_def_cfa_offset 16
 270:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 639              		.loc 1 270 5 view .LVU119
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 29


 270:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 640              		.loc 1 270 57 discriminator 2 view .LVU120
 641              	.LBB45:
 274:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( port
 642              		.loc 1 274 9 view .LVU121
 275:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         volatile uint8_t ucMaxPriorityValue;
 643              		.loc 1 275 9 view .LVU122
 644              	.LVL12:
 276:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 645              		.loc 1 276 9 view .LVU123
 284:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 646              		.loc 1 284 9 view .LVU124
 284:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 647              		.loc 1 284 30 is_stmt 0 view .LVU125
 648 0004 2A4B     		ldr	r3, .L43
 649 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 650 0008 D2B2     		uxtb	r2, r2
 284:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 651              		.loc 1 284 28 view .LVU126
 652 000a 0192     		str	r2, [sp, #4]
 288:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 653              		.loc 1 288 9 is_stmt 1 view .LVU127
 288:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 654              		.loc 1 288 39 is_stmt 0 view .LVU128
 655 000c FF22     		movs	r2, #255
 656 000e 1A70     		strb	r2, [r3]
 291:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 657              		.loc 1 291 9 is_stmt 1 view .LVU129
 291:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 658              		.loc 1 291 30 is_stmt 0 view .LVU130
 659 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 660 0012 DBB2     		uxtb	r3, r3
 291:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 661              		.loc 1 291 28 view .LVU131
 662 0014 8DF80330 		strb	r3, [sp, #3]
 294:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 663              		.loc 1 294 9 is_stmt 1 view .LVU132
 294:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 664              		.loc 1 294 69 is_stmt 0 view .LVU133
 665 0018 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 666 001c 03F05003 		and	r3, r3, #80
 294:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 667              		.loc 1 294 30 view .LVU134
 668 0020 244A     		ldr	r2, .L43+4
 669 0022 1370     		strb	r3, [r2]
 298:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 670              		.loc 1 298 9 is_stmt 1 view .LVU135
 298:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 671              		.loc 1 298 28 is_stmt 0 view .LVU136
 672 0024 244B     		ldr	r3, .L43+8
 673 0026 0722     		movs	r2, #7
 674 0028 1A60     		str	r2, [r3]
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 675              		.loc 1 300 9 is_stmt 1 view .LVU137
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 676              		.loc 1 300 14 is_stmt 0 view .LVU138
 677 002a 09E0     		b	.L38
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 30


 678              	.L39:
 302:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 679              		.loc 1 302 13 is_stmt 1 view .LVU139
 302:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 680              		.loc 1 302 31 is_stmt 0 view .LVU140
 681 002c 224A     		ldr	r2, .L43+8
 682 002e 1368     		ldr	r3, [r2]
 683 0030 013B     		subs	r3, r3, #1
 684 0032 1360     		str	r3, [r2]
 303:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 685              		.loc 1 303 13 is_stmt 1 view .LVU141
 303:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 686              		.loc 1 303 32 is_stmt 0 view .LVU142
 687 0034 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 688 0038 5B00     		lsls	r3, r3, #1
 689 003a DBB2     		uxtb	r3, r3
 690 003c 8DF80330 		strb	r3, [sp, #3]
 691              	.L38:
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 692              		.loc 1 300 61 is_stmt 1 view .LVU143
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 693              		.loc 1 300 37 is_stmt 0 view .LVU144
 694 0040 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 695              		.loc 1 300 61 view .LVU145
 696 0044 13F0800F 		tst	r3, #128
 697 0048 F0D1     		bne	.L39
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 698              		.loc 1 320 13 is_stmt 1 view .LVU146
 699 004a 1B4B     		ldr	r3, .L43+8
 700 004c 1B68     		ldr	r3, [r3]
 701 004e 032B     		cmp	r3, #3
 702 0050 08D0     		beq	.L40
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 703              		.loc 1 320 13 discriminator 1 view .LVU147
 704              	.LBB46:
 705              	.LBI46:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 706              		.loc 2 196 34 view .LVU148
 707              	.LBB47:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 708              		.loc 2 198 9 view .LVU149
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 709              		.loc 2 200 9 view .LVU150
 710              		.syntax unified
 711              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 712 0052 4FF05003 			mov r3, #80												
 713 0056 83F31188 		msr basepri, r3											
 714 005a BFF36F8F 		isb														
 715 005e BFF34F8F 		dsb														
 716              	
 717              	@ 0 "" 2
 718              		.thumb
 719              		.syntax unified
 720              	.L41:
 721              	.LBE47:
 722              	.LBE46:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 31


 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 723              		.loc 1 320 13 discriminator 3 view .LVU151
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 724              		.loc 1 320 13 discriminator 3 view .LVU152
 725 0062 FEE7     		b	.L41
 726              	.L40:
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 727              		.loc 1 320 94 discriminator 2 view .LVU153
 326:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 728              		.loc 1 326 9 view .LVU154
 326:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 729              		.loc 1 326 28 is_stmt 0 view .LVU155
 730 0064 1B02     		lsls	r3, r3, #8
 731 0066 144A     		ldr	r2, .L43+8
 732 0068 1360     		str	r3, [r2]
 327:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 733              		.loc 1 327 9 is_stmt 1 view .LVU156
 327:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 734              		.loc 1 327 28 is_stmt 0 view .LVU157
 735 006a 03F4E063 		and	r3, r3, #1792
 736 006e 1360     		str	r3, [r2]
 331:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 737              		.loc 1 331 9 is_stmt 1 view .LVU158
 331:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 738              		.loc 1 331 39 is_stmt 0 view .LVU159
 739 0070 019B     		ldr	r3, [sp, #4]
 740 0072 DBB2     		uxtb	r3, r3
 741 0074 0E4A     		ldr	r2, .L43
 742 0076 1370     		strb	r3, [r2]
 743              	.LBE45:
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 744              		.loc 1 336 5 is_stmt 1 view .LVU160
 745 0078 4FF0E023 		mov	r3, #-536813568
 746 007c D3F8202D 		ldr	r2, [r3, #3360]
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 747              		.loc 1 336 24 is_stmt 0 view .LVU161
 748 0080 42F47002 		orr	r2, r2, #15728640
 749 0084 C3F8202D 		str	r2, [r3, #3360]
 337:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 750              		.loc 1 337 5 is_stmt 1 view .LVU162
 751 0088 D3F8202D 		ldr	r2, [r3, #3360]
 337:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 752              		.loc 1 337 24 is_stmt 0 view .LVU163
 753 008c 42F07042 		orr	r2, r2, #-268435456
 754 0090 C3F8202D 		str	r2, [r3, #3360]
 341:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 755              		.loc 1 341 5 is_stmt 1 view .LVU164
 756 0094 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 757              	.LVL13:
 344:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 758              		.loc 1 344 5 view .LVU165
 344:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 759              		.loc 1 344 23 is_stmt 0 view .LVU166
 760 0098 0024     		movs	r4, #0
 761 009a 084B     		ldr	r3, .L43+12
 762 009c 1C60     		str	r4, [r3]
 347:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 32


 763              		.loc 1 347 5 is_stmt 1 view .LVU167
 764 009e FFF7FEFF 		bl	prvPortStartFirstTask
 765              	.LVL14:
 355:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     prvTaskExitError();
 766              		.loc 1 355 5 view .LVU168
 767 00a2 FFF7FEFF 		bl	vTaskSwitchContext
 768              	.LVL15:
 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 769              		.loc 1 356 5 view .LVU169
 770 00a6 FFF7FEFF 		bl	prvTaskExitError
 771              	.LVL16:
 359:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** }
 772              		.loc 1 359 5 view .LVU170
 360:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 773              		.loc 1 360 1 is_stmt 0 view .LVU171
 774 00aa 2046     		mov	r0, r4
 775 00ac 02B0     		add	sp, sp, #8
 776              	.LCFI5:
 777              		.cfi_def_cfa_offset 8
 778              		@ sp needed
 779 00ae 10BD     		pop	{r4, pc}
 780              	.L44:
 781              		.align	2
 782              	.L43:
 783 00b0 00E400E0 		.word	-536812544
 784 00b4 00000000 		.word	ucMaxSysCallPriority
 785 00b8 00000000 		.word	ulMaxPRIGROUPValue
 786 00bc 00000000 		.word	uxCriticalNesting
 787              		.cfi_endproc
 788              	.LFE9:
 790              		.section	.text.vPortValidateInterruptPriority,"ax",%progbits
 791              		.align	1
 792              		.global	vPortValidateInterruptPriority
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 797              	vPortValidateInterruptPriority:
 798              	.LFB16:
 701:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 702:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 703:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** #if ( configASSERT_DEFINED == 1 )
 704:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 705:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     void vPortValidateInterruptPriority( void )
 706:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     {
 799              		.loc 1 706 5 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 707:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         uint32_t ulCurrentInterrupt;
 804              		.loc 1 707 9 view .LVU173
 708:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         uint8_t ucCurrentPriority;
 805              		.loc 1 708 9 view .LVU174
 709:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 710:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Obtain the number of the currently executing interrupt. */
 711:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 806              		.loc 1 711 9 view .LVU175
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 33


 807              		.syntax unified
 808              	@ 711 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c" 1
 809 0000 EFF30583 		mrs r3, ipsr
 810              	@ 0 "" 2
 811              	.LVL17:
 712:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 713:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Is the interrupt number a user defined interrupt? */
 714:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 812              		.loc 1 714 9 view .LVU176
 813              		.loc 1 714 11 is_stmt 0 view .LVU177
 814              		.thumb
 815              		.syntax unified
 816 0004 0F2B     		cmp	r3, #15
 817 0006 0FD9     		bls	.L46
 715:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         {
 716:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* Look up the interrupt's priority. */
 717:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 818              		.loc 1 717 13 is_stmt 1 view .LVU178
 819              		.loc 1 717 61 is_stmt 0 view .LVU179
 820 0008 114A     		ldr	r2, .L50
 821              		.loc 1 717 31 view .LVU180
 822 000a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 823              	.LVL18:
 824              		.loc 1 717 31 view .LVU181
 825 000c DBB2     		uxtb	r3, r3
 826              	.LVL19:
 718:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 719:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             /* The following assertion will fail if a service routine (ISR) for
 720:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * an interrupt that has been assigned a priority above
 721:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 722:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * function.  ISR safe FreeRTOS API functions must *only* be called
 723:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * from interrupts that have been assigned a priority at or below
 724:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY.
 725:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              *
 726:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * Numerically low interrupt priority numbers represent logically high
 727:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * interrupt priorities, therefore the priority of the interrupt must
 728:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * be set to a value equal to or numerically *higher* than
 729:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY.
 730:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              *
 731:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * Interrupts that	use the FreeRTOS API must not be left at their
 732:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * default priority of	zero as that is the highest possible priority,
 733:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 734:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * and	therefore also guaranteed to be invalid.
 735:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              *
 736:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * FreeRTOS maintains separate thread and ISR API functions to ensure
 737:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * interrupt entry is as fast and simple as possible.
 738:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              *
 739:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * The following links provide detailed information:
 740:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html
 741:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****              * https://www.FreeRTOS.org/FAQHelp.html */
 742:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****             configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 827              		.loc 1 742 13 is_stmt 1 view .LVU182
 828 000e 114A     		ldr	r2, .L50+4
 829 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 830 0012 9A42     		cmp	r2, r3
 831 0014 08D9     		bls	.L46
 832              		.loc 1 742 13 discriminator 1 view .LVU183
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 34


 833              	.LBB48:
 834              	.LBI48:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 835              		.loc 2 196 34 view .LVU184
 836              	.LBB49:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 837              		.loc 2 198 9 view .LVU185
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 838              		.loc 2 200 9 view .LVU186
 839              		.syntax unified
 840              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 841 0016 4FF05003 			mov r3, #80												
 842 001a 83F31188 		msr basepri, r3											
 843 001e BFF36F8F 		isb														
 844 0022 BFF34F8F 		dsb														
 845              	
 846              	@ 0 "" 2
 847              	.LVL20:
 848              		.thumb
 849              		.syntax unified
 850              	.L47:
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 851              		.loc 2 200 9 is_stmt 0 view .LVU187
 852              	.LBE49:
 853              	.LBE48:
 854              		.loc 1 742 13 is_stmt 1 discriminator 3 view .LVU188
 855              		.loc 1 742 13 discriminator 3 view .LVU189
 856 0026 FEE7     		b	.L47
 857              	.LVL21:
 858              	.L46:
 859              		.loc 1 742 70 discriminator 2 view .LVU190
 743:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         }
 744:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c **** 
 745:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         /* Priority grouping:  The interrupt controller (NVIC) allows the bits
 746:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * that define each interrupt's priority to be split between bits that
 747:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * define the interrupt's pre-emption priority bits and bits that define
 748:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * the interrupt's sub-priority.  For simplicity all bits must be defined
 749:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * to be pre-emption priority bits.  The following assertion will fail if
 750:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * this is not the case (if some bits represent a sub-priority).
 751:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          *
 752:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * If the application only uses CMSIS libraries for interrupt
 753:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * configuration then the correct setting can be achieved on all Cortex-M
 754:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 755:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * scheduler.  Note however that some vendor specific peripheral libraries
 756:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * assume a non-zero priority group setting, in which cases using a value
 757:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****          * of zero will result in unpredictable behaviour. */
 758:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****         configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 860              		.loc 1 758 9 view .LVU191
 861 0028 4FF0E023 		mov	r3, #-536813568
 862 002c D3F80C3D 		ldr	r3, [r3, #3340]
 863 0030 03F4E063 		and	r3, r3, #1792
 864 0034 084A     		ldr	r2, .L50+8
 865 0036 1268     		ldr	r2, [r2]
 866 0038 9342     		cmp	r3, r2
 867 003a 08D9     		bls	.L45
 868              		.loc 1 758 9 discriminator 1 view .LVU192
 869              	.LBB50:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 35


 870              	.LBI50:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****     {
 871              		.loc 2 196 34 view .LVU193
 872              	.LBB51:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h **** 
 873              		.loc 2 198 9 view .LVU194
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h ****         (
 874              		.loc 2 200 9 view .LVU195
 875              		.syntax unified
 876              	@ 200 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/portmacro.h" 1
 877 003c 4FF05003 			mov r3, #80												
 878 0040 83F31188 		msr basepri, r3											
 879 0044 BFF36F8F 		isb														
 880 0048 BFF34F8F 		dsb														
 881              	
 882              	@ 0 "" 2
 883              		.thumb
 884              		.syntax unified
 885              	.L49:
 886              	.LBE51:
 887              	.LBE50:
 888              		.loc 1 758 9 discriminator 3 view .LVU196
 889              		.loc 1 758 9 discriminator 3 view .LVU197
 890 004c FEE7     		b	.L49
 891              	.L45:
 759:ThirdParty/FreeRTOS/portable/GCC/ARM_CM3/port.c ****     }
 892              		.loc 1 759 5 is_stmt 0 view .LVU198
 893 004e 7047     		bx	lr
 894              	.L51:
 895              		.align	2
 896              	.L50:
 897 0050 F0E300E0 		.word	-536812560
 898 0054 00000000 		.word	ucMaxSysCallPriority
 899 0058 00000000 		.word	ulMaxPRIGROUPValue
 900              		.cfi_endproc
 901              	.LFE16:
 903              		.section	.bss.ulMaxPRIGROUPValue,"aw",%nobits
 904              		.align	2
 907              	ulMaxPRIGROUPValue:
 908 0000 00000000 		.space	4
 909              		.section	.bss.ucMaxSysCallPriority,"aw",%nobits
 912              	ucMaxSysCallPriority:
 913 0000 00       		.space	1
 914              		.section	.data.uxCriticalNesting,"aw"
 915              		.align	2
 918              	uxCriticalNesting:
 919 0000 AAAAAAAA 		.word	-1431655766
 920              		.text
 921              	.Letext0:
 922              		.file 3 "C:/ArmToolChain/arm-none-eabi/include/machine/_default_types.h"
 923              		.file 4 "C:/ArmToolChain/arm-none-eabi/include/sys/_stdint.h"
 924              		.file 5 "ThirdParty/FreeRTOS/include/projdefs.h"
 925              		.file 6 "ThirdParty/FreeRTOS/include/FreeRTOSConfig.h"
 926              		.file 7 "ThirdParty/FreeRTOS/include/task.h"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 port.c
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:19     .text.prvTaskExitError:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:24     .text.prvTaskExitError:00000000 prvTaskExitError
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:104    .text.prvTaskExitError:0000003c $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:918    .data.uxCriticalNesting:00000000 uxCriticalNesting
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:109    .text.prvPortStartFirstTask:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:114    .text.prvPortStartFirstTask:00000000 prvPortStartFirstTask
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:134    .text.prvPortStartFirstTask:0000001a $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:134    .text.prvPortStartFirstTask:0000001c $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:144    .text.pxPortInitialiseStack:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:150    .text.pxPortInitialiseStack:00000000 pxPortInitialiseStack
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:194    .text.pxPortInitialiseStack:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:199    .text.SVC_Handler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:205    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:227    .text.SVC_Handler:00000020 pxCurrentTCBConst2
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:227    .text.SVC_Handler:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:237    .text.vPortEndScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:243    .text.vPortEndScheduler:00000000 vPortEndScheduler
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:284    .text.vPortEndScheduler:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:289    .text.vPortEnterCritical:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:295    .text.vPortEnterCritical:00000000 vPortEnterCritical
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:366    .text.vPortEnterCritical:00000040 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:371    .text.vPortExitCritical:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:377    .text.vPortExitCritical:00000000 vPortExitCritical
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:444    .text.vPortExitCritical:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:449    .text.PendSV_Handler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:455    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:490    .text.PendSV_Handler:00000040 pxCurrentTCBConst
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:490    .text.PendSV_Handler:00000040 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:500    .text.SysTick_Handler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:506    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:572    .text.vPortSetupTimerInterrupt:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:578    .text.vPortSetupTimerInterrupt:00000000 vPortSetupTimerInterrupt
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:613    .text.vPortSetupTimerInterrupt:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:619    .text.xPortStartScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:625    .text.xPortStartScheduler:00000000 xPortStartScheduler
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:783    .text.xPortStartScheduler:000000b0 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:912    .bss.ucMaxSysCallPriority:00000000 ucMaxSysCallPriority
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:907    .bss.ulMaxPRIGROUPValue:00000000 ulMaxPRIGROUPValue
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:791    .text.vPortValidateInterruptPriority:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:797    .text.vPortValidateInterruptPriority:00000000 vPortValidateInterruptPriority
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:897    .text.vPortValidateInterruptPriority:00000050 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:904    .bss.ulMaxPRIGROUPValue:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:913    .bss.ucMaxSysCallPriority:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccomQmfs.s:915    .data.uxCriticalNesting:00000000 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
SystemCoreClock
