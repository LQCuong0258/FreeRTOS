ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/printf.c"
  18              		.section	.text._out_buffer,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	_out_buffer:
  25              	.LVL0:
  26              	.LFB0:
   1:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:Core/Src/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:Core/Src/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:Core/Src/printf.c **** //
   5:Core/Src/printf.c **** // \license The MIT License (MIT)
   6:Core/Src/printf.c **** //
   7:Core/Src/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Core/Src/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:Core/Src/printf.c **** // in the Software without restriction, including without limitation the rights
  10:Core/Src/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Core/Src/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:Core/Src/printf.c **** // furnished to do so, subject to the following conditions:
  13:Core/Src/printf.c **** //
  14:Core/Src/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:Core/Src/printf.c **** // all copies or substantial portions of the Software.
  16:Core/Src/printf.c **** //
  17:Core/Src/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Core/Src/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Core/Src/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Core/Src/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Core/Src/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Core/Src/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:Core/Src/printf.c **** // THE SOFTWARE.
  24:Core/Src/printf.c **** //
  25:Core/Src/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:Core/Src/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:Core/Src/printf.c **** //        safe and reentrant!
  28:Core/Src/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:Core/Src/printf.c **** //        malloc for printf (and may not be thread safe).
  30:Core/Src/printf.c **** //
  31:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 2


  33:Core/Src/printf.c **** #include <stdbool.h>
  34:Core/Src/printf.c **** #include <stdint.h>
  35:Core/Src/printf.c **** 
  36:Core/Src/printf.c **** #include "printf.h"
  37:Core/Src/printf.c **** 
  38:Core/Src/printf.c **** 
  39:Core/Src/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:Core/Src/printf.c **** // printf_config.h header file
  41:Core/Src/printf.c **** // default: undefined
  42:Core/Src/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:Core/Src/printf.c **** #include "printf_config.h"
  44:Core/Src/printf.c **** #endif
  45:Core/Src/printf.c **** 
  46:Core/Src/printf.c **** 
  47:Core/Src/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  48:Core/Src/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  49:Core/Src/printf.c **** // default: 32 byte
  50:Core/Src/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  51:Core/Src/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  52:Core/Src/printf.c **** #endif
  53:Core/Src/printf.c **** 
  54:Core/Src/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  55:Core/Src/printf.c **** // float number including padded zeros (dynamically created on stack)
  56:Core/Src/printf.c **** // default: 32 byte
  57:Core/Src/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  58:Core/Src/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  59:Core/Src/printf.c **** #endif
  60:Core/Src/printf.c **** 
  61:Core/Src/printf.c **** // support for the floating point type (%f)
  62:Core/Src/printf.c **** // default: activated
  63:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  64:Core/Src/printf.c **** #define PRINTF_SUPPORT_FLOAT
  65:Core/Src/printf.c **** #endif
  66:Core/Src/printf.c **** 
  67:Core/Src/printf.c **** // support for exponential floating point notation (%e/%g)
  68:Core/Src/printf.c **** // default: activated
  69:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  70:Core/Src/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  71:Core/Src/printf.c **** #endif
  72:Core/Src/printf.c **** 
  73:Core/Src/printf.c **** // define the default floating point precision
  74:Core/Src/printf.c **** // default: 6 digits
  75:Core/Src/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  76:Core/Src/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  77:Core/Src/printf.c **** #endif
  78:Core/Src/printf.c **** 
  79:Core/Src/printf.c **** // define the largest float suitable to print with %f
  80:Core/Src/printf.c **** // default: 1e9
  81:Core/Src/printf.c **** #ifndef PRINTF_MAX_FLOAT
  82:Core/Src/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  83:Core/Src/printf.c **** #endif
  84:Core/Src/printf.c **** 
  85:Core/Src/printf.c **** // support for the long long types (%llu or %p)
  86:Core/Src/printf.c **** // default: activated
  87:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  88:Core/Src/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  89:Core/Src/printf.c **** #endif
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 3


  90:Core/Src/printf.c **** 
  91:Core/Src/printf.c **** // support for the ptrdiff_t type (%t)
  92:Core/Src/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  93:Core/Src/printf.c **** // default: activated
  94:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  95:Core/Src/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  96:Core/Src/printf.c **** #endif
  97:Core/Src/printf.c **** 
  98:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  99:Core/Src/printf.c **** 
 100:Core/Src/printf.c **** // internal flag definitions
 101:Core/Src/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 102:Core/Src/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 103:Core/Src/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 104:Core/Src/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 105:Core/Src/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 106:Core/Src/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 107:Core/Src/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 108:Core/Src/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 109:Core/Src/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 110:Core/Src/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 111:Core/Src/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 112:Core/Src/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 113:Core/Src/printf.c **** 
 114:Core/Src/printf.c **** 
 115:Core/Src/printf.c **** // import float.h for DBL_MAX
 116:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 117:Core/Src/printf.c **** #include <float.h>
 118:Core/Src/printf.c **** #endif
 119:Core/Src/printf.c **** 
 120:Core/Src/printf.c **** 
 121:Core/Src/printf.c **** // output function type
 122:Core/Src/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 123:Core/Src/printf.c **** 
 124:Core/Src/printf.c **** 
 125:Core/Src/printf.c **** // wrapper (used as buffer) for output function type
 126:Core/Src/printf.c **** typedef struct {
 127:Core/Src/printf.c ****   void  (*fct)(char character, void* arg);
 128:Core/Src/printf.c ****   void* arg;
 129:Core/Src/printf.c **** } out_fct_wrap_type;
 130:Core/Src/printf.c **** 
 131:Core/Src/printf.c **** 
 132:Core/Src/printf.c **** // internal buffer output
 133:Core/Src/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 134:Core/Src/printf.c **** {
  27              		.loc 1 134 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 135:Core/Src/printf.c ****   if (idx < maxlen) {
  32              		.loc 1 135 3 view .LVU1
  33              		.loc 1 135 6 is_stmt 0 view .LVU2
  34 0000 9A42     		cmp	r2, r3
  35 0002 00D2     		bcs	.L1
 136:Core/Src/printf.c ****     ((char*)buffer)[idx] = character;
  36              		.loc 1 136 5 is_stmt 1 view .LVU3
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 4


  37              		.loc 1 136 26 is_stmt 0 view .LVU4
  38 0004 8854     		strb	r0, [r1, r2]
  39              	.L1:
 137:Core/Src/printf.c ****   }
 138:Core/Src/printf.c **** }
  40              		.loc 1 138 1 view .LVU5
  41 0006 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE0:
  45              		.section	.text._out_null,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	_out_null:
  52              	.LVL1:
  53              	.LFB1:
 139:Core/Src/printf.c **** 
 140:Core/Src/printf.c **** 
 141:Core/Src/printf.c **** // internal null output
 142:Core/Src/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 143:Core/Src/printf.c **** {
  54              		.loc 1 143 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 144:Core/Src/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  59              		.loc 1 144 3 view .LVU7
  60              		.loc 1 144 20 view .LVU8
  61              		.loc 1 144 34 view .LVU9
  62              		.loc 1 144 45 view .LVU10
 145:Core/Src/printf.c **** }
  63              		.loc 1 145 1 is_stmt 0 view .LVU11
  64 0000 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE1:
  68              		.section	.text._out_fct,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	_out_fct:
  75              	.LVL2:
  76              	.LFB3:
 146:Core/Src/printf.c **** 
 147:Core/Src/printf.c **** 
 148:Core/Src/printf.c **** // internal _putchar wrapper
 149:Core/Src/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 150:Core/Src/printf.c **** {
 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 152:Core/Src/printf.c ****   if (character) {
 153:Core/Src/printf.c ****     _putchar(character);
 154:Core/Src/printf.c ****   }
 155:Core/Src/printf.c **** }
 156:Core/Src/printf.c **** 
 157:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 5


 158:Core/Src/printf.c **** // internal output function wrapper
 159:Core/Src/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 160:Core/Src/printf.c **** {
  77              		.loc 1 160 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  81              		.loc 1 161 3 view .LVU13
  82              		.loc 1 161 14 view .LVU14
 162:Core/Src/printf.c ****   if (character) {
  83              		.loc 1 162 3 view .LVU15
  84              		.loc 1 162 6 is_stmt 0 view .LVU16
  85 0000 20B1     		cbz	r0, .L7
 160:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  86              		.loc 1 160 1 view .LVU17
  87 0002 08B5     		push	{r3, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 3, -8
  91              		.cfi_offset 14, -4
 163:Core/Src/printf.c ****     // buffer is the output fct pointer
 164:Core/Src/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
  92              		.loc 1 164 5 is_stmt 1 view .LVU18
  93              		.loc 1 164 33 is_stmt 0 view .LVU19
  94 0004 0A68     		ldr	r2, [r1]
  95              	.LVL3:
  96              		.loc 1 164 6 view .LVU20
  97 0006 4968     		ldr	r1, [r1, #4]
  98              	.LVL4:
  99              		.loc 1 164 6 view .LVU21
 100 0008 9047     		blx	r2
 101              	.LVL5:
 165:Core/Src/printf.c ****   }
 166:Core/Src/printf.c **** }
 102              		.loc 1 166 1 view .LVU22
 103 000a 08BD     		pop	{r3, pc}
 104              	.LVL6:
 105              	.L7:
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 0
 108              		.cfi_restore 3
 109              		.cfi_restore 14
 110              		.loc 1 166 1 view .LVU23
 111 000c 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE3:
 115              		.section	.text._atoi,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	_atoi:
 122              	.LVL7:
 123              	.LFB6:
 167:Core/Src/printf.c **** 
 168:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 6


 169:Core/Src/printf.c **** // internal secure strlen
 170:Core/Src/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 171:Core/Src/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 172:Core/Src/printf.c **** {
 173:Core/Src/printf.c ****   const char* s;
 174:Core/Src/printf.c ****   for (s = str; *s && maxsize--; ++s);
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 176:Core/Src/printf.c **** }
 177:Core/Src/printf.c **** 
 178:Core/Src/printf.c **** 
 179:Core/Src/printf.c **** // internal test if char is a digit (0-9)
 180:Core/Src/printf.c **** // \return true if char is a digit
 181:Core/Src/printf.c **** static inline bool _is_digit(char ch)
 182:Core/Src/printf.c **** {
 183:Core/Src/printf.c ****   return (ch >= '0') && (ch <= '9');
 184:Core/Src/printf.c **** }
 185:Core/Src/printf.c **** 
 186:Core/Src/printf.c **** 
 187:Core/Src/printf.c **** // internal ASCII string to unsigned int conversion
 188:Core/Src/printf.c **** static unsigned int _atoi(const char** str)
 189:Core/Src/printf.c **** {
 124              		.loc 1 189 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              		.loc 1 189 1 is_stmt 0 view .LVU25
 130 0000 0146     		mov	r1, r0
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 131              		.loc 1 190 3 is_stmt 1 view .LVU26
 132              	.LVL8:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 133              		.loc 1 191 3 view .LVU27
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 134              		.loc 1 190 16 is_stmt 0 view .LVU28
 135 0002 0020     		movs	r0, #0
 136              	.LVL9:
 137              		.loc 1 191 9 view .LVU29
 138 0004 08E0     		b	.L11
 139              	.LVL10:
 140              	.L12:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 141              		.loc 1 192 5 is_stmt 1 view .LVU30
 142              		.loc 1 192 11 is_stmt 0 view .LVU31
 143 0006 00EB8000 		add	r0, r0, r0, lsl #2
 144              	.LVL11:
 145              		.loc 1 192 42 view .LVU32
 146 000a 531C     		adds	r3, r2, #1
 147 000c 0B60     		str	r3, [r1]
 148              		.loc 1 192 34 view .LVU33
 149 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 150              		.loc 1 192 17 view .LVU34
 151 0010 03EB4003 		add	r3, r3, r0, lsl #1
 152              		.loc 1 192 7 view .LVU35
 153 0014 A3F13000 		sub	r0, r3, #48
 154              	.LVL12:
 155              	.L11:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 7


 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 156              		.loc 1 191 10 is_stmt 1 view .LVU36
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 157              		.loc 1 191 21 is_stmt 0 view .LVU37
 158 0018 0A68     		ldr	r2, [r1]
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 159              		.loc 1 191 10 view .LVU38
 160 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 161              	.LVL13:
 162              	.LBB20:
 163              	.LBI20:
 181:Core/Src/printf.c **** {
 164              		.loc 1 181 20 is_stmt 1 view .LVU39
 165              	.LBB21:
 183:Core/Src/printf.c **** }
 166              		.loc 1 183 3 view .LVU40
 183:Core/Src/printf.c **** }
 167              		.loc 1 183 22 is_stmt 0 view .LVU41
 168 001c 303B     		subs	r3, r3, #48
 169 001e DBB2     		uxtb	r3, r3
 170              	.LVL14:
 183:Core/Src/printf.c **** }
 171              		.loc 1 183 22 view .LVU42
 172              	.LBE21:
 173              	.LBE20:
 191:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 174              		.loc 1 191 10 discriminator 1 view .LVU43
 175 0020 092B     		cmp	r3, #9
 176 0022 F0D9     		bls	.L12
 193:Core/Src/printf.c ****   }
 194:Core/Src/printf.c ****   return i;
 177              		.loc 1 194 3 is_stmt 1 view .LVU44
 195:Core/Src/printf.c **** }
 178              		.loc 1 195 1 is_stmt 0 view .LVU45
 179 0024 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE6:
 183              		.section	.text._out_rev,"ax",%progbits
 184              		.align	1
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	_out_rev:
 190              	.LVL15:
 191              	.LFB7:
 196:Core/Src/printf.c **** 
 197:Core/Src/printf.c **** 
 198:Core/Src/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 199:Core/Src/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 200:Core/Src/printf.c **** {
 192              		.loc 1 200 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 16, pretend = 0, frame = 8
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		.loc 1 200 1 is_stmt 0 view .LVU47
 197 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 198              	.LCFI2:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 8


 199              		.cfi_def_cfa_offset 36
 200              		.cfi_offset 4, -36
 201              		.cfi_offset 5, -32
 202              		.cfi_offset 6, -28
 203              		.cfi_offset 7, -24
 204              		.cfi_offset 8, -20
 205              		.cfi_offset 9, -16
 206              		.cfi_offset 10, -12
 207              		.cfi_offset 11, -8
 208              		.cfi_offset 14, -4
 209 0004 83B0     		sub	sp, sp, #12
 210              	.LCFI3:
 211              		.cfi_def_cfa_offset 48
 212 0006 0546     		mov	r5, r0
 213 0008 0E46     		mov	r6, r1
 214 000a 9346     		mov	fp, r2
 215 000c 1F46     		mov	r7, r3
 216 000e DDF830A0 		ldr	r10, [sp, #48]
 217 0012 0D9C     		ldr	r4, [sp, #52]
 218 0014 DDF83890 		ldr	r9, [sp, #56]
 201:Core/Src/printf.c ****   const size_t start_idx = idx;
 219              		.loc 1 201 3 is_stmt 1 view .LVU48
 220              	.LVL16:
 202:Core/Src/printf.c **** 
 203:Core/Src/printf.c ****   // pad spaces up to given width
 204:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 221              		.loc 1 204 3 view .LVU49
 222              		.loc 1 204 6 is_stmt 0 view .LVU50
 223 0018 0F9B     		ldr	r3, [sp, #60]
 224              	.LVL17:
 225              		.loc 1 204 6 view .LVU51
 226 001a 13F0030F 		tst	r3, #3
 227 001e 19D1     		bne	.L15
 228              	.LBB22:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 229              		.loc 1 205 17 view .LVU52
 230 0020 A046     		mov	r8, r4
 231              	.LBE22:
 232 0022 0192     		str	r2, [sp, #4]
 233              	.LVL18:
 234              	.L14:
 235              	.LBB23:
 236              		.loc 1 205 28 is_stmt 1 discriminator 1 view .LVU53
 237 0024 C845     		cmp	r8, r9
 238 0026 09D2     		bcs	.L25
 206:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 239              		.loc 1 206 7 view .LVU54
 240 0028 02F1010B 		add	fp, r2, #1
 241              	.LVL19:
 242              		.loc 1 206 7 is_stmt 0 view .LVU55
 243 002c 3B46     		mov	r3, r7
 244 002e 3146     		mov	r1, r6
 245 0030 2020     		movs	r0, #32
 246 0032 A847     		blx	r5
 247              	.LVL20:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 248              		.loc 1 205 38 is_stmt 1 discriminator 3 view .LVU56
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 9


 249 0034 08F10108 		add	r8, r8, #1
 250              	.LVL21:
 251              		.loc 1 206 7 is_stmt 0 view .LVU57
 252 0038 5A46     		mov	r2, fp
 253 003a F3E7     		b	.L14
 254              	.LVL22:
 255              	.L25:
 256              		.loc 1 206 7 view .LVU58
 257 003c DDF804B0 		ldr	fp, [sp, #4]
 258 0040 08E0     		b	.L15
 259              	.LVL23:
 260              	.L18:
 261              		.loc 1 206 7 view .LVU59
 262              	.LBE23:
 207:Core/Src/printf.c ****     }
 208:Core/Src/printf.c ****   }
 209:Core/Src/printf.c **** 
 210:Core/Src/printf.c ****   // reverse string
 211:Core/Src/printf.c ****   while (len) {
 212:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 263              		.loc 1 212 5 is_stmt 1 view .LVU60
 264 0042 013C     		subs	r4, r4, #1
 265              	.LVL24:
 266              		.loc 1 212 5 is_stmt 0 view .LVU61
 267 0044 02F10108 		add	r8, r2, #1
 268              	.LVL25:
 269              		.loc 1 212 5 view .LVU62
 270 0048 3B46     		mov	r3, r7
 271 004a 3146     		mov	r1, r6
 272 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 273 0050 A847     		blx	r5
 274              	.LVL26:
 275 0052 4246     		mov	r2, r8
 276              	.LVL27:
 277              	.L15:
 211:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 278              		.loc 1 211 10 is_stmt 1 view .LVU63
 279 0054 002C     		cmp	r4, #0
 280 0056 F4D1     		bne	.L18
 213:Core/Src/printf.c ****   }
 214:Core/Src/printf.c **** 
 215:Core/Src/printf.c ****   // append pad spaces up to given width
 216:Core/Src/printf.c ****   if (flags & FLAGS_LEFT) {
 281              		.loc 1 216 3 view .LVU64
 282              		.loc 1 216 6 is_stmt 0 view .LVU65
 283 0058 0F9B     		ldr	r3, [sp, #60]
 284 005a 13F0020F 		tst	r3, #2
 285 005e 03D1     		bne	.L19
 286              	.LVL28:
 287              	.L13:
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 218:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 219:Core/Src/printf.c ****     }
 220:Core/Src/printf.c ****   }
 221:Core/Src/printf.c **** 
 222:Core/Src/printf.c ****   return idx;
 223:Core/Src/printf.c **** }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 10


 288              		.loc 1 223 1 view .LVU66
 289 0060 1046     		mov	r0, r2
 290 0062 03B0     		add	sp, sp, #12
 291              	.LCFI4:
 292              		.cfi_remember_state
 293              		.cfi_def_cfa_offset 36
 294              		@ sp needed
 295 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 296              	.LVL29:
 297              	.L19:
 298              	.LCFI5:
 299              		.cfi_restore_state
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 300              		.loc 1 217 28 is_stmt 1 view .LVU67
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 301              		.loc 1 217 16 is_stmt 0 view .LVU68
 302 0068 A2EB0B03 		sub	r3, r2, fp
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 303              		.loc 1 217 28 view .LVU69
 304 006c 4B45     		cmp	r3, r9
 305 006e F7D2     		bcs	.L13
 218:Core/Src/printf.c ****     }
 306              		.loc 1 218 7 is_stmt 1 view .LVU70
 307 0070 541C     		adds	r4, r2, #1
 308              	.LVL30:
 218:Core/Src/printf.c ****     }
 309              		.loc 1 218 7 is_stmt 0 view .LVU71
 310 0072 3B46     		mov	r3, r7
 311 0074 3146     		mov	r1, r6
 312 0076 2020     		movs	r0, #32
 313 0078 A847     		blx	r5
 314              	.LVL31:
 315 007a 2246     		mov	r2, r4
 316 007c F4E7     		b	.L19
 317              		.cfi_endproc
 318              	.LFE7:
 320              		.section	.text._ntoa_format,"ax",%progbits
 321              		.align	1
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	_ntoa_format:
 327              	.LVL32:
 328              	.LFB8:
 224:Core/Src/printf.c **** 
 225:Core/Src/printf.c **** 
 226:Core/Src/printf.c **** // internal itoa format
 227:Core/Src/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 228:Core/Src/printf.c **** {
 329              		.loc 1 228 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 28, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		.loc 1 228 1 is_stmt 0 view .LVU73
 334 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 335              	.LCFI6:
 336              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 11


 337              		.cfi_offset 4, -28
 338              		.cfi_offset 5, -24
 339              		.cfi_offset 6, -20
 340              		.cfi_offset 7, -16
 341              		.cfi_offset 8, -12
 342              		.cfi_offset 9, -8
 343              		.cfi_offset 14, -4
 344 0004 85B0     		sub	sp, sp, #20
 345              	.LCFI7:
 346              		.cfi_def_cfa_offset 48
 347 0006 9946     		mov	r9, r3
 348 0008 0C9D     		ldr	r5, [sp, #48]
 349 000a 0D9C     		ldr	r4, [sp, #52]
 350 000c 9DF83880 		ldrb	r8, [sp, #56]	@ zero_extendqisi2
 351 0010 DDF840E0 		ldr	lr, [sp, #64]
 352 0014 119F     		ldr	r7, [sp, #68]
 353 0016 129E     		ldr	r6, [sp, #72]
 229:Core/Src/printf.c ****   // pad leading zeros
 230:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 354              		.loc 1 230 3 is_stmt 1 view .LVU74
 355              		.loc 1 230 6 is_stmt 0 view .LVU75
 356 0018 16F0020F 		tst	r6, #2
 357 001c 21D1     		bne	.L27
 231:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 358              		.loc 1 231 5 is_stmt 1 view .LVU76
 359              		.loc 1 231 8 is_stmt 0 view .LVU77
 360 001e 7FB1     		cbz	r7, .L30
 361              		.loc 1 231 15 discriminator 1 view .LVU78
 362 0020 16F0010F 		tst	r6, #1
 363 0024 0CD0     		beq	.L30
 364              		.loc 1 231 42 discriminator 2 view .LVU79
 365 0026 B8F1000F 		cmp	r8, #0
 366 002a 02D1     		bne	.L29
 367              		.loc 1 231 55 discriminator 3 view .LVU80
 368 002c 16F00C0F 		tst	r6, #12
 369 0030 06D0     		beq	.L30
 370              	.L29:
 232:Core/Src/printf.c ****       width--;
 371              		.loc 1 232 7 is_stmt 1 view .LVU81
 372              		.loc 1 232 12 is_stmt 0 view .LVU82
 373 0032 013F     		subs	r7, r7, #1
 374              	.LVL33:
 375              		.loc 1 232 12 view .LVU83
 376 0034 04E0     		b	.L30
 377              	.LVL34:
 378              	.L32:
 233:Core/Src/printf.c ****     }
 234:Core/Src/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 235:Core/Src/printf.c ****       buf[len++] = '0';
 379              		.loc 1 235 7 is_stmt 1 view .LVU84
 380              		.loc 1 235 18 is_stmt 0 view .LVU85
 381 0036 4FF0300C 		mov	ip, #48
 382 003a 05F804C0 		strb	ip, [r5, r4]
 383              		.loc 1 235 14 view .LVU86
 384 003e 0134     		adds	r4, r4, #1
 385              	.LVL35:
 386              	.L30:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 12


 234:Core/Src/printf.c ****       buf[len++] = '0';
 387              		.loc 1 234 25 is_stmt 1 view .LVU87
 388 0040 7445     		cmp	r4, lr
 389 0042 01D2     		bcs	.L33
 234:Core/Src/printf.c ****       buf[len++] = '0';
 390              		.loc 1 234 25 is_stmt 0 discriminator 1 view .LVU88
 391 0044 1F2C     		cmp	r4, #31
 392 0046 F6D9     		bls	.L32
 393              	.L33:
 236:Core/Src/printf.c ****     }
 237:Core/Src/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 394              		.loc 1 237 53 is_stmt 1 view .LVU89
 395 0048 16F0010F 		tst	r6, #1
 396 004c 09D0     		beq	.L27
 397              		.loc 1 237 36 is_stmt 0 discriminator 1 view .LVU90
 398 004e BC42     		cmp	r4, r7
 399 0050 07D2     		bcs	.L27
 400              		.loc 1 237 53 discriminator 2 view .LVU91
 401 0052 1F2C     		cmp	r4, #31
 402 0054 05D8     		bhi	.L27
 238:Core/Src/printf.c ****       buf[len++] = '0';
 403              		.loc 1 238 7 is_stmt 1 view .LVU92
 404              	.LVL36:
 405              		.loc 1 238 18 is_stmt 0 view .LVU93
 406 0056 4FF0300C 		mov	ip, #48
 407 005a 05F804C0 		strb	ip, [r5, r4]
 408              		.loc 1 238 14 view .LVU94
 409 005e 0134     		adds	r4, r4, #1
 410              	.LVL37:
 411              		.loc 1 238 14 view .LVU95
 412 0060 F2E7     		b	.L33
 413              	.LVL38:
 414              	.L27:
 239:Core/Src/printf.c ****     }
 240:Core/Src/printf.c ****   }
 241:Core/Src/printf.c **** 
 242:Core/Src/printf.c ****   // handle hash
 243:Core/Src/printf.c ****   if (flags & FLAGS_HASH) {
 415              		.loc 1 243 3 is_stmt 1 view .LVU96
 416              		.loc 1 243 6 is_stmt 0 view .LVU97
 417 0062 16F0100F 		tst	r6, #16
 418 0066 14D0     		beq	.L35
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 419              		.loc 1 244 5 is_stmt 1 view .LVU98
 420              		.loc 1 244 8 is_stmt 0 view .LVU99
 421 0068 16F4806F 		tst	r6, #1024
 422 006c 04D1     		bne	.L36
 423              		.loc 1 244 36 discriminator 1 view .LVU100
 424 006e 1CB1     		cbz	r4, .L36
 425              		.loc 1 244 43 discriminator 2 view .LVU101
 426 0070 7445     		cmp	r4, lr
 427 0072 22D0     		beq	.L37
 428              		.loc 1 244 61 discriminator 3 view .LVU102
 429 0074 BC42     		cmp	r4, r7
 430 0076 20D0     		beq	.L37
 431              	.LVL39:
 432              	.L36:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 13


 245:Core/Src/printf.c ****       len--;
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 247:Core/Src/printf.c ****         len--;
 248:Core/Src/printf.c ****       }
 249:Core/Src/printf.c ****     }
 250:Core/Src/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 433              		.loc 1 250 5 is_stmt 1 view .LVU103
 434              		.loc 1 250 8 is_stmt 0 view .LVU104
 435 0078 0F9B     		ldr	r3, [sp, #60]
 436 007a 102B     		cmp	r3, #16
 437 007c 36D0     		beq	.L47
 438              	.LVL40:
 439              	.L39:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 252:Core/Src/printf.c ****     }
 253:Core/Src/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 255:Core/Src/printf.c ****     }
 256:Core/Src/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 440              		.loc 1 256 10 is_stmt 1 view .LVU105
 441              		.loc 1 256 13 is_stmt 0 view .LVU106
 442 007e 0F9B     		ldr	r3, [sp, #60]
 443 0080 022B     		cmp	r3, #2
 444 0082 3ED0     		beq	.L48
 445              	.L40:
 446              	.LVL41:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 258:Core/Src/printf.c ****     }
 259:Core/Src/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 447              		.loc 1 259 5 is_stmt 1 view .LVU107
 448              		.loc 1 259 8 is_stmt 0 view .LVU108
 449 0084 1F2C     		cmp	r4, #31
 450 0086 0ED8     		bhi	.L41
 260:Core/Src/printf.c ****       buf[len++] = '0';
 451              		.loc 1 260 7 is_stmt 1 view .LVU109
 452              	.LVL42:
 453              		.loc 1 260 18 is_stmt 0 view .LVU110
 454 0088 4FF0300C 		mov	ip, #48
 455 008c 05F804C0 		strb	ip, [r5, r4]
 456              		.loc 1 260 14 view .LVU111
 457 0090 0134     		adds	r4, r4, #1
 458              	.LVL43:
 459              	.L35:
 261:Core/Src/printf.c ****     }
 262:Core/Src/printf.c ****   }
 263:Core/Src/printf.c **** 
 264:Core/Src/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 460              		.loc 1 264 3 is_stmt 1 view .LVU112
 461              		.loc 1 264 6 is_stmt 0 view .LVU113
 462 0092 1F2C     		cmp	r4, #31
 463 0094 07D8     		bhi	.L41
 265:Core/Src/printf.c ****     if (negative) {
 464              		.loc 1 265 5 is_stmt 1 view .LVU114
 465              		.loc 1 265 8 is_stmt 0 view .LVU115
 466 0096 B8F1000F 		cmp	r8, #0
 467 009a 3AD0     		beq	.L42
 266:Core/Src/printf.c ****       buf[len++] = '-';
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 14


 468              		.loc 1 266 7 is_stmt 1 view .LVU116
 469              	.LVL44:
 470              		.loc 1 266 18 is_stmt 0 view .LVU117
 471 009c 4FF02D0C 		mov	ip, #45
 472 00a0 05F804C0 		strb	ip, [r5, r4]
 473              		.loc 1 266 14 view .LVU118
 474 00a4 0134     		adds	r4, r4, #1
 475              	.LVL45:
 476              	.L41:
 267:Core/Src/printf.c ****     }
 268:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 269:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 270:Core/Src/printf.c ****     }
 271:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 273:Core/Src/printf.c ****     }
 274:Core/Src/printf.c ****   }
 275:Core/Src/printf.c **** 
 276:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 477              		.loc 1 276 3 is_stmt 1 view .LVU119
 478              		.loc 1 276 10 is_stmt 0 view .LVU120
 479 00a6 0396     		str	r6, [sp, #12]
 480 00a8 0297     		str	r7, [sp, #8]
 481 00aa 0194     		str	r4, [sp, #4]
 482 00ac 0095     		str	r5, [sp]
 483 00ae 4B46     		mov	r3, r9
 484 00b0 FFF7FEFF 		bl	_out_rev
 485              	.LVL46:
 277:Core/Src/printf.c **** }
 486              		.loc 1 277 1 view .LVU121
 487 00b4 05B0     		add	sp, sp, #20
 488              	.LCFI8:
 489              		.cfi_remember_state
 490              		.cfi_def_cfa_offset 28
 491              		@ sp needed
 492 00b6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 493              	.LVL47:
 494              	.L37:
 495              	.LCFI9:
 496              		.cfi_restore_state
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 497              		.loc 1 245 7 is_stmt 1 view .LVU122
 246:Core/Src/printf.c ****         len--;
 498              		.loc 1 246 7 view .LVU123
 246:Core/Src/printf.c ****         len--;
 499              		.loc 1 246 10 is_stmt 0 view .LVU124
 500 00ba B4F1010C 		subs	ip, r4, #1
 501              	.LVL48:
 246:Core/Src/printf.c ****         len--;
 502              		.loc 1 246 10 view .LVU125
 503 00be 13D0     		beq	.L44
 246:Core/Src/printf.c ****         len--;
 504              		.loc 1 246 15 discriminator 1 view .LVU126
 505 00c0 0F9B     		ldr	r3, [sp, #60]
 506              	.LVL49:
 246:Core/Src/printf.c ****         len--;
 507              		.loc 1 246 15 discriminator 1 view .LVU127
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 15


 508 00c2 102B     		cmp	r3, #16
 509 00c4 0ED0     		beq	.L49
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 510              		.loc 1 245 10 view .LVU128
 511 00c6 6446     		mov	r4, ip
 512              	.LVL50:
 513              	.L38:
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 514              		.loc 1 253 10 is_stmt 1 view .LVU129
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 515              		.loc 1 253 13 is_stmt 0 view .LVU130
 516 00c8 0F9B     		ldr	r3, [sp, #60]
 517 00ca 102B     		cmp	r3, #16
 518 00cc D7D1     		bne	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 519              		.loc 1 253 28 discriminator 1 view .LVU131
 520 00ce 16F0200F 		tst	r6, #32
 521 00d2 D4D0     		beq	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 522              		.loc 1 253 57 discriminator 2 view .LVU132
 523 00d4 1F2C     		cmp	r4, #31
 524 00d6 D2D8     		bhi	.L39
 254:Core/Src/printf.c ****     }
 525              		.loc 1 254 7 is_stmt 1 view .LVU133
 526              	.LVL51:
 254:Core/Src/printf.c ****     }
 527              		.loc 1 254 18 is_stmt 0 view .LVU134
 528 00d8 4FF0580C 		mov	ip, #88
 529 00dc 05F804C0 		strb	ip, [r5, r4]
 254:Core/Src/printf.c ****     }
 530              		.loc 1 254 14 view .LVU135
 531 00e0 0134     		adds	r4, r4, #1
 532              	.LVL52:
 254:Core/Src/printf.c ****     }
 533              		.loc 1 254 18 view .LVU136
 534 00e2 CFE7     		b	.L40
 535              	.LVL53:
 536              	.L49:
 247:Core/Src/printf.c ****       }
 537              		.loc 1 247 9 is_stmt 1 view .LVU137
 247:Core/Src/printf.c ****       }
 538              		.loc 1 247 12 is_stmt 0 view .LVU138
 539 00e4 023C     		subs	r4, r4, #2
 540              	.LVL54:
 247:Core/Src/printf.c ****       }
 541              		.loc 1 247 12 view .LVU139
 542 00e6 C7E7     		b	.L36
 543              	.LVL55:
 544              	.L44:
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 545              		.loc 1 245 10 view .LVU140
 546 00e8 6446     		mov	r4, ip
 547 00ea C5E7     		b	.L36
 548              	.LVL56:
 549              	.L47:
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 550              		.loc 1 250 23 discriminator 1 view .LVU141
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 16


 551 00ec 16F0200F 		tst	r6, #32
 552 00f0 EAD1     		bne	.L38
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 553              		.loc 1 250 53 discriminator 2 view .LVU142
 554 00f2 1F2C     		cmp	r4, #31
 555 00f4 E8D8     		bhi	.L38
 251:Core/Src/printf.c ****     }
 556              		.loc 1 251 7 is_stmt 1 view .LVU143
 557              	.LVL57:
 251:Core/Src/printf.c ****     }
 558              		.loc 1 251 18 is_stmt 0 view .LVU144
 559 00f6 4FF0780C 		mov	ip, #120
 560 00fa 05F804C0 		strb	ip, [r5, r4]
 251:Core/Src/printf.c ****     }
 561              		.loc 1 251 14 view .LVU145
 562 00fe 0134     		adds	r4, r4, #1
 563              	.LVL58:
 251:Core/Src/printf.c ****     }
 564              		.loc 1 251 18 view .LVU146
 565 0100 C0E7     		b	.L40
 566              	.LVL59:
 567              	.L48:
 256:Core/Src/printf.c ****       buf[len++] = 'b';
 568              		.loc 1 256 27 discriminator 1 view .LVU147
 569 0102 1F2C     		cmp	r4, #31
 570 0104 CFD8     		bhi	.L41
 257:Core/Src/printf.c ****     }
 571              		.loc 1 257 7 is_stmt 1 view .LVU148
 572              	.LVL60:
 257:Core/Src/printf.c ****     }
 573              		.loc 1 257 18 is_stmt 0 view .LVU149
 574 0106 4FF0620C 		mov	ip, #98
 575 010a 05F804C0 		strb	ip, [r5, r4]
 257:Core/Src/printf.c ****     }
 576              		.loc 1 257 14 view .LVU150
 577 010e 0134     		adds	r4, r4, #1
 578              	.LVL61:
 257:Core/Src/printf.c ****     }
 579              		.loc 1 257 14 view .LVU151
 580 0110 B8E7     		b	.L40
 581              	.L42:
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 582              		.loc 1 268 10 is_stmt 1 view .LVU152
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 583              		.loc 1 268 13 is_stmt 0 view .LVU153
 584 0112 16F0040F 		tst	r6, #4
 585 0116 05D0     		beq	.L43
 269:Core/Src/printf.c ****     }
 586              		.loc 1 269 7 is_stmt 1 view .LVU154
 587              	.LVL62:
 269:Core/Src/printf.c ****     }
 588              		.loc 1 269 18 is_stmt 0 view .LVU155
 589 0118 4FF02B0C 		mov	ip, #43
 590 011c 05F804C0 		strb	ip, [r5, r4]
 269:Core/Src/printf.c ****     }
 591              		.loc 1 269 14 view .LVU156
 592 0120 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 17


 593              	.LVL63:
 269:Core/Src/printf.c ****     }
 594              		.loc 1 269 14 view .LVU157
 595 0122 C0E7     		b	.L41
 596              	.L43:
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 597              		.loc 1 271 10 is_stmt 1 view .LVU158
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 598              		.loc 1 271 13 is_stmt 0 view .LVU159
 599 0124 16F0080F 		tst	r6, #8
 600 0128 BDD0     		beq	.L41
 272:Core/Src/printf.c ****     }
 601              		.loc 1 272 7 is_stmt 1 view .LVU160
 602              	.LVL64:
 272:Core/Src/printf.c ****     }
 603              		.loc 1 272 18 is_stmt 0 view .LVU161
 604 012a 4FF0200C 		mov	ip, #32
 605 012e 05F804C0 		strb	ip, [r5, r4]
 272:Core/Src/printf.c ****     }
 606              		.loc 1 272 14 view .LVU162
 607 0132 0134     		adds	r4, r4, #1
 608              	.LVL65:
 272:Core/Src/printf.c ****     }
 609              		.loc 1 272 14 view .LVU163
 610 0134 B7E7     		b	.L41
 611              		.cfi_endproc
 612              	.LFE8:
 614              		.section	.text._ntoa_long,"ax",%progbits
 615              		.align	1
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 620              	_ntoa_long:
 621              	.LVL66:
 622              	.LFB9:
 278:Core/Src/printf.c **** 
 279:Core/Src/printf.c **** 
 280:Core/Src/printf.c **** // internal itoa for 'long' type
 281:Core/Src/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 282:Core/Src/printf.c **** {
 623              		.loc 1 282 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 24, pretend = 0, frame = 32
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		.loc 1 282 1 is_stmt 0 view .LVU165
 628 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 629              	.LCFI10:
 630              		.cfi_def_cfa_offset 20
 631              		.cfi_offset 4, -20
 632              		.cfi_offset 5, -16
 633              		.cfi_offset 6, -12
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 91B0     		sub	sp, sp, #68
 637              	.LCFI11:
 638              		.cfi_def_cfa_offset 88
 639 0004 169C     		ldr	r4, [sp, #88]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 18


 640 0006 189D     		ldr	r5, [sp, #96]
 641 0008 1B9E     		ldr	r6, [sp, #108]
 283:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 642              		.loc 1 283 3 is_stmt 1 view .LVU166
 284:Core/Src/printf.c ****   size_t len = 0U;
 643              		.loc 1 284 3 view .LVU167
 644              	.LVL67:
 285:Core/Src/printf.c **** 
 286:Core/Src/printf.c ****   // no hash for 0 values
 287:Core/Src/printf.c ****   if (!value) {
 645              		.loc 1 287 3 view .LVU168
 646              		.loc 1 287 6 is_stmt 0 view .LVU169
 647 000a 0CB9     		cbnz	r4, .L51
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 648              		.loc 1 288 5 is_stmt 1 view .LVU170
 649              		.loc 1 288 11 is_stmt 0 view .LVU171
 650 000c 26F01006 		bic	r6, r6, #16
 651              	.LVL68:
 652              	.L51:
 289:Core/Src/printf.c ****   }
 290:Core/Src/printf.c **** 
 291:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 292:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 653              		.loc 1 292 3 is_stmt 1 view .LVU172
 654              		.loc 1 292 6 is_stmt 0 view .LVU173
 655 0010 16F4806E 		ands	lr, r6, #1024
 656 0014 16D0     		beq	.L57
 657              		.loc 1 292 34 discriminator 1 view .LVU174
 658 0016 64B3     		cbz	r4, .L58
 659 0018 4FF0000E 		mov	lr, #0
 660 001c 12E0     		b	.L57
 661              	.LVL69:
 662              	.L62:
 663              	.LBB24:
 293:Core/Src/printf.c ****     do {
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 664              		.loc 1 295 18 discriminator 1 view .LVU175
 665 001e 0CF1300C 		add	ip, ip, #48
 666              	.LVL70:
 667              		.loc 1 295 18 discriminator 1 view .LVU176
 668 0022 5FFA8CFC 		uxtb	ip, ip
 669              	.LVL71:
 670              	.L55:
 671              		.loc 1 295 14 discriminator 8 view .LVU177
 672 0026 0EF10107 		add	r7, lr, #1
 673              	.LVL72:
 674              		.loc 1 295 18 discriminator 8 view .LVU178
 675 002a 0EF1400E 		add	lr, lr, #64
 676 002e EE44     		add	lr, sp, lr
 677 0030 0EF820CC 		strb	ip, [lr, #-32]
 296:Core/Src/printf.c ****       value /= base;
 678              		.loc 1 296 7 is_stmt 1 view .LVU179
 679              		.loc 1 296 13 is_stmt 0 view .LVU180
 680 0034 B4FBF5FC 		udiv	ip, r4, r5
 681              	.LVL73:
 682              		.loc 1 296 13 view .LVU181
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 19


 683              	.LBE24:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 684              		.loc 1 297 20 is_stmt 1 view .LVU182
 685 0038 AC42     		cmp	r4, r5
 686 003a 1BD3     		bcc	.L53
 687              		.loc 1 297 20 is_stmt 0 discriminator 1 view .LVU183
 688 003c 1F2F     		cmp	r7, #31
 689 003e 19D8     		bhi	.L53
 690              	.LBB25:
 295:Core/Src/printf.c ****       value /= base;
 691              		.loc 1 295 14 discriminator 8 view .LVU184
 692 0040 BE46     		mov	lr, r7
 296:Core/Src/printf.c ****       value /= base;
 693              		.loc 1 296 13 view .LVU185
 694 0042 6446     		mov	r4, ip
 695              	.LVL74:
 696              	.L57:
 296:Core/Src/printf.c ****       value /= base;
 697              		.loc 1 296 13 view .LVU186
 698              	.LBE25:
 293:Core/Src/printf.c ****       const char digit = (char)(value % base);
 699              		.loc 1 293 5 is_stmt 1 view .LVU187
 700              	.LBB26:
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 701              		.loc 1 294 7 view .LVU188
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 702              		.loc 1 294 39 is_stmt 0 view .LVU189
 703 0044 B4FBF5FC 		udiv	ip, r4, r5
 704 0048 05FB1C4C 		mls	ip, r5, ip, r4
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 705              		.loc 1 294 18 view .LVU190
 706 004c 5FFA8CFC 		uxtb	ip, ip
 707              	.LVL75:
 295:Core/Src/printf.c ****       value /= base;
 708              		.loc 1 295 7 is_stmt 1 view .LVU191
 295:Core/Src/printf.c ****       value /= base;
 709              		.loc 1 295 18 is_stmt 0 view .LVU192
 710 0050 BCF1090F 		cmp	ip, #9
 711 0054 E3D9     		bls	.L62
 295:Core/Src/printf.c ****       value /= base;
 712              		.loc 1 295 85 discriminator 2 view .LVU193
 713 0056 16F0200F 		tst	r6, #32
 714 005a 08D0     		beq	.L59
 295:Core/Src/printf.c ****       value /= base;
 715              		.loc 1 295 85 discriminator 4 view .LVU194
 716 005c 4127     		movs	r7, #65
 717              	.L56:
 295:Core/Src/printf.c ****       value /= base;
 718              		.loc 1 295 85 discriminator 7 view .LVU195
 719 005e BC44     		add	ip, ip, r7
 720              	.LVL76:
 295:Core/Src/printf.c ****       value /= base;
 721              		.loc 1 295 85 discriminator 7 view .LVU196
 722 0060 5FFA8CFC 		uxtb	ip, ip
 295:Core/Src/printf.c ****       value /= base;
 723              		.loc 1 295 18 discriminator 7 view .LVU197
 724 0064 ACF10A0C 		sub	ip, ip, #10
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 20


 725 0068 5FFA8CFC 		uxtb	ip, ip
 726 006c DBE7     		b	.L55
 727              	.LVL77:
 728              	.L59:
 295:Core/Src/printf.c ****       value /= base;
 729              		.loc 1 295 85 discriminator 5 view .LVU198
 730 006e 6127     		movs	r7, #97
 731 0070 F5E7     		b	.L56
 732              	.LVL78:
 733              	.L58:
 295:Core/Src/printf.c ****       value /= base;
 734              		.loc 1 295 85 discriminator 5 view .LVU199
 735              	.LBE26:
 284:Core/Src/printf.c **** 
 736              		.loc 1 284 10 view .LVU200
 737 0072 2746     		mov	r7, r4
 738              	.LVL79:
 739              	.L53:
 298:Core/Src/printf.c ****   }
 299:Core/Src/printf.c **** 
 300:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 740              		.loc 1 300 3 is_stmt 1 view .LVU201
 741              		.loc 1 300 10 is_stmt 0 view .LVU202
 742 0074 0696     		str	r6, [sp, #24]
 743 0076 1A9C     		ldr	r4, [sp, #104]
 744 0078 0594     		str	r4, [sp, #20]
 745 007a 199C     		ldr	r4, [sp, #100]
 746 007c 0494     		str	r4, [sp, #16]
 747 007e 0395     		str	r5, [sp, #12]
 748 0080 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 749 0084 0294     		str	r4, [sp, #8]
 750 0086 0197     		str	r7, [sp, #4]
 751 0088 08AC     		add	r4, sp, #32
 752 008a 0094     		str	r4, [sp]
 753 008c FFF7FEFF 		bl	_ntoa_format
 754              	.LVL80:
 301:Core/Src/printf.c **** }
 755              		.loc 1 301 1 view .LVU203
 756 0090 11B0     		add	sp, sp, #68
 757              	.LCFI12:
 758              		.cfi_def_cfa_offset 20
 759              		@ sp needed
 760 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 761              		.loc 1 301 1 view .LVU204
 762              		.cfi_endproc
 763              	.LFE9:
 765              		.global	__aeabi_uldivmod
 766              		.section	.text._ntoa_long_long,"ax",%progbits
 767              		.align	1
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 772              	_ntoa_long_long:
 773              	.LVL81:
 774              	.LFB10:
 302:Core/Src/printf.c **** 
 303:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 21


 304:Core/Src/printf.c **** // internal itoa for 'long long' type
 305:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 306:Core/Src/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 307:Core/Src/printf.c **** {
 775              		.loc 1 307 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 36, pretend = 0, frame = 48
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		.loc 1 307 1 is_stmt 0 view .LVU206
 780 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 781              	.LCFI13:
 782              		.cfi_def_cfa_offset 36
 783              		.cfi_offset 4, -36
 784              		.cfi_offset 5, -32
 785              		.cfi_offset 6, -28
 786              		.cfi_offset 7, -24
 787              		.cfi_offset 8, -20
 788              		.cfi_offset 9, -16
 789              		.cfi_offset 10, -12
 790              		.cfi_offset 11, -8
 791              		.cfi_offset 14, -4
 792 0004 95B0     		sub	sp, sp, #84
 793              	.LCFI14:
 794              		.cfi_def_cfa_offset 120
 795 0006 0990     		str	r0, [sp, #36]
 796 0008 0A91     		str	r1, [sp, #40]
 797 000a 0B92     		str	r2, [sp, #44]
 798 000c 9846     		mov	r8, r3
 799 000e DDF878B0 		ldr	fp, [sp, #120]
 800 0012 DDF87C90 		ldr	r9, [sp, #124]
 801 0016 229D     		ldr	r5, [sp, #136]
 802 0018 239F     		ldr	r7, [sp, #140]
 803 001a 269E     		ldr	r6, [sp, #152]
 308:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 804              		.loc 1 308 3 is_stmt 1 view .LVU207
 309:Core/Src/printf.c ****   size_t len = 0U;
 805              		.loc 1 309 3 view .LVU208
 806              	.LVL82:
 310:Core/Src/printf.c **** 
 311:Core/Src/printf.c ****   // no hash for 0 values
 312:Core/Src/printf.c ****   if (!value) {
 807              		.loc 1 312 3 view .LVU209
 808              		.loc 1 312 6 is_stmt 0 view .LVU210
 809 001c 5BEA0902 		orrs	r2, fp, r9
 810              	.LVL83:
 811              		.loc 1 312 6 view .LVU211
 812 0020 01D1     		bne	.L64
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 813              		.loc 1 313 5 is_stmt 1 view .LVU212
 814              		.loc 1 313 11 is_stmt 0 view .LVU213
 815 0022 26F01006 		bic	r6, r6, #16
 816              	.LVL84:
 817              	.L64:
 314:Core/Src/printf.c ****   }
 315:Core/Src/printf.c **** 
 316:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 317:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 22


 818              		.loc 1 317 3 is_stmt 1 view .LVU214
 819              		.loc 1 317 6 is_stmt 0 view .LVU215
 820 0026 16F48064 		ands	r4, r6, #1024
 821 002a 1ED0     		beq	.L70
 822              		.loc 1 317 34 discriminator 1 view .LVU216
 823 002c 5BEA0902 		orrs	r2, fp, r9
 824 0030 2FD0     		beq	.L71
 825 0032 0024     		movs	r4, #0
 826 0034 19E0     		b	.L70
 827              	.LVL85:
 828              	.L77:
 829              	.LBB27:
 318:Core/Src/printf.c ****     do {
 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 830              		.loc 1 320 18 discriminator 1 view .LVU217
 831 0036 3032     		adds	r2, r2, #48
 832              	.LVL86:
 833              		.loc 1 320 18 discriminator 1 view .LVU218
 834 0038 D3B2     		uxtb	r3, r2
 835              	.LVL87:
 836              	.L68:
 837              		.loc 1 320 14 discriminator 8 view .LVU219
 838 003a 04F1010A 		add	r10, r4, #1
 839              	.LVL88:
 840              		.loc 1 320 18 discriminator 8 view .LVU220
 841 003e 04F15002 		add	r2, r4, #80
 842 0042 0DEB0204 		add	r4, sp, r2
 843 0046 04F8203C 		strb	r3, [r4, #-32]
 321:Core/Src/printf.c ****       value /= base;
 844              		.loc 1 321 7 is_stmt 1 view .LVU221
 845              		.loc 1 321 13 is_stmt 0 view .LVU222
 846 004a 2A46     		mov	r2, r5
 847 004c 3B46     		mov	r3, r7
 848 004e 5846     		mov	r0, fp
 849 0050 4946     		mov	r1, r9
 850 0052 FFF7FEFF 		bl	__aeabi_uldivmod
 851              	.LVL89:
 852              		.loc 1 321 13 view .LVU223
 853              	.LBE27:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 854              		.loc 1 322 20 is_stmt 1 view .LVU224
 855 0056 AB45     		cmp	fp, r5
 856 0058 79EB0709 		sbcs	r9, r9, r7
 857 005c 1BD3     		bcc	.L66
 858              		.loc 1 322 20 is_stmt 0 discriminator 1 view .LVU225
 859 005e BAF11F0F 		cmp	r10, #31
 860 0062 18D8     		bhi	.L66
 861              	.LBB28:
 320:Core/Src/printf.c ****       value /= base;
 862              		.loc 1 320 14 discriminator 8 view .LVU226
 863 0064 5446     		mov	r4, r10
 321:Core/Src/printf.c ****       value /= base;
 864              		.loc 1 321 13 view .LVU227
 865 0066 8346     		mov	fp, r0
 866 0068 8946     		mov	r9, r1
 867              	.LVL90:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 23


 868              	.L70:
 321:Core/Src/printf.c ****       value /= base;
 869              		.loc 1 321 13 view .LVU228
 870              	.LBE28:
 318:Core/Src/printf.c ****       const char digit = (char)(value % base);
 871              		.loc 1 318 5 is_stmt 1 view .LVU229
 872              	.LBB29:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 873              		.loc 1 319 7 view .LVU230
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 874              		.loc 1 319 39 is_stmt 0 view .LVU231
 875 006a 2A46     		mov	r2, r5
 876 006c 3B46     		mov	r3, r7
 877 006e 5846     		mov	r0, fp
 878 0070 4946     		mov	r1, r9
 879 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 880              	.LVL91:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 881              		.loc 1 319 18 view .LVU232
 882 0076 D2B2     		uxtb	r2, r2
 883              	.LVL92:
 320:Core/Src/printf.c ****       value /= base;
 884              		.loc 1 320 7 is_stmt 1 view .LVU233
 320:Core/Src/printf.c ****       value /= base;
 885              		.loc 1 320 18 is_stmt 0 view .LVU234
 886 0078 092A     		cmp	r2, #9
 887 007a DCD9     		bls	.L77
 320:Core/Src/printf.c ****       value /= base;
 888              		.loc 1 320 85 discriminator 2 view .LVU235
 889 007c 16F0200F 		tst	r6, #32
 890 0080 05D0     		beq	.L72
 320:Core/Src/printf.c ****       value /= base;
 891              		.loc 1 320 85 discriminator 4 view .LVU236
 892 0082 4123     		movs	r3, #65
 893              	.L69:
 320:Core/Src/printf.c ****       value /= base;
 894              		.loc 1 320 85 discriminator 7 view .LVU237
 895 0084 1344     		add	r3, r3, r2
 896 0086 DBB2     		uxtb	r3, r3
 320:Core/Src/printf.c ****       value /= base;
 897              		.loc 1 320 18 discriminator 7 view .LVU238
 898 0088 0A3B     		subs	r3, r3, #10
 899 008a DBB2     		uxtb	r3, r3
 900 008c D5E7     		b	.L68
 901              	.L72:
 320:Core/Src/printf.c ****       value /= base;
 902              		.loc 1 320 85 discriminator 5 view .LVU239
 903 008e 6123     		movs	r3, #97
 904 0090 F8E7     		b	.L69
 905              	.LVL93:
 906              	.L71:
 320:Core/Src/printf.c ****       value /= base;
 907              		.loc 1 320 85 discriminator 5 view .LVU240
 908              	.LBE29:
 309:Core/Src/printf.c **** 
 909              		.loc 1 309 10 view .LVU241
 910 0092 4FF0000A 		mov	r10, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 24


 911              	.LVL94:
 912              	.L66:
 323:Core/Src/printf.c ****   }
 324:Core/Src/printf.c **** 
 325:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 913              		.loc 1 325 3 is_stmt 1 view .LVU242
 914              		.loc 1 325 10 is_stmt 0 view .LVU243
 915 0096 0696     		str	r6, [sp, #24]
 916 0098 259B     		ldr	r3, [sp, #148]
 917 009a 0593     		str	r3, [sp, #20]
 918 009c 249B     		ldr	r3, [sp, #144]
 919 009e 0493     		str	r3, [sp, #16]
 920 00a0 0395     		str	r5, [sp, #12]
 921 00a2 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 922 00a6 0293     		str	r3, [sp, #8]
 923 00a8 CDF804A0 		str	r10, [sp, #4]
 924 00ac 0CAB     		add	r3, sp, #48
 925 00ae 0093     		str	r3, [sp]
 926 00b0 4346     		mov	r3, r8
 927 00b2 0B9A     		ldr	r2, [sp, #44]
 928 00b4 0A99     		ldr	r1, [sp, #40]
 929 00b6 0998     		ldr	r0, [sp, #36]
 930 00b8 FFF7FEFF 		bl	_ntoa_format
 931              	.LVL95:
 326:Core/Src/printf.c **** }
 932              		.loc 1 326 1 view .LVU244
 933 00bc 15B0     		add	sp, sp, #84
 934              	.LCFI15:
 935              		.cfi_def_cfa_offset 36
 936              		@ sp needed
 937 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 938              		.loc 1 326 1 view .LVU245
 939              		.cfi_endproc
 940              	.LFE10:
 942              		.global	__aeabi_dcmpeq
 943              		.global	__aeabi_dcmpgt
 944              		.global	__aeabi_dcmplt
 945              		.global	__aeabi_i2d
 946              		.global	__aeabi_dmul
 947              		.global	__aeabi_dadd
 948              		.global	__aeabi_dsub
 949              		.global	__aeabi_d2iz
 950              		.global	__aeabi_ddiv
 951              		.global	__aeabi_dcmpge
 952              		.section	.text._etoa,"ax",%progbits
 953              		.align	1
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 958              	_etoa:
 959              	.LVL96:
 960              	.LFB12:
 327:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 328:Core/Src/printf.c **** 
 329:Core/Src/printf.c **** 
 330:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 331:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 25


 332:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:Core/Src/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 334:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 335:Core/Src/printf.c **** #endif
 336:Core/Src/printf.c **** 
 337:Core/Src/printf.c **** 
 338:Core/Src/printf.c **** // internal ftoa for fixed decimal floating point
 339:Core/Src/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 340:Core/Src/printf.c **** {
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 342:Core/Src/printf.c ****   size_t len  = 0U;
 343:Core/Src/printf.c ****   double diff = 0.0;
 344:Core/Src/printf.c **** 
 345:Core/Src/printf.c ****   // powers of 10
 346:Core/Src/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 347:Core/Src/printf.c **** 
 348:Core/Src/printf.c ****   // test for special values
 349:Core/Src/printf.c ****   if (value != value)
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 355:Core/Src/printf.c **** 
 356:Core/Src/printf.c ****   // test for very large values
 357:Core/Src/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 358:Core/Src/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 360:Core/Src/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 361:Core/Src/printf.c **** #else
 362:Core/Src/printf.c ****     return 0U;
 363:Core/Src/printf.c **** #endif
 364:Core/Src/printf.c ****   }
 365:Core/Src/printf.c **** 
 366:Core/Src/printf.c ****   // test for negative
 367:Core/Src/printf.c ****   bool negative = false;
 368:Core/Src/printf.c ****   if (value < 0) {
 369:Core/Src/printf.c ****     negative = true;
 370:Core/Src/printf.c ****     value = 0 - value;
 371:Core/Src/printf.c ****   }
 372:Core/Src/printf.c **** 
 373:Core/Src/printf.c ****   // set default precision, if not set explicitly
 374:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 376:Core/Src/printf.c ****   }
 377:Core/Src/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 378:Core/Src/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 379:Core/Src/printf.c ****     buf[len++] = '0';
 380:Core/Src/printf.c ****     prec--;
 381:Core/Src/printf.c ****   }
 382:Core/Src/printf.c **** 
 383:Core/Src/printf.c ****   int whole = (int)value;
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 386:Core/Src/printf.c ****   diff = tmp - frac;
 387:Core/Src/printf.c **** 
 388:Core/Src/printf.c ****   if (diff > 0.5) {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 26


 389:Core/Src/printf.c ****     ++frac;
 390:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 391:Core/Src/printf.c ****     if (frac >= pow10[prec]) {
 392:Core/Src/printf.c ****       frac = 0;
 393:Core/Src/printf.c ****       ++whole;
 394:Core/Src/printf.c ****     }
 395:Core/Src/printf.c ****   }
 396:Core/Src/printf.c ****   else if (diff < 0.5) {
 397:Core/Src/printf.c ****   }
 398:Core/Src/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 400:Core/Src/printf.c ****     ++frac;
 401:Core/Src/printf.c ****   }
 402:Core/Src/printf.c **** 
 403:Core/Src/printf.c ****   if (prec == 0U) {
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 407:Core/Src/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 408:Core/Src/printf.c ****       ++whole;
 409:Core/Src/printf.c ****     }
 410:Core/Src/printf.c ****   }
 411:Core/Src/printf.c ****   else {
 412:Core/Src/printf.c ****     unsigned int count = prec;
 413:Core/Src/printf.c ****     // now do fractional part, as an unsigned number
 414:Core/Src/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 415:Core/Src/printf.c ****       --count;
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 418:Core/Src/printf.c ****         break;
 419:Core/Src/printf.c ****       }
 420:Core/Src/printf.c ****     }
 421:Core/Src/printf.c ****     // add extra 0s
 422:Core/Src/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 423:Core/Src/printf.c ****       buf[len++] = '0';
 424:Core/Src/printf.c ****     }
 425:Core/Src/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 426:Core/Src/printf.c ****       // add decimal
 427:Core/Src/printf.c ****       buf[len++] = '.';
 428:Core/Src/printf.c ****     }
 429:Core/Src/printf.c ****   }
 430:Core/Src/printf.c **** 
 431:Core/Src/printf.c ****   // do whole part, number is reversed
 432:Core/Src/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 433:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 435:Core/Src/printf.c ****       break;
 436:Core/Src/printf.c ****     }
 437:Core/Src/printf.c ****   }
 438:Core/Src/printf.c **** 
 439:Core/Src/printf.c ****   // pad leading zeros
 440:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 442:Core/Src/printf.c ****       width--;
 443:Core/Src/printf.c ****     }
 444:Core/Src/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 445:Core/Src/printf.c ****       buf[len++] = '0';
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 27


 446:Core/Src/printf.c ****     }
 447:Core/Src/printf.c ****   }
 448:Core/Src/printf.c **** 
 449:Core/Src/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 450:Core/Src/printf.c ****     if (negative) {
 451:Core/Src/printf.c ****       buf[len++] = '-';
 452:Core/Src/printf.c ****     }
 453:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 455:Core/Src/printf.c ****     }
 456:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 458:Core/Src/printf.c ****     }
 459:Core/Src/printf.c ****   }
 460:Core/Src/printf.c **** 
 461:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 462:Core/Src/printf.c **** }
 463:Core/Src/printf.c **** 
 464:Core/Src/printf.c **** 
 465:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 466:Core/Src/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 467:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 468:Core/Src/printf.c **** {
 961              		.loc 1 468 1 is_stmt 1 view -0
 962              		.cfi_startproc
 963              		@ args = 20, pretend = 0, frame = 40
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		.loc 1 468 1 is_stmt 0 view .LVU247
 966 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 967              	.LCFI16:
 968              		.cfi_def_cfa_offset 36
 969              		.cfi_offset 4, -36
 970              		.cfi_offset 5, -32
 971              		.cfi_offset 6, -28
 972              		.cfi_offset 7, -24
 973              		.cfi_offset 8, -20
 974              		.cfi_offset 9, -16
 975              		.cfi_offset 10, -12
 976              		.cfi_offset 11, -8
 977              		.cfi_offset 14, -4
 978 0004 91B0     		sub	sp, sp, #68
 979              	.LCFI17:
 980              		.cfi_def_cfa_offset 104
 981 0006 8246     		mov	r10, r0
 982 0008 0C46     		mov	r4, r1
 983 000a 9346     		mov	fp, r2
 984 000c 1D46     		mov	r5, r3
 469:Core/Src/printf.c ****   // check for NaN and special values
 470:Core/Src/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 985              		.loc 1 470 3 is_stmt 1 view .LVU248
 986              		.loc 1 470 6 is_stmt 0 view .LVU249
 987 000e DDE91A23 		ldrd	r2, [sp, #104]
 988              	.LVL97:
 989              		.loc 1 470 6 view .LVU250
 990 0012 1046     		mov	r0, r2
 991              	.LVL98:
 992              		.loc 1 470 6 view .LVU251
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 28


 993 0014 1946     		mov	r1, r3
 994              	.LVL99:
 995              		.loc 1 470 6 view .LVU252
 996 0016 FFF7FEFF 		bl	__aeabi_dcmpeq
 997              	.LVL100:
 998              		.loc 1 470 6 view .LVU253
 999 001a 0028     		cmp	r0, #0
 1000 001c 00F00781 		beq	.L79
 1001              		.loc 1 470 24 discriminator 1 view .LVU254
 1002 0020 4FF0FF32 		mov	r2, #-1
 1003 0024 AE4B     		ldr	r3, .L120+64
 1004 0026 DDE91A01 		ldrd	r0, [sp, #104]
 1005 002a FFF7FEFF 		bl	__aeabi_dcmpgt
 1006              	.LVL101:
 1007 002e 0028     		cmp	r0, #0
 1008 0030 40F0FD80 		bne	.L79
 1009              		.loc 1 470 45 discriminator 2 view .LVU255
 1010 0034 4FF0FF32 		mov	r2, #-1
 1011 0038 6FF48013 		mvn	r3, #1048576
 1012 003c DDE91A01 		ldrd	r0, [sp, #104]
 1013 0040 FFF7FEFF 		bl	__aeabi_dcmplt
 1014              	.LVL102:
 1015 0044 0028     		cmp	r0, #0
 1016 0046 40F0F280 		bne	.L79
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 472:Core/Src/printf.c ****   }
 473:Core/Src/printf.c **** 
 474:Core/Src/printf.c ****   // determine the sign
 475:Core/Src/printf.c ****   const bool negative = value < 0;
 1017              		.loc 1 475 3 is_stmt 1 view .LVU256
 1018              	.LVL103:
 476:Core/Src/printf.c ****   if (negative) {
 1019              		.loc 1 476 3 view .LVU257
 1020              		.loc 1 476 6 is_stmt 0 view .LVU258
 1021 004a 0022     		movs	r2, #0
 1022 004c 0023     		movs	r3, #0
 1023 004e DDE91A01 		ldrd	r0, [sp, #104]
 1024 0052 FFF7FEFF 		bl	__aeabi_dcmplt
 1025              	.LVL104:
 1026 0056 0028     		cmp	r0, #0
 1027 0058 40F0FC80 		bne	.L118
 1028 005c DDE91A23 		ldrd	r2, [sp, #104]
 1029 0060 CDE90623 		strd	r2, [sp, #24]
 1030              	.LVL105:
 1031              	.L83:
 477:Core/Src/printf.c ****     value = -value;
 478:Core/Src/printf.c ****   }
 479:Core/Src/printf.c **** 
 480:Core/Src/printf.c ****   // default precision
 481:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1032              		.loc 1 481 3 is_stmt 1 view .LVU259
 1033              		.loc 1 481 6 is_stmt 0 view .LVU260
 1034 0064 1E9B     		ldr	r3, [sp, #120]
 1035 0066 13F48063 		ands	r3, r3, #1024
 1036 006a 0F93     		str	r3, [sp, #60]
 1037 006c 01D1     		bne	.L85
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 29


 1038              		.loc 1 482 10 view .LVU261
 1039 006e 0623     		movs	r3, #6
 1040 0070 1C93     		str	r3, [sp, #112]
 1041              	.LVL106:
 1042              	.L85:
 483:Core/Src/printf.c ****   }
 484:Core/Src/printf.c **** 
 485:Core/Src/printf.c ****   // determine the decimal exponent
 486:Core/Src/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 487:Core/Src/printf.c ****   union {
 1043              		.loc 1 487 3 is_stmt 1 view .LVU262
 488:Core/Src/printf.c ****     uint64_t U;
 489:Core/Src/printf.c ****     double   F;
 490:Core/Src/printf.c ****   } conv;
 491:Core/Src/printf.c **** 
 492:Core/Src/printf.c ****   conv.F = value;
 1044              		.loc 1 492 3 view .LVU263
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1045              		.loc 1 493 3 view .LVU264
 1046 0072 DDE90601 		ldrd	r0, [sp, #24]
 1047 0076 0246     		mov	r2, r0
 1048              		.loc 1 493 14 is_stmt 0 view .LVU265
 1049 0078 C1F30A50 		ubfx	r0, r1, #20, #11
 1050              	.LVL107:
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1051              		.loc 1 494 3 is_stmt 1 view .LVU266
 1052              		.loc 1 494 20 is_stmt 0 view .LVU267
 1053 007c C1F31303 		ubfx	r3, r1, #0, #20
 1054              		.loc 1 494 44 view .LVU268
 1055 0080 9046     		mov	r8, r2
 1056 0082 43F07F59 		orr	r9, r3, #1069547520
 1057 0086 49F44019 		orr	r9, r9, #3145728
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 496:Core/Src/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 1058              		.loc 1 496 3 is_stmt 1 view .LVU269
 1059              		.loc 1 496 45 is_stmt 0 view .LVU270
 1060 008a A0F2FF30 		subw	r0, r0, #1023
 1061              	.LVL108:
 1062              		.loc 1 496 45 view .LVU271
 1063 008e FFF7FEFF 		bl	__aeabi_i2d
 1064              	.LVL109:
 1065              		.loc 1 496 45 view .LVU272
 1066 0092 83A3     		adr	r3, .L120
 1067 0094 D3E90023 		ldrd	r2, [r3]
 1068 0098 FFF7FEFF 		bl	__aeabi_dmul
 1069              	.LVL110:
 1070              		.loc 1 496 38 view .LVU273
 1071 009c 82A3     		adr	r3, .L120+8
 1072 009e D3E90023 		ldrd	r2, [r3]
 1073 00a2 FFF7FEFF 		bl	__aeabi_dadd
 1074              	.LVL111:
 1075 00a6 0646     		mov	r6, r0
 1076 00a8 0F46     		mov	r7, r1
 1077              		.loc 1 496 75 view .LVU274
 1078 00aa 0022     		movs	r2, #0
 1079 00ac 8D4B     		ldr	r3, .L120+68
 1080 00ae 4046     		mov	r0, r8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 30


 1081 00b0 4946     		mov	r1, r9
 1082 00b2 FFF7FEFF 		bl	__aeabi_dsub
 1083              	.LVL112:
 1084              		.loc 1 496 82 view .LVU275
 1085 00b6 7EA3     		adr	r3, .L120+16
 1086 00b8 D3E90023 		ldrd	r2, [r3]
 1087 00bc FFF7FEFF 		bl	__aeabi_dmul
 1088              	.LVL113:
 1089 00c0 0246     		mov	r2, r0
 1090 00c2 0B46     		mov	r3, r1
 1091              		.loc 1 496 65 view .LVU276
 1092 00c4 3046     		mov	r0, r6
 1093 00c6 3946     		mov	r1, r7
 1094 00c8 FFF7FEFF 		bl	__aeabi_dadd
 1095              	.LVL114:
 1096              		.loc 1 496 7 view .LVU277
 1097 00cc FFF7FEFF 		bl	__aeabi_d2iz
 1098              	.LVL115:
 1099 00d0 0646     		mov	r6, r0
 1100              	.LVL116:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 498:Core/Src/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1101              		.loc 1 498 3 is_stmt 1 view .LVU278
 1102              		.loc 1 498 23 is_stmt 0 view .LVU279
 1103 00d2 FFF7FEFF 		bl	__aeabi_i2d
 1104              	.LVL117:
 1105              		.loc 1 498 23 view .LVU280
 1106 00d6 8046     		mov	r8, r0
 1107 00d8 8946     		mov	r9, r1
 1108 00da 77A3     		adr	r3, .L120+24
 1109 00dc D3E90023 		ldrd	r2, [r3]
 1110 00e0 FFF7FEFF 		bl	__aeabi_dmul
 1111              	.LVL118:
 1112              		.loc 1 498 43 view .LVU281
 1113 00e4 0022     		movs	r2, #0
 1114 00e6 804B     		ldr	r3, .L120+72
 1115 00e8 FFF7FEFF 		bl	__aeabi_dadd
 1116              	.LVL119:
 1117              		.loc 1 498 8 view .LVU282
 1118 00ec FFF7FEFF 		bl	__aeabi_d2iz
 1119              	.LVL120:
 1120 00f0 0746     		mov	r7, r0
 1121              	.LVL121:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1122              		.loc 1 499 3 is_stmt 1 view .LVU283
 1123              		.loc 1 499 28 is_stmt 0 view .LVU284
 1124 00f2 73A3     		adr	r3, .L120+32
 1125 00f4 D3E90023 		ldrd	r2, [r3]
 1126 00f8 4046     		mov	r0, r8
 1127              	.LVL122:
 1128              		.loc 1 499 28 view .LVU285
 1129 00fa 4946     		mov	r1, r9
 1130 00fc FFF7FEFF 		bl	__aeabi_dmul
 1131              	.LVL123:
 1132 0100 8046     		mov	r8, r0
 1133 0102 8946     		mov	r9, r1
 1134              		.loc 1 499 55 view .LVU286
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 31


 1135 0104 3846     		mov	r0, r7
 1136 0106 FFF7FEFF 		bl	__aeabi_i2d
 1137              	.LVL124:
 1138 010a 6FA3     		adr	r3, .L120+40
 1139 010c D3E90023 		ldrd	r2, [r3]
 1140 0110 FFF7FEFF 		bl	__aeabi_dmul
 1141              	.LVL125:
 1142 0114 0246     		mov	r2, r0
 1143 0116 0B46     		mov	r3, r1
 1144              		.loc 1 499 16 view .LVU287
 1145 0118 4046     		mov	r0, r8
 1146 011a 4946     		mov	r1, r9
 1147 011c FFF7FEFF 		bl	__aeabi_dsub
 1148              	.LVL126:
 1149 0120 8046     		mov	r8, r0
 1150 0122 8946     		mov	r9, r1
 1151              	.LVL127:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1152              		.loc 1 500 3 is_stmt 1 view .LVU288
 1153              		.loc 1 500 16 is_stmt 0 view .LVU289
 1154 0124 0246     		mov	r2, r0
 1155 0126 0B46     		mov	r3, r1
 1156 0128 FFF7FEFF 		bl	__aeabi_dmul
 1157              	.LVL128:
 1158 012c CDE90A01 		strd	r0, [sp, #40]
 1159              	.LVL129:
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1160              		.loc 1 501 3 is_stmt 1 view .LVU290
 1161              		.loc 1 501 28 is_stmt 0 view .LVU291
 1162 0130 07F2FF37 		addw	r7, r7, #1023
 1163              	.LVL130:
 1164              		.loc 1 501 36 view .LVU292
 1165 0134 0021     		movs	r1, #0
 1166 0136 0022     		movs	r2, #0
 1167 0138 CDE90812 		strd	r1, [sp, #32]
 1168 013c 3B05     		lsls	r3, r7, #20
 1169 013e 0993     		str	r3, [sp, #36]
 1170 0140 0023     		movs	r3, #0
 1171 0142 0893     		str	r3, [sp, #32]
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 503:Core/Src/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1172              		.loc 1 503 3 is_stmt 1 view .LVU293
 1173              		.loc 1 503 19 is_stmt 0 view .LVU294
 1174 0144 4246     		mov	r2, r8
 1175 0146 4B46     		mov	r3, r9
 1176 0148 4046     		mov	r0, r8
 1177              	.LVL131:
 1178              		.loc 1 503 19 view .LVU295
 1179 014a 4946     		mov	r1, r9
 1180 014c FFF7FEFF 		bl	__aeabi_dadd
 1181              	.LVL132:
 1182 0150 CDE90C01 		strd	r0, [sp, #48]
 1183              		.loc 1 503 28 view .LVU296
 1184 0154 4246     		mov	r2, r8
 1185 0156 4B46     		mov	r3, r9
 1186 0158 0020     		movs	r0, #0
 1187 015a 4FF08041 		mov	r1, #1073741824
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 32


 1188 015e FFF7FEFF 		bl	__aeabi_dsub
 1189              	.LVL133:
 1190 0162 8046     		mov	r8, r0
 1191              	.LVL134:
 1192              		.loc 1 503 28 view .LVU297
 1193 0164 8946     		mov	r9, r1
 1194              		.loc 1 503 60 view .LVU298
 1195 0166 0022     		movs	r2, #0
 1196 0168 604B     		ldr	r3, .L120+76
 1197 016a DDE90A01 		ldrd	r0, [sp, #40]
 1198 016e FFF7FEFF 		bl	__aeabi_ddiv
 1199              	.LVL135:
 1200              		.loc 1 503 55 view .LVU299
 1201 0172 0022     		movs	r2, #0
 1202 0174 5E4B     		ldr	r3, .L120+80
 1203 0176 FFF7FEFF 		bl	__aeabi_dadd
 1204              	.LVL136:
 1205 017a 0246     		mov	r2, r0
 1206 017c 0B46     		mov	r3, r1
 1207              		.loc 1 503 49 view .LVU300
 1208 017e DDE90A01 		ldrd	r0, [sp, #40]
 1209 0182 FFF7FEFF 		bl	__aeabi_ddiv
 1210              	.LVL137:
 1211              		.loc 1 503 43 view .LVU301
 1212 0186 0022     		movs	r2, #0
 1213 0188 5A4B     		ldr	r3, .L120+84
 1214 018a FFF7FEFF 		bl	__aeabi_dadd
 1215              	.LVL138:
 1216 018e 0246     		mov	r2, r0
 1217 0190 0B46     		mov	r3, r1
 1218              		.loc 1 503 38 view .LVU302
 1219 0192 DDE90A01 		ldrd	r0, [sp, #40]
 1220 0196 FFF7FEFF 		bl	__aeabi_ddiv
 1221              	.LVL139:
 1222 019a 0246     		mov	r2, r0
 1223 019c 0B46     		mov	r3, r1
 1224              		.loc 1 503 32 view .LVU303
 1225 019e 4046     		mov	r0, r8
 1226 01a0 4946     		mov	r1, r9
 1227 01a2 FFF7FEFF 		bl	__aeabi_dadd
 1228              	.LVL140:
 1229 01a6 0246     		mov	r2, r0
 1230 01a8 0B46     		mov	r3, r1
 1231              		.loc 1 503 23 view .LVU304
 1232 01aa DDE90C01 		ldrd	r0, [sp, #48]
 1233 01ae FFF7FEFF 		bl	__aeabi_ddiv
 1234              	.LVL141:
 1235              		.loc 1 503 15 view .LVU305
 1236 01b2 0022     		movs	r2, #0
 1237 01b4 504B     		ldr	r3, .L120+88
 1238 01b6 FFF7FEFF 		bl	__aeabi_dadd
 1239              	.LVL142:
 1240              		.loc 1 503 10 view .LVU306
 1241 01ba DDE90823 		ldrd	r2, [sp, #32]
 1242 01be FFF7FEFF 		bl	__aeabi_dmul
 1243              	.LVL143:
 1244 01c2 8046     		mov	r8, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 33


 1245 01c4 8946     		mov	r9, r1
 1246 01c6 CDE90889 		strd	r8, [sp, #32]
 504:Core/Src/printf.c ****   // correct for rounding errors
 505:Core/Src/printf.c ****   if (value < conv.F) {
 1247              		.loc 1 505 3 is_stmt 1 view .LVU307
 1248              		.loc 1 505 6 is_stmt 0 view .LVU308
 1249 01ca DDE90623 		ldrd	r2, [sp, #24]
 1250 01ce FFF7FEFF 		bl	__aeabi_dcmpgt
 1251              	.LVL144:
 1252 01d2 40B1     		cbz	r0, .L86
 506:Core/Src/printf.c ****     expval--;
 1253              		.loc 1 506 5 is_stmt 1 view .LVU309
 1254              		.loc 1 506 11 is_stmt 0 view .LVU310
 1255 01d4 013E     		subs	r6, r6, #1
 1256              	.LVL145:
 507:Core/Src/printf.c ****     conv.F /= 10;
 1257              		.loc 1 507 5 is_stmt 1 view .LVU311
 1258              		.loc 1 507 12 is_stmt 0 view .LVU312
 1259 01d6 0022     		movs	r2, #0
 1260 01d8 454B     		ldr	r3, .L120+80
 1261 01da 4046     		mov	r0, r8
 1262 01dc 4946     		mov	r1, r9
 1263 01de FFF7FEFF 		bl	__aeabi_ddiv
 1264              	.LVL146:
 1265 01e2 CDE90801 		strd	r0, [sp, #32]
 1266              	.L86:
 508:Core/Src/printf.c ****   }
 509:Core/Src/printf.c **** 
 510:Core/Src/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 511:Core/Src/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1267              		.loc 1 511 3 is_stmt 1 view .LVU313
 1268              		.loc 1 511 43 is_stmt 0 view .LVU314
 1269 01e6 06F16303 		add	r3, r6, #99
 1270              		.loc 1 511 68 view .LVU315
 1271 01ea C62B     		cmp	r3, #198
 1272 01ec 3DD8     		bhi	.L104
 1273              		.loc 1 511 68 discriminator 1 view .LVU316
 1274 01ee 0427     		movs	r7, #4
 1275              	.LVL147:
 1276              	.L88:
 512:Core/Src/printf.c **** 
 513:Core/Src/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 514:Core/Src/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 1277              		.loc 1 514 3 is_stmt 1 view .LVU317
 1278              		.loc 1 514 6 is_stmt 0 view .LVU318
 1279 01f0 1E9B     		ldr	r3, [sp, #120]
 1280 01f2 13F4006F 		tst	r3, #2048
 1281 01f6 42D0     		beq	.L89
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 516:Core/Src/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 1282              		.loc 1 516 5 is_stmt 1 view .LVU319
 1283              		.loc 1 516 8 is_stmt 0 view .LVU320
 1284 01f8 35A3     		adr	r3, .L120+48
 1285 01fa D3E90023 		ldrd	r2, [r3]
 1286 01fe DDE90689 		ldrd	r8, [sp, #24]
 1287 0202 4046     		mov	r0, r8
 1288 0204 4946     		mov	r1, r9
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 34


 1289 0206 FFF7FEFF 		bl	__aeabi_dcmpge
 1290              	.LVL148:
 1291 020a 0028     		cmp	r0, #0
 1292 020c 3DD0     		beq	.L90
 1293              		.loc 1 516 25 discriminator 1 view .LVU321
 1294 020e 32A3     		adr	r3, .L120+56
 1295 0210 D3E90023 		ldrd	r2, [r3]
 1296 0214 4046     		mov	r0, r8
 1297 0216 4946     		mov	r1, r9
 1298 0218 FFF7FEFF 		bl	__aeabi_dcmplt
 1299              	.LVL149:
 1300 021c 0028     		cmp	r0, #0
 1301 021e 34D0     		beq	.L90
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1302              		.loc 1 517 7 is_stmt 1 view .LVU322
 1303              		.loc 1 517 10 is_stmt 0 view .LVU323
 1304 0220 1C9B     		ldr	r3, [sp, #112]
 1305 0222 B342     		cmp	r3, r6
 1306 0224 23DD     		ble	.L105
 518:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1307              		.loc 1 518 9 is_stmt 1 view .LVU324
 1308              		.loc 1 518 37 is_stmt 0 view .LVU325
 1309 0226 9E1B     		subs	r6, r3, r6
 1310              	.LVL150:
 1311              		.loc 1 518 46 view .LVU326
 1312 0228 731E     		subs	r3, r6, #1
 1313 022a 1C93     		str	r3, [sp, #112]
 1314              	.LVL151:
 1315              		.loc 1 518 46 view .LVU327
 1316 022c 21E0     		b	.L93
 1317              	.LVL152:
 1318              	.L79:
 471:Core/Src/printf.c ****   }
 1319              		.loc 1 471 5 is_stmt 1 view .LVU328
 471:Core/Src/printf.c ****   }
 1320              		.loc 1 471 12 is_stmt 0 view .LVU329
 1321 022e 1E9B     		ldr	r3, [sp, #120]
 1322 0230 0493     		str	r3, [sp, #16]
 1323 0232 1D9B     		ldr	r3, [sp, #116]
 1324 0234 0393     		str	r3, [sp, #12]
 1325 0236 1C9B     		ldr	r3, [sp, #112]
 1326 0238 0293     		str	r3, [sp, #8]
 1327 023a DDE91A23 		ldrd	r2, [sp, #104]
 1328 023e CDE90023 		strd	r2, [sp]
 1329 0242 2B46     		mov	r3, r5
 1330 0244 5A46     		mov	r2, fp
 1331 0246 2146     		mov	r1, r4
 1332 0248 5046     		mov	r0, r10
 1333 024a FFF7FEFF 		bl	_ftoa
 1334              	.LVL153:
 1335              	.L82:
 519:Core/Src/printf.c ****       }
 520:Core/Src/printf.c ****       else {
 521:Core/Src/printf.c ****         prec = 0;
 522:Core/Src/printf.c ****       }
 523:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 524:Core/Src/printf.c ****       // no characters in exponent
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 35


 525:Core/Src/printf.c ****       minwidth = 0U;
 526:Core/Src/printf.c ****       expval   = 0;
 527:Core/Src/printf.c ****     }
 528:Core/Src/printf.c ****     else {
 529:Core/Src/printf.c ****       // we use one sigfig for the whole part
 530:Core/Src/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 531:Core/Src/printf.c ****         --prec;
 532:Core/Src/printf.c ****       }
 533:Core/Src/printf.c ****     }
 534:Core/Src/printf.c ****   }
 535:Core/Src/printf.c **** 
 536:Core/Src/printf.c ****   // will everything fit?
 537:Core/Src/printf.c ****   unsigned int fwidth = width;
 538:Core/Src/printf.c ****   if (width > minwidth) {
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 540:Core/Src/printf.c ****     fwidth -= minwidth;
 541:Core/Src/printf.c ****   } else {
 542:Core/Src/printf.c ****     // not enough characters, so go back to default sizing
 543:Core/Src/printf.c ****     fwidth = 0U;
 544:Core/Src/printf.c ****   }
 545:Core/Src/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 547:Core/Src/printf.c ****     fwidth = 0U;
 548:Core/Src/printf.c ****   }
 549:Core/Src/printf.c **** 
 550:Core/Src/printf.c ****   // rescale the float value
 551:Core/Src/printf.c ****   if (expval) {
 552:Core/Src/printf.c ****     value /= conv.F;
 553:Core/Src/printf.c ****   }
 554:Core/Src/printf.c **** 
 555:Core/Src/printf.c ****   // output the floating part
 556:Core/Src/printf.c ****   const size_t start_idx = idx;
 557:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 558:Core/Src/printf.c **** 
 559:Core/Src/printf.c ****   // output the exponent part
 560:Core/Src/printf.c ****   if (minwidth) {
 561:Core/Src/printf.c ****     // output the exponential symbol
 562:Core/Src/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 563:Core/Src/printf.c ****     // output the exponent value
 564:Core/Src/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 566:Core/Src/printf.c ****     if (flags & FLAGS_LEFT) {
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 568:Core/Src/printf.c ****     }
 569:Core/Src/printf.c ****   }
 570:Core/Src/printf.c ****   return idx;
 571:Core/Src/printf.c **** }
 1336              		.loc 1 571 1 view .LVU330
 1337 024e 11B0     		add	sp, sp, #68
 1338              	.LCFI18:
 1339              		.cfi_remember_state
 1340              		.cfi_def_cfa_offset 36
 1341              		@ sp needed
 1342 0250 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1343              	.LVL154:
 1344              	.L118:
 1345              	.LCFI19:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 36


 1346              		.cfi_restore_state
 477:Core/Src/printf.c ****   }
 1347              		.loc 1 477 5 is_stmt 1 view .LVU331
 477:Core/Src/printf.c ****   }
 1348              		.loc 1 477 11 is_stmt 0 view .LVU332
 1349 0254 0022     		movs	r2, #0
 1350 0256 0023     		movs	r3, #0
 1351 0258 CDE90623 		strd	r2, [sp, #24]
 1352 025c 1A9B     		ldr	r3, [sp, #104]
 1353 025e 0693     		str	r3, [sp, #24]
 1354 0260 1B9B     		ldr	r3, [sp, #108]
 1355 0262 03F10043 		add	r3, r3, #-2147483648
 1356 0266 0793     		str	r3, [sp, #28]
 1357              	.LVL155:
 477:Core/Src/printf.c ****   }
 1358              		.loc 1 477 11 view .LVU333
 1359 0268 FCE6     		b	.L83
 1360              	.LVL156:
 1361              	.L104:
 511:Core/Src/printf.c **** 
 1362              		.loc 1 511 68 discriminator 2 view .LVU334
 1363 026a 0527     		movs	r7, #5
 1364              	.LVL157:
 511:Core/Src/printf.c **** 
 1365              		.loc 1 511 68 discriminator 2 view .LVU335
 1366 026c C0E7     		b	.L88
 1367              	.LVL158:
 1368              	.L105:
 521:Core/Src/printf.c ****       }
 1369              		.loc 1 521 14 view .LVU336
 1370 026e 0023     		movs	r3, #0
 1371 0270 1C93     		str	r3, [sp, #112]
 1372              	.LVL159:
 1373              	.L93:
 523:Core/Src/printf.c ****       // no characters in exponent
 1374              		.loc 1 523 7 is_stmt 1 view .LVU337
 523:Core/Src/printf.c ****       // no characters in exponent
 1375              		.loc 1 523 13 is_stmt 0 view .LVU338
 1376 0272 1E9B     		ldr	r3, [sp, #120]
 1377 0274 43F48063 		orr	r3, r3, #1024
 1378 0278 1E93     		str	r3, [sp, #120]
 1379              	.LVL160:
 525:Core/Src/printf.c ****       expval   = 0;
 1380              		.loc 1 525 7 is_stmt 1 view .LVU339
 526:Core/Src/printf.c ****     }
 1381              		.loc 1 526 7 view .LVU340
 525:Core/Src/printf.c ****       expval   = 0;
 1382              		.loc 1 525 16 is_stmt 0 view .LVU341
 1383 027a 0027     		movs	r7, #0
 526:Core/Src/printf.c ****     }
 1384              		.loc 1 526 16 view .LVU342
 1385 027c 3E46     		mov	r6, r7
 1386              	.LVL161:
 1387              	.L89:
 537:Core/Src/printf.c ****   if (width > minwidth) {
 1388              		.loc 1 537 3 is_stmt 1 view .LVU343
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 37


 1389              		.loc 1 538 3 view .LVU344
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1390              		.loc 1 538 6 is_stmt 0 view .LVU345
 1391 027e 1D9B     		ldr	r3, [sp, #116]
 1392 0280 9F42     		cmp	r7, r3
 1393 0282 3BD2     		bcs	.L106
 540:Core/Src/printf.c ****   } else {
 1394              		.loc 1 540 5 is_stmt 1 view .LVU346
 540:Core/Src/printf.c ****   } else {
 1395              		.loc 1 540 12 is_stmt 0 view .LVU347
 1396 0284 A3EB0708 		sub	r8, r3, r7
 1397              	.LVL162:
 540:Core/Src/printf.c ****   } else {
 1398              		.loc 1 540 12 view .LVU348
 1399 0288 3AE0     		b	.L94
 1400              	.LVL163:
 1401              	.L90:
 530:Core/Src/printf.c ****         --prec;
 1402              		.loc 1 530 7 is_stmt 1 view .LVU349
 530:Core/Src/printf.c ****         --prec;
 1403              		.loc 1 530 10 is_stmt 0 view .LVU350
 1404 028a 1C9B     		ldr	r3, [sp, #112]
 1405 028c 002B     		cmp	r3, #0
 1406 028e F6D0     		beq	.L89
 530:Core/Src/printf.c ****         --prec;
 1407              		.loc 1 530 22 discriminator 1 view .LVU351
 1408 0290 0F9B     		ldr	r3, [sp, #60]
 1409 0292 002B     		cmp	r3, #0
 1410 0294 F3D0     		beq	.L89
 531:Core/Src/printf.c ****       }
 1411              		.loc 1 531 9 is_stmt 1 view .LVU352
 1412 0296 1C9B     		ldr	r3, [sp, #112]
 1413 0298 013B     		subs	r3, r3, #1
 1414 029a 1C93     		str	r3, [sp, #112]
 1415              	.LVL164:
 531:Core/Src/printf.c ****       }
 1416              		.loc 1 531 9 is_stmt 0 view .LVU353
 1417 029c EFE7     		b	.L89
 1418              	.L121:
 1419 029e 00BF     		.align	3
 1420              	.L120:
 1421 02a0 FB799F50 		.word	1352628731
 1422 02a4 1344D33F 		.word	1070810131
 1423 02a8 B3C8608B 		.word	-1956591437
 1424 02ac 288AC63F 		.word	1069976104
 1425 02b0 61436F63 		.word	1668236129
 1426 02b4 A787D23F 		.word	1070761895
 1427 02b8 71A37909 		.word	158966641
 1428 02bc 4F930A40 		.word	1074434895
 1429 02c0 1655B5BB 		.word	-1145744106
 1430 02c4 B16B0240 		.word	1073900465
 1431 02c8 EF39FAFE 		.word	-17155601
 1432 02cc 422EE63F 		.word	1072049730
 1433 02d0 2D431CEB 		.word	-350469331
 1434 02d4 E2361A3F 		.word	1058682594
 1435 02d8 00000000 		.word	0
 1436 02dc 80842E41 		.word	1093567616
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 38


 1437 02e0 FFFFEF7F 		.word	2146435071
 1438 02e4 0000F83F 		.word	1073217536
 1439 02e8 0000E03F 		.word	1071644672
 1440 02ec 00002C40 		.word	1076625408
 1441 02f0 00002440 		.word	1076101120
 1442 02f4 00001840 		.word	1075314688
 1443 02f8 0000F03F 		.word	1072693248
 1444              	.LVL165:
 1445              	.L106:
 543:Core/Src/printf.c ****   }
 1446              		.loc 1 543 12 view .LVU354
 1447 02fc 4FF00008 		mov	r8, #0
 1448              	.LVL166:
 1449              	.L94:
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1450              		.loc 1 545 3 is_stmt 1 view .LVU355
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1451              		.loc 1 545 6 is_stmt 0 view .LVU356
 1452 0300 1E9B     		ldr	r3, [sp, #120]
 1453 0302 13F00209 		ands	r9, r3, #2
 1454 0306 02D0     		beq	.L95
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1455              		.loc 1 545 28 discriminator 1 view .LVU357
 1456 0308 0FB1     		cbz	r7, .L95
 547:Core/Src/printf.c ****   }
 1457              		.loc 1 547 12 view .LVU358
 1458 030a 4FF00008 		mov	r8, #0
 1459              	.LVL167:
 1460              	.L95:
 551:Core/Src/printf.c ****     value /= conv.F;
 1461              		.loc 1 551 3 is_stmt 1 view .LVU359
 551:Core/Src/printf.c ****     value /= conv.F;
 1462              		.loc 1 551 6 is_stmt 0 view .LVU360
 1463 030e 3EB1     		cbz	r6, .L96
 552:Core/Src/printf.c ****   }
 1464              		.loc 1 552 5 is_stmt 1 view .LVU361
 552:Core/Src/printf.c ****   }
 1465              		.loc 1 552 18 is_stmt 0 view .LVU362
 1466 0310 DDE90823 		ldrd	r2, [sp, #32]
 552:Core/Src/printf.c ****   }
 1467              		.loc 1 552 11 view .LVU363
 1468 0314 DDE90601 		ldrd	r0, [sp, #24]
 1469 0318 FFF7FEFF 		bl	__aeabi_ddiv
 1470              	.LVL168:
 1471 031c CDE90601 		strd	r0, [sp, #24]
 1472              	.LVL169:
 1473              	.L96:
 556:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 1474              		.loc 1 556 3 is_stmt 1 view .LVU364
 557:Core/Src/printf.c **** 
 1475              		.loc 1 557 3 view .LVU365
 557:Core/Src/printf.c **** 
 1476              		.loc 1 557 9 is_stmt 0 view .LVU366
 1477 0320 0022     		movs	r2, #0
 1478 0322 0023     		movs	r3, #0
 1479 0324 DDE91A01 		ldrd	r0, [sp, #104]
 1480 0328 FFF7FEFF 		bl	__aeabi_dcmplt
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 39


 1481              	.LVL170:
 1482 032c 0028     		cmp	r0, #0
 1483 032e 3DD1     		bne	.L119
 1484              	.LVL171:
 1485              	.L97:
 557:Core/Src/printf.c **** 
 1486              		.loc 1 557 9 discriminator 4 view .LVU367
 1487 0330 1E9B     		ldr	r3, [sp, #120]
 1488 0332 23F40063 		bic	r3, r3, #2048
 1489 0336 0493     		str	r3, [sp, #16]
 1490 0338 CDF80C80 		str	r8, [sp, #12]
 1491 033c 1C9B     		ldr	r3, [sp, #112]
 1492 033e 0293     		str	r3, [sp, #8]
 1493 0340 DDE90623 		ldrd	r2, [sp, #24]
 1494 0344 CDE90023 		strd	r2, [sp]
 1495 0348 2B46     		mov	r3, r5
 1496 034a 5A46     		mov	r2, fp
 1497 034c 2146     		mov	r1, r4
 1498 034e 5046     		mov	r0, r10
 1499 0350 FFF7FEFF 		bl	_ftoa
 1500              	.LVL172:
 560:Core/Src/printf.c ****     // output the exponential symbol
 1501              		.loc 1 560 3 is_stmt 1 view .LVU368
 560:Core/Src/printf.c ****     // output the exponential symbol
 1502              		.loc 1 560 6 is_stmt 0 view .LVU369
 1503 0354 002F     		cmp	r7, #0
 1504 0356 3FF47AAF 		beq	.L82
 562:Core/Src/printf.c ****     // output the exponent value
 1505              		.loc 1 562 5 is_stmt 1 view .LVU370
 1506 035a 1E9B     		ldr	r3, [sp, #120]
 1507 035c 13F0200F 		tst	r3, #32
 1508 0360 2CD0     		beq	.L108
 562:Core/Src/printf.c ****     // output the exponent value
 1509              		.loc 1 562 5 is_stmt 0 discriminator 1 view .LVU371
 1510 0362 4FF0450C 		mov	ip, #69
 1511              	.L99:
 562:Core/Src/printf.c ****     // output the exponent value
 1512              		.loc 1 562 5 discriminator 4 view .LVU372
 1513 0366 00F10108 		add	r8, r0, #1
 1514              	.LVL173:
 562:Core/Src/printf.c ****     // output the exponent value
 1515              		.loc 1 562 5 discriminator 4 view .LVU373
 1516 036a 2B46     		mov	r3, r5
 1517 036c 0246     		mov	r2, r0
 1518 036e 2146     		mov	r1, r4
 1519 0370 6046     		mov	r0, ip
 1520 0372 D047     		blx	r10
 1521              	.LVL174:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1522              		.loc 1 564 5 is_stmt 1 view .LVU374
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1523              		.loc 1 564 71 is_stmt 0 view .LVU375
 1524 0374 86EAE672 		eor	r2, r6, r6, asr #31
 1525 0378 A2EBE672 		sub	r2, r2, r6, asr #31
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1526              		.loc 1 564 11 view .LVU376
 1527 037c 0523     		movs	r3, #5
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 40


 1528 037e 0593     		str	r3, [sp, #20]
 1529 0380 013F     		subs	r7, r7, #1
 1530              	.LVL175:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1531              		.loc 1 564 11 view .LVU377
 1532 0382 0497     		str	r7, [sp, #16]
 1533 0384 0023     		movs	r3, #0
 1534 0386 0393     		str	r3, [sp, #12]
 1535 0388 0A23     		movs	r3, #10
 1536 038a 0293     		str	r3, [sp, #8]
 1537 038c F30F     		lsrs	r3, r6, #31
 1538 038e 0193     		str	r3, [sp, #4]
 1539 0390 0092     		str	r2, [sp]
 1540 0392 2B46     		mov	r3, r5
 1541 0394 4246     		mov	r2, r8
 1542 0396 2146     		mov	r1, r4
 1543 0398 5046     		mov	r0, r10
 1544 039a FFF7FEFF 		bl	_ntoa_long
 1545              	.LVL176:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1546              		.loc 1 566 5 is_stmt 1 view .LVU378
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1547              		.loc 1 566 8 is_stmt 0 view .LVU379
 1548 039e B9F1000F 		cmp	r9, #0
 1549 03a2 3FF454AF 		beq	.L82
 1550 03a6 0246     		mov	r2, r0
 1551 03a8 1D9F     		ldr	r7, [sp, #116]
 1552              	.LVL177:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1553              		.loc 1 566 8 view .LVU380
 1554 03aa 10E0     		b	.L100
 1555              	.LVL178:
 1556              	.L119:
 557:Core/Src/printf.c **** 
 1557              		.loc 1 557 9 discriminator 1 view .LVU381
 1558 03ac DDE90601 		ldrd	r0, [sp, #24]
 1559 03b0 0246     		mov	r2, r0
 1560 03b2 01F10043 		add	r3, r1, #-2147483648
 1561 03b6 CDE90623 		strd	r2, [sp, #24]
 1562              	.LVL179:
 557:Core/Src/printf.c **** 
 1563              		.loc 1 557 9 discriminator 1 view .LVU382
 1564 03ba B9E7     		b	.L97
 1565              	.LVL180:
 1566              	.L108:
 562:Core/Src/printf.c ****     // output the exponent value
 1567              		.loc 1 562 5 discriminator 2 view .LVU383
 1568 03bc 4FF0650C 		mov	ip, #101
 1569 03c0 D1E7     		b	.L99
 1570              	.LVL181:
 1571              	.L101:
 567:Core/Src/printf.c ****     }
 1572              		.loc 1 567 39 is_stmt 1 discriminator 2 view .LVU384
 1573 03c2 561C     		adds	r6, r2, #1
 1574              	.LVL182:
 567:Core/Src/printf.c ****     }
 1575              		.loc 1 567 39 is_stmt 0 discriminator 2 view .LVU385
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 41


 1576 03c4 2B46     		mov	r3, r5
 1577 03c6 2146     		mov	r1, r4
 1578 03c8 2020     		movs	r0, #32
 1579 03ca D047     		blx	r10
 1580              	.LVL183:
 1581 03cc 3246     		mov	r2, r6
 1582              	.LVL184:
 1583              	.L100:
 567:Core/Src/printf.c ****     }
 1584              		.loc 1 567 30 is_stmt 1 discriminator 1 view .LVU386
 567:Core/Src/printf.c ****     }
 1585              		.loc 1 567 18 is_stmt 0 discriminator 1 view .LVU387
 1586 03ce A2EB0B03 		sub	r3, r2, fp
 567:Core/Src/printf.c ****     }
 1587              		.loc 1 567 30 discriminator 1 view .LVU388
 1588 03d2 BB42     		cmp	r3, r7
 1589 03d4 F5D3     		bcc	.L101
 567:Core/Src/printf.c ****     }
 1590              		.loc 1 567 30 discriminator 1 view .LVU389
 1591 03d6 1046     		mov	r0, r2
 1592 03d8 39E7     		b	.L82
 1593              		.cfi_endproc
 1594              	.LFE12:
 1596 03da 00BF     		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 1597              		.align	2
 1598              	.LC0:
 1599 0000 666E692B 		.ascii	"fni+\000"
 1599      00
 1600 0005 000000   		.align	2
 1601              	.LC1:
 1602 0008 666E6900 		.ascii	"fni\000"
 1603              		.align	2
 1604              	.LC2:
 1605 000c 6E616E00 		.ascii	"nan\000"
 1606              		.align	2
 1607              	.LC3:
 1608 0010 666E692D 		.ascii	"fni-\000"
 1608      00
 1609              		.global	__aeabi_d2uiz
 1610              		.global	__aeabi_ui2d
 1611              		.global	__aeabi_dcmple
 1612              		.section	.text._ftoa,"ax",%progbits
 1613              		.align	1
 1614              		.syntax unified
 1615              		.thumb
 1616              		.thumb_func
 1618              	_ftoa:
 1619              	.LVL185:
 1620              	.LFB11:
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1621              		.loc 1 340 1 is_stmt 1 view -0
 1622              		.cfi_startproc
 1623              		@ args = 20, pretend = 0, frame = 64
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1625              		.loc 1 340 1 is_stmt 0 view .LVU391
 1626 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 42


 1627              	.LCFI20:
 1628              		.cfi_def_cfa_offset 36
 1629              		.cfi_offset 4, -36
 1630              		.cfi_offset 5, -32
 1631              		.cfi_offset 6, -28
 1632              		.cfi_offset 7, -24
 1633              		.cfi_offset 8, -20
 1634              		.cfi_offset 9, -16
 1635              		.cfi_offset 10, -12
 1636              		.cfi_offset 11, -8
 1637              		.cfi_offset 14, -4
 1638 0004 97B0     		sub	sp, sp, #92
 1639              	.LCFI21:
 1640              		.cfi_def_cfa_offset 128
 1641 0006 0790     		str	r0, [sp, #28]
 1642 0008 0A91     		str	r1, [sp, #40]
 1643 000a 9246     		mov	r10, r2
 1644 000c 9B46     		mov	fp, r3
 1645 000e DDE92089 		ldrd	r8, [sp, #128]
 1646 0012 229D     		ldr	r5, [sp, #136]
 341:Core/Src/printf.c ****   size_t len  = 0U;
 1647              		.loc 1 341 3 is_stmt 1 view .LVU392
 342:Core/Src/printf.c ****   double diff = 0.0;
 1648              		.loc 1 342 3 view .LVU393
 1649              	.LVL186:
 343:Core/Src/printf.c **** 
 1650              		.loc 1 343 3 view .LVU394
 346:Core/Src/printf.c **** 
 1651              		.loc 1 346 3 view .LVU395
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1652              		.loc 1 349 3 view .LVU396
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1653              		.loc 1 349 6 is_stmt 0 view .LVU397
 1654 0014 4246     		mov	r2, r8
 1655              	.LVL187:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1656              		.loc 1 349 6 view .LVU398
 1657 0016 4B46     		mov	r3, r9
 1658              	.LVL188:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1659              		.loc 1 349 6 view .LVU399
 1660 0018 4046     		mov	r0, r8
 1661              	.LVL189:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1662              		.loc 1 349 6 view .LVU400
 1663 001a 4946     		mov	r1, r9
 1664              	.LVL190:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1665              		.loc 1 349 6 view .LVU401
 1666 001c FFF7FEFF 		bl	__aeabi_dcmpeq
 1667              	.LVL191:
 1668 0020 0028     		cmp	r0, #0
 1669 0022 40D0     		beq	.L191
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1670              		.loc 1 351 3 is_stmt 1 view .LVU402
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1671              		.loc 1 351 6 is_stmt 0 view .LVU403
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 43


 1672 0024 4FF0FF32 		mov	r2, #-1
 1673 0028 6FF48013 		mvn	r3, #1048576
 1674 002c 4046     		mov	r0, r8
 1675 002e 4946     		mov	r1, r9
 1676 0030 FFF7FEFF 		bl	__aeabi_dcmplt
 1677              	.LVL192:
 1678 0034 0028     		cmp	r0, #0
 1679 0036 45D1     		bne	.L192
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1680              		.loc 1 353 3 is_stmt 1 view .LVU404
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1681              		.loc 1 353 6 is_stmt 0 view .LVU405
 1682 0038 4FF0FF32 		mov	r2, #-1
 1683 003c AC4B     		ldr	r3, .L196+16
 1684 003e 4046     		mov	r0, r8
 1685 0040 4946     		mov	r1, r9
 1686 0042 FFF7FEFF 		bl	__aeabi_dcmpgt
 1687              	.LVL193:
 1688 0046 0028     		cmp	r0, #0
 1689 0048 4BD1     		bne	.L193
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1690              		.loc 1 358 3 is_stmt 1 view .LVU406
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1691              		.loc 1 358 6 is_stmt 0 view .LVU407
 1692 004a A5A3     		adr	r3, .L196
 1693 004c D3E90023 		ldrd	r2, [r3]
 1694 0050 4046     		mov	r0, r8
 1695 0052 4946     		mov	r1, r9
 1696 0054 FFF7FEFF 		bl	__aeabi_dcmpgt
 1697              	.LVL194:
 1698 0058 0028     		cmp	r0, #0
 1699 005a 5AD1     		bne	.L132
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1700              		.loc 1 358 34 discriminator 1 view .LVU408
 1701 005c A2A3     		adr	r3, .L196+8
 1702 005e D3E90023 		ldrd	r2, [r3]
 1703 0062 4046     		mov	r0, r8
 1704 0064 4946     		mov	r1, r9
 1705 0066 FFF7FEFF 		bl	__aeabi_dcmplt
 1706              	.LVL195:
 1707 006a 0028     		cmp	r0, #0
 1708 006c 51D1     		bne	.L132
 367:Core/Src/printf.c ****   if (value < 0) {
 1709              		.loc 1 367 3 is_stmt 1 view .LVU409
 1710              	.LVL196:
 368:Core/Src/printf.c ****     negative = true;
 1711              		.loc 1 368 3 view .LVU410
 368:Core/Src/printf.c ****     negative = true;
 1712              		.loc 1 368 6 is_stmt 0 view .LVU411
 1713 006e 0022     		movs	r2, #0
 1714 0070 0023     		movs	r3, #0
 1715 0072 4046     		mov	r0, r8
 1716 0074 4946     		mov	r1, r9
 1717 0076 FFF7FEFF 		bl	__aeabi_dcmplt
 1718              	.LVL197:
 1719 007a 0028     		cmp	r0, #0
 1720 007c 57D1     		bne	.L194
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 44


 367:Core/Src/printf.c ****   if (value < 0) {
 1721              		.loc 1 367 8 view .LVU412
 1722 007e 0023     		movs	r3, #0
 1723 0080 0B93     		str	r3, [sp, #44]
 1724              	.LVL198:
 1725              	.L135:
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1726              		.loc 1 374 3 is_stmt 1 view .LVU413
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1727              		.loc 1 374 6 is_stmt 0 view .LVU414
 1728 0082 249B     		ldr	r3, [sp, #144]
 1729 0084 13F4806F 		tst	r3, #1024
 1730 0088 5CD0     		beq	.L168
 1731              	.L137:
 1732              	.LVL199:
 375:Core/Src/printf.c ****   }
 1733              		.loc 1 375 10 view .LVU415
 1734 008a 0024     		movs	r4, #0
 1735              	.LVL200:
 1736              	.L139:
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1737              		.loc 1 378 42 is_stmt 1 view .LVU416
 1738 008c 1F2C     		cmp	r4, #31
 1739 008e 5BD8     		bhi	.L140
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1740              		.loc 1 378 42 is_stmt 0 discriminator 1 view .LVU417
 1741 0090 092D     		cmp	r5, #9
 1742 0092 59D9     		bls	.L140
 379:Core/Src/printf.c ****     prec--;
 1743              		.loc 1 379 5 is_stmt 1 view .LVU418
 1744              	.LVL201:
 379:Core/Src/printf.c ****     prec--;
 1745              		.loc 1 379 16 is_stmt 0 view .LVU419
 1746 0094 04F15803 		add	r3, r4, #88
 1747 0098 6B44     		add	r3, sp, r3
 1748 009a 3022     		movs	r2, #48
 1749 009c 03F8202C 		strb	r2, [r3, #-32]
 380:Core/Src/printf.c ****   }
 1750              		.loc 1 380 5 is_stmt 1 view .LVU420
 380:Core/Src/printf.c ****   }
 1751              		.loc 1 380 9 is_stmt 0 view .LVU421
 1752 00a0 013D     		subs	r5, r5, #1
 1753              	.LVL202:
 379:Core/Src/printf.c ****     prec--;
 1754              		.loc 1 379 12 view .LVU422
 1755 00a2 0134     		adds	r4, r4, #1
 1756              	.LVL203:
 379:Core/Src/printf.c ****     prec--;
 1757              		.loc 1 379 12 view .LVU423
 1758 00a4 F2E7     		b	.L139
 1759              	.LVL204:
 1760              	.L191:
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1761              		.loc 1 350 5 is_stmt 1 view .LVU424
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1762              		.loc 1 350 12 is_stmt 0 view .LVU425
 1763 00a6 249B     		ldr	r3, [sp, #144]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 45


 1764 00a8 0393     		str	r3, [sp, #12]
 1765 00aa 239B     		ldr	r3, [sp, #140]
 1766 00ac 0293     		str	r3, [sp, #8]
 1767 00ae 0323     		movs	r3, #3
 1768 00b0 0193     		str	r3, [sp, #4]
 1769 00b2 904B     		ldr	r3, .L196+20
 1770 00b4 0093     		str	r3, [sp]
 1771 00b6 5B46     		mov	r3, fp
 1772 00b8 5246     		mov	r2, r10
 1773 00ba 0A99     		ldr	r1, [sp, #40]
 1774 00bc 0798     		ldr	r0, [sp, #28]
 1775 00be FFF7FEFF 		bl	_out_rev
 1776              	.LVL205:
 1777 00c2 07E1     		b	.L122
 1778              	.L192:
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1779              		.loc 1 352 5 is_stmt 1 view .LVU426
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1780              		.loc 1 352 12 is_stmt 0 view .LVU427
 1781 00c4 249B     		ldr	r3, [sp, #144]
 1782 00c6 0393     		str	r3, [sp, #12]
 1783 00c8 239B     		ldr	r3, [sp, #140]
 1784 00ca 0293     		str	r3, [sp, #8]
 1785 00cc 0423     		movs	r3, #4
 1786 00ce 0193     		str	r3, [sp, #4]
 1787 00d0 894B     		ldr	r3, .L196+24
 1788 00d2 0093     		str	r3, [sp]
 1789 00d4 5B46     		mov	r3, fp
 1790 00d6 5246     		mov	r2, r10
 1791 00d8 0A99     		ldr	r1, [sp, #40]
 1792 00da 0798     		ldr	r0, [sp, #28]
 1793 00dc FFF7FEFF 		bl	_out_rev
 1794              	.LVL206:
 1795 00e0 F8E0     		b	.L122
 1796              	.L193:
 354:Core/Src/printf.c **** 
 1797              		.loc 1 354 5 is_stmt 1 view .LVU428
 354:Core/Src/printf.c **** 
 1798              		.loc 1 354 12 is_stmt 0 view .LVU429
 1799 00e2 249B     		ldr	r3, [sp, #144]
 1800 00e4 13F00403 		ands	r3, r3, #4
 1801 00e8 0FD0     		beq	.L165
 354:Core/Src/printf.c **** 
 1802              		.loc 1 354 12 discriminator 1 view .LVU430
 1803 00ea 844A     		ldr	r2, .L196+28
 1804              	.L130:
 354:Core/Src/printf.c **** 
 1805              		.loc 1 354 12 discriminator 4 view .LVU431
 1806 00ec 7BB1     		cbz	r3, .L166
 354:Core/Src/printf.c **** 
 1807              		.loc 1 354 12 discriminator 5 view .LVU432
 1808 00ee 0423     		movs	r3, #4
 1809              	.L131:
 354:Core/Src/printf.c **** 
 1810              		.loc 1 354 12 discriminator 8 view .LVU433
 1811 00f0 2499     		ldr	r1, [sp, #144]
 1812 00f2 0391     		str	r1, [sp, #12]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 46


 1813 00f4 2399     		ldr	r1, [sp, #140]
 1814 00f6 0291     		str	r1, [sp, #8]
 1815 00f8 0193     		str	r3, [sp, #4]
 1816 00fa 0092     		str	r2, [sp]
 1817 00fc 5B46     		mov	r3, fp
 1818 00fe 5246     		mov	r2, r10
 1819 0100 0A99     		ldr	r1, [sp, #40]
 1820 0102 0798     		ldr	r0, [sp, #28]
 1821 0104 FFF7FEFF 		bl	_out_rev
 1822              	.LVL207:
 354:Core/Src/printf.c **** 
 1823              		.loc 1 354 12 view .LVU434
 1824 0108 E4E0     		b	.L122
 1825              	.L165:
 354:Core/Src/printf.c **** 
 1826              		.loc 1 354 12 discriminator 2 view .LVU435
 1827 010a 7D4A     		ldr	r2, .L196+32
 1828 010c EEE7     		b	.L130
 1829              	.L166:
 354:Core/Src/printf.c **** 
 1830              		.loc 1 354 12 discriminator 6 view .LVU436
 1831 010e 0323     		movs	r3, #3
 1832 0110 EEE7     		b	.L131
 1833              	.L132:
 360:Core/Src/printf.c **** #else
 1834              		.loc 1 360 5 is_stmt 1 view .LVU437
 360:Core/Src/printf.c **** #else
 1835              		.loc 1 360 12 is_stmt 0 view .LVU438
 1836 0112 249B     		ldr	r3, [sp, #144]
 1837 0114 0493     		str	r3, [sp, #16]
 1838 0116 239B     		ldr	r3, [sp, #140]
 1839 0118 0393     		str	r3, [sp, #12]
 1840 011a 0295     		str	r5, [sp, #8]
 1841 011c CDE90089 		strd	r8, [sp]
 1842 0120 5B46     		mov	r3, fp
 1843 0122 5246     		mov	r2, r10
 1844 0124 0A99     		ldr	r1, [sp, #40]
 1845 0126 0798     		ldr	r0, [sp, #28]
 1846 0128 FFF7FEFF 		bl	_etoa
 1847              	.LVL208:
 1848 012c D2E0     		b	.L122
 1849              	.LVL209:
 1850              	.L194:
 369:Core/Src/printf.c ****     value = 0 - value;
 1851              		.loc 1 369 5 is_stmt 1 view .LVU439
 370:Core/Src/printf.c ****   }
 1852              		.loc 1 370 5 view .LVU440
 370:Core/Src/printf.c ****   }
 1853              		.loc 1 370 11 is_stmt 0 view .LVU441
 1854 012e 4246     		mov	r2, r8
 1855 0130 4B46     		mov	r3, r9
 1856 0132 0020     		movs	r0, #0
 1857 0134 0021     		movs	r1, #0
 1858 0136 FFF7FEFF 		bl	__aeabi_dsub
 1859              	.LVL210:
 1860 013a 8046     		mov	r8, r0
 1861 013c 8946     		mov	r9, r1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 47


 1862              	.LVL211:
 369:Core/Src/printf.c ****     value = 0 - value;
 1863              		.loc 1 369 14 view .LVU442
 1864 013e 0123     		movs	r3, #1
 1865 0140 0B93     		str	r3, [sp, #44]
 1866 0142 9EE7     		b	.L135
 1867              	.LVL212:
 1868              	.L168:
 375:Core/Src/printf.c ****   }
 1869              		.loc 1 375 10 view .LVU443
 1870 0144 0625     		movs	r5, #6
 1871 0146 A0E7     		b	.L137
 1872              	.LVL213:
 1873              	.L140:
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1874              		.loc 1 383 3 is_stmt 1 view .LVU444
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1875              		.loc 1 383 7 is_stmt 0 view .LVU445
 1876 0148 4046     		mov	r0, r8
 1877 014a 4946     		mov	r1, r9
 1878 014c FFF7FEFF 		bl	__aeabi_d2iz
 1879              	.LVL214:
 1880 0150 0646     		mov	r6, r0
 1881              	.LVL215:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1882              		.loc 1 384 3 is_stmt 1 view .LVU446
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1883              		.loc 1 384 23 is_stmt 0 view .LVU447
 1884 0152 FFF7FEFF 		bl	__aeabi_i2d
 1885              	.LVL216:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1886              		.loc 1 384 23 view .LVU448
 1887 0156 0246     		mov	r2, r0
 1888 0158 0B46     		mov	r3, r1
 1889 015a 4046     		mov	r0, r8
 1890 015c 4946     		mov	r1, r9
 1891 015e FFF7FEFF 		bl	__aeabi_dsub
 1892              	.LVL217:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1893              		.loc 1 384 39 view .LVU449
 1894 0162 684B     		ldr	r3, .L196+36
 1895 0164 03EBC503 		add	r3, r3, r5, lsl #3
 1896 0168 D3E90023 		ldrd	r2, [r3]
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1897              		.loc 1 384 10 view .LVU450
 1898 016c CDE90C23 		strd	r2, [sp, #48]
 1899 0170 FFF7FEFF 		bl	__aeabi_dmul
 1900              	.LVL218:
 1901 0174 0246     		mov	r2, r0
 1902 0176 0B46     		mov	r3, r1
 1903 0178 CDE90823 		strd	r2, [sp, #32]
 1904              	.LVL219:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1905              		.loc 1 385 3 is_stmt 1 view .LVU451
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1906              		.loc 1 385 17 is_stmt 0 view .LVU452
 1907 017c FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 48


 1908              	.LVL220:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1909              		.loc 1 385 17 view .LVU453
 1910 0180 0746     		mov	r7, r0
 1911              	.LVL221:
 386:Core/Src/printf.c **** 
 1912              		.loc 1 386 3 is_stmt 1 view .LVU454
 386:Core/Src/printf.c **** 
 1913              		.loc 1 386 14 is_stmt 0 view .LVU455
 1914 0182 FFF7FEFF 		bl	__aeabi_ui2d
 1915              	.LVL222:
 386:Core/Src/printf.c **** 
 1916              		.loc 1 386 14 view .LVU456
 1917 0186 0246     		mov	r2, r0
 1918 0188 0B46     		mov	r3, r1
 386:Core/Src/printf.c **** 
 1919              		.loc 1 386 8 view .LVU457
 1920 018a DDE90801 		ldrd	r0, [sp, #32]
 1921 018e FFF7FEFF 		bl	__aeabi_dsub
 1922              	.LVL223:
 1923 0192 0246     		mov	r2, r0
 1924 0194 0B46     		mov	r3, r1
 1925 0196 CDE90823 		strd	r2, [sp, #32]
 1926              	.LVL224:
 388:Core/Src/printf.c ****     ++frac;
 1927              		.loc 1 388 3 is_stmt 1 view .LVU458
 388:Core/Src/printf.c ****     ++frac;
 1928              		.loc 1 388 6 is_stmt 0 view .LVU459
 1929 019a 0022     		movs	r2, #0
 1930              	.LVL225:
 388:Core/Src/printf.c ****     ++frac;
 1931              		.loc 1 388 6 view .LVU460
 1932 019c 5A4B     		ldr	r3, .L196+40
 1933 019e FFF7FEFF 		bl	__aeabi_dcmpgt
 1934              	.LVL226:
 1935 01a2 08B3     		cbz	r0, .L182
 389:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 1936              		.loc 1 389 5 is_stmt 1 view .LVU461
 1937 01a4 0137     		adds	r7, r7, #1
 1938              	.LVL227:
 391:Core/Src/printf.c ****       frac = 0;
 1939              		.loc 1 391 5 view .LVU462
 391:Core/Src/printf.c ****       frac = 0;
 1940              		.loc 1 391 14 is_stmt 0 view .LVU463
 1941 01a6 3846     		mov	r0, r7
 1942 01a8 FFF7FEFF 		bl	__aeabi_ui2d
 1943              	.LVL228:
 1944 01ac 0246     		mov	r2, r0
 1945 01ae 0B46     		mov	r3, r1
 391:Core/Src/printf.c ****       frac = 0;
 1946              		.loc 1 391 8 view .LVU464
 1947 01b0 DDE90C01 		ldrd	r0, [sp, #48]
 1948 01b4 FFF7FEFF 		bl	__aeabi_dcmple
 1949              	.LVL229:
 1950 01b8 08B1     		cbz	r0, .L144
 392:Core/Src/printf.c ****       ++whole;
 1951              		.loc 1 392 7 is_stmt 1 view .LVU465
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 49


 1952              	.LVL230:
 393:Core/Src/printf.c ****     }
 1953              		.loc 1 393 7 view .LVU466
 1954 01ba 0136     		adds	r6, r6, #1
 1955              	.LVL231:
 392:Core/Src/printf.c ****       ++whole;
 1956              		.loc 1 392 12 is_stmt 0 view .LVU467
 1957 01bc 0027     		movs	r7, #0
 1958              	.LVL232:
 1959              	.L144:
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1960              		.loc 1 403 3 is_stmt 1 view .LVU468
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1961              		.loc 1 403 6 is_stmt 0 view .LVU469
 1962 01be 0DBB     		cbnz	r5, .L147
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1963              		.loc 1 404 5 is_stmt 1 view .LVU470
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1964              		.loc 1 404 20 is_stmt 0 view .LVU471
 1965 01c0 3046     		mov	r0, r6
 1966 01c2 FFF7FEFF 		bl	__aeabi_i2d
 1967              	.LVL233:
 1968 01c6 0246     		mov	r2, r0
 1969 01c8 0B46     		mov	r3, r1
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1970              		.loc 1 404 10 view .LVU472
 1971 01ca 4046     		mov	r0, r8
 1972 01cc 4946     		mov	r1, r9
 1973 01ce FFF7FEFF 		bl	__aeabi_dsub
 1974              	.LVL234:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1975              		.loc 1 405 5 is_stmt 1 view .LVU473
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1976              		.loc 1 405 8 is_stmt 0 view .LVU474
 1977 01d2 0022     		movs	r2, #0
 1978 01d4 4C4B     		ldr	r3, .L196+40
 1979 01d6 FFF7FEFF 		bl	__aeabi_dcmplt
 1980              	.LVL235:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1981              		.loc 1 405 8 view .LVU475
 1982 01da 0028     		cmp	r0, #0
 1983 01dc 42D1     		bne	.L155
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 1984              		.loc 1 405 41 discriminator 3 view .LVU476
 1985 01de 16F0010F 		tst	r6, #1
 1986 01e2 3FD0     		beq	.L155
 408:Core/Src/printf.c ****     }
 1987              		.loc 1 408 7 is_stmt 1 view .LVU477
 1988 01e4 0136     		adds	r6, r6, #1
 1989              	.LVL236:
 408:Core/Src/printf.c ****     }
 1990              		.loc 1 408 7 is_stmt 0 view .LVU478
 1991 01e6 3DE0     		b	.L155
 1992              	.LVL237:
 1993              	.L182:
 396:Core/Src/printf.c ****   }
 1994              		.loc 1 396 8 is_stmt 1 view .LVU479
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 50


 396:Core/Src/printf.c ****   }
 1995              		.loc 1 396 11 is_stmt 0 view .LVU480
 1996 01e8 0022     		movs	r2, #0
 1997 01ea 474B     		ldr	r3, .L196+40
 1998 01ec DDE90801 		ldrd	r0, [sp, #32]
 1999 01f0 FFF7FEFF 		bl	__aeabi_dcmplt
 2000              	.LVL238:
 2001 01f4 0028     		cmp	r0, #0
 2002 01f6 E2D1     		bne	.L144
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2003              		.loc 1 398 8 is_stmt 1 view .LVU481
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2004              		.loc 1 398 11 is_stmt 0 view .LVU482
 2005 01f8 17B1     		cbz	r7, .L146
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2006              		.loc 1 398 25 discriminator 1 view .LVU483
 2007 01fa 17F0010F 		tst	r7, #1
 2008 01fe DED0     		beq	.L144
 2009              	.L146:
 400:Core/Src/printf.c ****   }
 2010              		.loc 1 400 5 is_stmt 1 view .LVU484
 2011 0200 0137     		adds	r7, r7, #1
 2012              	.LVL239:
 400:Core/Src/printf.c ****   }
 2013              		.loc 1 400 5 is_stmt 0 view .LVU485
 2014 0202 DCE7     		b	.L144
 2015              	.LVL240:
 2016              	.L147:
 2017              	.LBB30:
 414:Core/Src/printf.c ****       --count;
 2018              		.loc 1 414 16 is_stmt 1 view .LVU486
 2019 0204 1F2C     		cmp	r4, #31
 2020 0206 17D8     		bhi	.L151
 415:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2021              		.loc 1 415 7 view .LVU487
 2022 0208 013D     		subs	r5, r5, #1
 2023              	.LVL241:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2024              		.loc 1 416 7 view .LVU488
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2025              		.loc 1 416 39 is_stmt 0 view .LVU489
 2026 020a 404B     		ldr	r3, .L196+44
 2027 020c A3FB0723 		umull	r2, r3, r3, r7
 2028 0210 DB08     		lsrs	r3, r3, #3
 2029 0212 1946     		mov	r1, r3
 2030 0214 03EB8303 		add	r3, r3, r3, lsl #2
 2031 0218 A7EB4303 		sub	r3, r7, r3, lsl #1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2032              		.loc 1 416 14 view .LVU490
 2033 021c 621C     		adds	r2, r4, #1
 2034              	.LVL242:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2035              		.loc 1 416 20 view .LVU491
 2036 021e 3033     		adds	r3, r3, #48
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2037              		.loc 1 416 18 view .LVU492
 2038 0220 04F15800 		add	r0, r4, #88
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 51


 2039 0224 0DEB0004 		add	r4, sp, r0
 2040 0228 04F8203C 		strb	r3, [r4, #-32]
 417:Core/Src/printf.c ****         break;
 2041              		.loc 1 417 7 is_stmt 1 view .LVU493
 2042              	.LVL243:
 417:Core/Src/printf.c ****         break;
 2043              		.loc 1 417 10 is_stmt 0 view .LVU494
 2044 022c 092F     		cmp	r7, #9
 2045 022e 02D9     		bls	.L169
 417:Core/Src/printf.c ****         break;
 2046              		.loc 1 417 18 view .LVU495
 2047 0230 0F46     		mov	r7, r1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2048              		.loc 1 416 14 view .LVU496
 2049 0232 1446     		mov	r4, r2
 2050 0234 E6E7     		b	.L147
 2051              	.L169:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2052              		.loc 1 416 14 view .LVU497
 2053 0236 1446     		mov	r4, r2
 2054              	.LVL244:
 2055              	.L151:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2056              		.loc 1 422 44 is_stmt 1 view .LVU498
 2057 0238 1F2C     		cmp	r4, #31
 2058 023a 0AD8     		bhi	.L152
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2059              		.loc 1 422 53 is_stmt 0 discriminator 1 view .LVU499
 2060 023c 6B1E     		subs	r3, r5, #1
 2061              	.LVL245:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2062              		.loc 1 422 44 discriminator 1 view .LVU500
 2063 023e 45B1     		cbz	r5, .L152
 423:Core/Src/printf.c ****     }
 2064              		.loc 1 423 7 is_stmt 1 view .LVU501
 2065              	.LVL246:
 423:Core/Src/printf.c ****     }
 2066              		.loc 1 423 18 is_stmt 0 view .LVU502
 2067 0240 04F15802 		add	r2, r4, #88
 2068 0244 6A44     		add	r2, sp, r2
 2069 0246 3021     		movs	r1, #48
 2070 0248 02F8201C 		strb	r1, [r2, #-32]
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2071              		.loc 1 422 53 discriminator 1 view .LVU503
 2072 024c 1D46     		mov	r5, r3
 423:Core/Src/printf.c ****     }
 2073              		.loc 1 423 14 view .LVU504
 2074 024e 0134     		adds	r4, r4, #1
 2075              	.LVL247:
 423:Core/Src/printf.c ****     }
 2076              		.loc 1 423 14 view .LVU505
 2077 0250 F2E7     		b	.L151
 2078              	.LVL248:
 2079              	.L152:
 425:Core/Src/printf.c ****       // add decimal
 2080              		.loc 1 425 5 is_stmt 1 view .LVU506
 425:Core/Src/printf.c ****       // add decimal
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 52


 2081              		.loc 1 425 8 is_stmt 0 view .LVU507
 2082 0252 1F2C     		cmp	r4, #31
 2083 0254 06D8     		bhi	.L155
 427:Core/Src/printf.c ****     }
 2084              		.loc 1 427 7 is_stmt 1 view .LVU508
 2085              	.LVL249:
 427:Core/Src/printf.c ****     }
 2086              		.loc 1 427 18 is_stmt 0 view .LVU509
 2087 0256 04F15803 		add	r3, r4, #88
 2088 025a 6B44     		add	r3, sp, r3
 2089 025c 2E22     		movs	r2, #46
 2090 025e 03F8202C 		strb	r2, [r3, #-32]
 427:Core/Src/printf.c ****     }
 2091              		.loc 1 427 14 view .LVU510
 2092 0262 0134     		adds	r4, r4, #1
 2093              	.LVL250:
 2094              	.L155:
 427:Core/Src/printf.c ****     }
 2095              		.loc 1 427 14 view .LVU511
 2096              	.LBE30:
 432:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2097              		.loc 1 432 14 is_stmt 1 view .LVU512
 2098 0264 1F2C     		cmp	r4, #31
 2099 0266 17D8     		bhi	.L154
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2100              		.loc 1 433 5 view .LVU513
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2101              		.loc 1 433 37 is_stmt 0 view .LVU514
 2102 0268 294A     		ldr	r2, .L196+48
 2103 026a 82FB0632 		smull	r3, r2, r2, r6
 2104 026e F317     		asrs	r3, r6, #31
 2105 0270 C3EBA203 		rsb	r3, r3, r2, asr #2
 2106 0274 1A46     		mov	r2, r3
 2107 0276 03EB8303 		add	r3, r3, r3, lsl #2
 2108 027a A6EB4303 		sub	r3, r6, r3, lsl #1
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2109              		.loc 1 433 12 view .LVU515
 2110 027e 611C     		adds	r1, r4, #1
 2111              	.LVL251:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2112              		.loc 1 433 18 view .LVU516
 2113 0280 3033     		adds	r3, r3, #48
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2114              		.loc 1 433 16 view .LVU517
 2115 0282 04F15800 		add	r0, r4, #88
 2116 0286 0DEB0004 		add	r4, sp, r0
 2117 028a 04F8203C 		strb	r3, [r4, #-32]
 434:Core/Src/printf.c ****       break;
 2118              		.loc 1 434 5 is_stmt 1 view .LVU518
 434:Core/Src/printf.c ****       break;
 2119              		.loc 1 434 17 is_stmt 0 view .LVU519
 2120 028e 1646     		mov	r6, r2
 2121              	.LVL252:
 434:Core/Src/printf.c ****       break;
 2122              		.loc 1 434 8 view .LVU520
 2123 0290 0AB1     		cbz	r2, .L170
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 53


 2124              		.loc 1 433 12 view .LVU521
 2125 0292 0C46     		mov	r4, r1
 2126 0294 E6E7     		b	.L155
 2127              	.L170:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2128              		.loc 1 433 12 view .LVU522
 2129 0296 0C46     		mov	r4, r1
 2130              	.LVL253:
 2131              	.L154:
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2132              		.loc 1 440 3 is_stmt 1 view .LVU523
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2133              		.loc 1 440 29 is_stmt 0 view .LVU524
 2134 0298 249B     		ldr	r3, [sp, #144]
 2135 029a 03F00303 		and	r3, r3, #3
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2136              		.loc 1 440 6 view .LVU525
 2137 029e 012B     		cmp	r3, #1
 2138 02a0 38D0     		beq	.L195
 2139              	.LVL254:
 2140              	.L157:
 449:Core/Src/printf.c ****     if (negative) {
 2141              		.loc 1 449 3 is_stmt 1 view .LVU526
 449:Core/Src/printf.c ****     if (negative) {
 2142              		.loc 1 449 6 is_stmt 0 view .LVU527
 2143 02a2 1F2C     		cmp	r4, #31
 2144 02a4 09D8     		bhi	.L162
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2145              		.loc 1 450 5 is_stmt 1 view .LVU528
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2146              		.loc 1 450 8 is_stmt 0 view .LVU529
 2147 02a6 0B9B     		ldr	r3, [sp, #44]
 2148 02a8 002B     		cmp	r3, #0
 2149 02aa 50D0     		beq	.L163
 451:Core/Src/printf.c ****     }
 2150              		.loc 1 451 7 is_stmt 1 view .LVU530
 2151              	.LVL255:
 451:Core/Src/printf.c ****     }
 2152              		.loc 1 451 18 is_stmt 0 view .LVU531
 2153 02ac 04F15803 		add	r3, r4, #88
 2154 02b0 6B44     		add	r3, sp, r3
 2155 02b2 2D22     		movs	r2, #45
 2156 02b4 03F8202C 		strb	r2, [r3, #-32]
 451:Core/Src/printf.c ****     }
 2157              		.loc 1 451 14 view .LVU532
 2158 02b8 0134     		adds	r4, r4, #1
 2159              	.LVL256:
 2160              	.L162:
 461:Core/Src/printf.c **** }
 2161              		.loc 1 461 3 is_stmt 1 view .LVU533
 461:Core/Src/printf.c **** }
 2162              		.loc 1 461 10 is_stmt 0 view .LVU534
 2163 02ba 249B     		ldr	r3, [sp, #144]
 2164 02bc 0393     		str	r3, [sp, #12]
 2165 02be 239B     		ldr	r3, [sp, #140]
 2166 02c0 0293     		str	r3, [sp, #8]
 2167 02c2 0194     		str	r4, [sp, #4]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 54


 2168 02c4 0EAB     		add	r3, sp, #56
 2169 02c6 0093     		str	r3, [sp]
 2170 02c8 5B46     		mov	r3, fp
 2171 02ca 5246     		mov	r2, r10
 2172 02cc 0A99     		ldr	r1, [sp, #40]
 2173 02ce 0798     		ldr	r0, [sp, #28]
 2174 02d0 FFF7FEFF 		bl	_out_rev
 2175              	.LVL257:
 2176              	.L122:
 462:Core/Src/printf.c **** 
 2177              		.loc 1 462 1 view .LVU535
 2178 02d4 17B0     		add	sp, sp, #92
 2179              	.LCFI22:
 2180              		.cfi_remember_state
 2181              		.cfi_def_cfa_offset 36
 2182              		@ sp needed
 2183 02d6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2184              	.LVL258:
 2185              	.L197:
 462:Core/Src/printf.c **** 
 2186              		.loc 1 462 1 view .LVU536
 2187 02da 00BFAFF3 		.align	3
 2187      0080
 2188              	.L196:
 2189 02e0 00000000 		.word	0
 2190 02e4 65CDCD41 		.word	1104006501
 2191 02e8 00000000 		.word	0
 2192 02ec 65CDCDC1 		.word	-1043477147
 2193 02f0 FFFFEF7F 		.word	2146435071
 2194 02f4 0C000000 		.word	.LC2
 2195 02f8 10000000 		.word	.LC3
 2196 02fc 00000000 		.word	.LC0
 2197 0300 08000000 		.word	.LC1
 2198 0304 00000000 		.word	pow10.0
 2199 0308 0000E03F 		.word	1071644672
 2200 030c CDCCCCCC 		.word	-858993459
 2201 0310 67666666 		.word	1717986919
 2202              	.LVL259:
 2203              	.L195:
 2204              	.LCFI23:
 2205              		.cfi_restore_state
 441:Core/Src/printf.c ****       width--;
 2206              		.loc 1 441 5 is_stmt 1 view .LVU537
 441:Core/Src/printf.c ****       width--;
 2207              		.loc 1 441 8 is_stmt 0 view .LVU538
 2208 0314 239B     		ldr	r3, [sp, #140]
 2209 0316 B3B1     		cbz	r3, .L187
 441:Core/Src/printf.c ****       width--;
 2210              		.loc 1 441 15 discriminator 1 view .LVU539
 2211 0318 0B9B     		ldr	r3, [sp, #44]
 2212 031a 1BB9     		cbnz	r3, .L159
 441:Core/Src/printf.c ****       width--;
 2213              		.loc 1 441 28 discriminator 2 view .LVU540
 2214 031c 249B     		ldr	r3, [sp, #144]
 2215 031e 13F00C0F 		tst	r3, #12
 2216 0322 12D0     		beq	.L188
 2217              	.L159:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 55


 442:Core/Src/printf.c ****     }
 2218              		.loc 1 442 7 is_stmt 1 view .LVU541
 442:Core/Src/printf.c ****     }
 2219              		.loc 1 442 12 is_stmt 0 view .LVU542
 2220 0324 239B     		ldr	r3, [sp, #140]
 2221 0326 013B     		subs	r3, r3, #1
 2222 0328 2393     		str	r3, [sp, #140]
 2223              	.LVL260:
 442:Core/Src/printf.c ****     }
 2224              		.loc 1 442 12 view .LVU543
 2225 032a 1946     		mov	r1, r3
 2226 032c 06E0     		b	.L160
 2227              	.LVL261:
 2228              	.L161:
 445:Core/Src/printf.c ****     }
 2229              		.loc 1 445 7 is_stmt 1 view .LVU544
 445:Core/Src/printf.c ****     }
 2230              		.loc 1 445 18 is_stmt 0 view .LVU545
 2231 032e 04F15803 		add	r3, r4, #88
 2232 0332 6B44     		add	r3, sp, r3
 2233 0334 3022     		movs	r2, #48
 2234 0336 03F8202C 		strb	r2, [r3, #-32]
 445:Core/Src/printf.c ****     }
 2235              		.loc 1 445 14 view .LVU546
 2236 033a 0134     		adds	r4, r4, #1
 2237              	.LVL262:
 2238              	.L160:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2239              		.loc 1 444 26 is_stmt 1 view .LVU547
 2240 033c 8C42     		cmp	r4, r1
 2241 033e B0D2     		bcs	.L157
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2242              		.loc 1 444 26 is_stmt 0 discriminator 1 view .LVU548
 2243 0340 1F2C     		cmp	r4, #31
 2244 0342 F4D9     		bls	.L161
 2245 0344 ADE7     		b	.L157
 2246              	.LVL263:
 2247              	.L187:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2248              		.loc 1 444 26 discriminator 1 view .LVU549
 2249 0346 2399     		ldr	r1, [sp, #140]
 2250 0348 F8E7     		b	.L160
 2251              	.L188:
 2252 034a 2399     		ldr	r1, [sp, #140]
 2253 034c F6E7     		b	.L160
 2254              	.L163:
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2255              		.loc 1 453 10 is_stmt 1 view .LVU550
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2256              		.loc 1 453 13 is_stmt 0 view .LVU551
 2257 034e 249B     		ldr	r3, [sp, #144]
 2258 0350 13F0040F 		tst	r3, #4
 2259 0354 07D0     		beq	.L164
 454:Core/Src/printf.c ****     }
 2260              		.loc 1 454 7 is_stmt 1 view .LVU552
 2261              	.LVL264:
 454:Core/Src/printf.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 56


 2262              		.loc 1 454 18 is_stmt 0 view .LVU553
 2263 0356 04F15803 		add	r3, r4, #88
 2264 035a 6B44     		add	r3, sp, r3
 2265 035c 2B22     		movs	r2, #43
 2266 035e 03F8202C 		strb	r2, [r3, #-32]
 454:Core/Src/printf.c ****     }
 2267              		.loc 1 454 14 view .LVU554
 2268 0362 0134     		adds	r4, r4, #1
 2269              	.LVL265:
 454:Core/Src/printf.c ****     }
 2270              		.loc 1 454 14 view .LVU555
 2271 0364 A9E7     		b	.L162
 2272              	.L164:
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2273              		.loc 1 456 10 is_stmt 1 view .LVU556
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2274              		.loc 1 456 13 is_stmt 0 view .LVU557
 2275 0366 249B     		ldr	r3, [sp, #144]
 2276 0368 13F0080F 		tst	r3, #8
 2277 036c A5D0     		beq	.L162
 457:Core/Src/printf.c ****     }
 2278              		.loc 1 457 7 is_stmt 1 view .LVU558
 2279              	.LVL266:
 457:Core/Src/printf.c ****     }
 2280              		.loc 1 457 18 is_stmt 0 view .LVU559
 2281 036e 04F15803 		add	r3, r4, #88
 2282 0372 6B44     		add	r3, sp, r3
 2283 0374 2022     		movs	r2, #32
 2284 0376 03F8202C 		strb	r2, [r3, #-32]
 457:Core/Src/printf.c ****     }
 2285              		.loc 1 457 14 view .LVU560
 2286 037a 0134     		adds	r4, r4, #1
 2287              	.LVL267:
 457:Core/Src/printf.c ****     }
 2288              		.loc 1 457 14 view .LVU561
 2289 037c 9DE7     		b	.L162
 2290              		.cfi_endproc
 2291              	.LFE11:
 2293 037e 00BF     		.section	.text._vsnprintf,"ax",%progbits
 2294              		.align	1
 2295              		.syntax unified
 2296              		.thumb
 2297              		.thumb_func
 2299              	_vsnprintf:
 2300              	.LVL268:
 2301              	.LFB13:
 572:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 573:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 574:Core/Src/printf.c **** 
 575:Core/Src/printf.c **** 
 576:Core/Src/printf.c **** // internal vsnprintf
 577:Core/Src/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 578:Core/Src/printf.c **** {
 2302              		.loc 1 578 1 is_stmt 1 view -0
 2303              		.cfi_startproc
 2304              		@ args = 4, pretend = 0, frame = 24
 2305              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 57


 2306              		.loc 1 578 1 is_stmt 0 view .LVU563
 2307 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2308              	.LCFI24:
 2309              		.cfi_def_cfa_offset 36
 2310              		.cfi_offset 4, -36
 2311              		.cfi_offset 5, -32
 2312              		.cfi_offset 6, -28
 2313              		.cfi_offset 7, -24
 2314              		.cfi_offset 8, -20
 2315              		.cfi_offset 9, -16
 2316              		.cfi_offset 10, -12
 2317              		.cfi_offset 11, -8
 2318              		.cfi_offset 14, -4
 2319 0004 91B0     		sub	sp, sp, #68
 2320              	.LCFI25:
 2321              		.cfi_def_cfa_offset 104
 2322 0006 8046     		mov	r8, r0
 2323 0008 1746     		mov	r7, r2
 2324 000a 0F93     		str	r3, [sp, #60]
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2325              		.loc 1 579 3 is_stmt 1 view .LVU564
 580:Core/Src/printf.c ****   size_t idx = 0U;
 2326              		.loc 1 580 3 view .LVU565
 2327              	.LVL269:
 581:Core/Src/printf.c **** 
 582:Core/Src/printf.c ****   if (!buffer) {
 2328              		.loc 1 582 3 view .LVU566
 2329              		.loc 1 582 6 is_stmt 0 view .LVU567
 2330 000c 8946     		mov	r9, r1
 2331 000e 0029     		cmp	r1, #0
 2332 0010 00F04A83 		beq	.L302
 2333              	.L199:
 2334              	.LVL270:
 2335              	.LBB31:
 583:Core/Src/printf.c ****     // use null output function
 584:Core/Src/printf.c ****     out = _out_null;
 585:Core/Src/printf.c ****   }
 586:Core/Src/printf.c **** 
 587:Core/Src/printf.c ****   while (*format)
 588:Core/Src/printf.c ****   {
 589:Core/Src/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 590:Core/Src/printf.c ****     if (*format != '%') {
 591:Core/Src/printf.c ****       // no
 592:Core/Src/printf.c ****       out(*format, buffer, idx++, maxlen);
 593:Core/Src/printf.c ****       format++;
 594:Core/Src/printf.c ****       continue;
 595:Core/Src/printf.c ****     }
 596:Core/Src/printf.c ****     else {
 597:Core/Src/printf.c ****       // yes, evaluate it
 598:Core/Src/printf.c ****       format++;
 599:Core/Src/printf.c ****     }
 600:Core/Src/printf.c **** 
 601:Core/Src/printf.c ****     // evaluate flags
 602:Core/Src/printf.c ****     flags = 0U;
 603:Core/Src/printf.c ****     do {
 604:Core/Src/printf.c ****       switch (*format) {
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 58


 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 611:Core/Src/printf.c ****       }
 612:Core/Src/printf.c ****     } while (n);
 613:Core/Src/printf.c **** 
 614:Core/Src/printf.c ****     // evaluate width field
 615:Core/Src/printf.c ****     width = 0U;
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 617:Core/Src/printf.c ****       width = _atoi(&format);
 618:Core/Src/printf.c ****     }
 619:Core/Src/printf.c ****     else if (*format == '*') {
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 621:Core/Src/printf.c ****       if (w < 0) {
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 624:Core/Src/printf.c ****       }
 625:Core/Src/printf.c ****       else {
 626:Core/Src/printf.c ****         width = (unsigned int)w;
 627:Core/Src/printf.c ****       }
 628:Core/Src/printf.c ****       format++;
 629:Core/Src/printf.c ****     }
 630:Core/Src/printf.c **** 
 631:Core/Src/printf.c ****     // evaluate precision field
 632:Core/Src/printf.c ****     precision = 0U;
 633:Core/Src/printf.c ****     if (*format == '.') {
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 635:Core/Src/printf.c ****       format++;
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 638:Core/Src/printf.c ****       }
 639:Core/Src/printf.c ****       else if (*format == '*') {
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 642:Core/Src/printf.c ****         format++;
 643:Core/Src/printf.c ****       }
 644:Core/Src/printf.c ****     }
 645:Core/Src/printf.c **** 
 646:Core/Src/printf.c ****     // evaluate length field
 647:Core/Src/printf.c ****     switch (*format) {
 648:Core/Src/printf.c ****       case 'l' :
 649:Core/Src/printf.c ****         flags |= FLAGS_LONG;
 650:Core/Src/printf.c ****         format++;
 651:Core/Src/printf.c ****         if (*format == 'l') {
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 653:Core/Src/printf.c ****           format++;
 654:Core/Src/printf.c ****         }
 655:Core/Src/printf.c ****         break;
 656:Core/Src/printf.c ****       case 'h' :
 657:Core/Src/printf.c ****         flags |= FLAGS_SHORT;
 658:Core/Src/printf.c ****         format++;
 659:Core/Src/printf.c ****         if (*format == 'h') {
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 661:Core/Src/printf.c ****           format++;
 662:Core/Src/printf.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 59


 663:Core/Src/printf.c ****         break;
 664:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 665:Core/Src/printf.c ****       case 't' :
 666:Core/Src/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:Core/Src/printf.c ****         format++;
 668:Core/Src/printf.c ****         break;
 669:Core/Src/printf.c **** #endif
 670:Core/Src/printf.c ****       case 'j' :
 671:Core/Src/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 672:Core/Src/printf.c ****         format++;
 673:Core/Src/printf.c ****         break;
 674:Core/Src/printf.c ****       case 'z' :
 675:Core/Src/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 676:Core/Src/printf.c ****         format++;
 677:Core/Src/printf.c ****         break;
 678:Core/Src/printf.c ****       default :
 679:Core/Src/printf.c ****         break;
 680:Core/Src/printf.c ****     }
 681:Core/Src/printf.c **** 
 682:Core/Src/printf.c ****     // evaluate specifier
 683:Core/Src/printf.c ****     switch (*format) {
 684:Core/Src/printf.c ****       case 'd' :
 685:Core/Src/printf.c ****       case 'i' :
 686:Core/Src/printf.c ****       case 'u' :
 687:Core/Src/printf.c ****       case 'x' :
 688:Core/Src/printf.c ****       case 'X' :
 689:Core/Src/printf.c ****       case 'o' :
 690:Core/Src/printf.c ****       case 'b' : {
 691:Core/Src/printf.c ****         // set the base
 692:Core/Src/printf.c ****         unsigned int base;
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 694:Core/Src/printf.c ****           base = 16U;
 695:Core/Src/printf.c ****         }
 696:Core/Src/printf.c ****         else if (*format == 'o') {
 697:Core/Src/printf.c ****           base =  8U;
 698:Core/Src/printf.c ****         }
 699:Core/Src/printf.c ****         else if (*format == 'b') {
 700:Core/Src/printf.c ****           base =  2U;
 701:Core/Src/printf.c ****         }
 702:Core/Src/printf.c ****         else {
 703:Core/Src/printf.c ****           base = 10U;
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 705:Core/Src/printf.c ****         }
 706:Core/Src/printf.c ****         // uppercase
 707:Core/Src/printf.c ****         if (*format == 'X') {
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 709:Core/Src/printf.c ****         }
 710:Core/Src/printf.c **** 
 711:Core/Src/printf.c ****         // no plus or space flag for u, x, X, o, b
 712:Core/Src/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 714:Core/Src/printf.c ****         }
 715:Core/Src/printf.c **** 
 716:Core/Src/printf.c ****         // ignore '0' flag when precision is given
 717:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 719:Core/Src/printf.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 60


 720:Core/Src/printf.c **** 
 721:Core/Src/printf.c ****         // convert the integer
 722:Core/Src/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 723:Core/Src/printf.c ****           // signed
 724:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 726:Core/Src/printf.c ****             const long long value = va_arg(va, long long);
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 728:Core/Src/printf.c **** #endif
 729:Core/Src/printf.c ****           }
 730:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 733:Core/Src/printf.c ****           }
 734:Core/Src/printf.c ****           else {
 735:Core/Src/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 737:Core/Src/printf.c ****           }
 738:Core/Src/printf.c ****         }
 739:Core/Src/printf.c ****         else {
 740:Core/Src/printf.c ****           // unsigned
 741:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 743:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 744:Core/Src/printf.c **** #endif
 745:Core/Src/printf.c ****           }
 746:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 748:Core/Src/printf.c ****           }
 749:Core/Src/printf.c ****           else {
 750:Core/Src/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 752:Core/Src/printf.c ****           }
 753:Core/Src/printf.c ****         }
 754:Core/Src/printf.c ****         format++;
 755:Core/Src/printf.c ****         break;
 756:Core/Src/printf.c ****       }
 757:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 758:Core/Src/printf.c ****       case 'f' :
 759:Core/Src/printf.c ****       case 'F' :
 760:Core/Src/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 762:Core/Src/printf.c ****         format++;
 763:Core/Src/printf.c ****         break;
 764:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 765:Core/Src/printf.c ****       case 'e':
 766:Core/Src/printf.c ****       case 'E':
 767:Core/Src/printf.c ****       case 'g':
 768:Core/Src/printf.c ****       case 'G':
 769:Core/Src/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 772:Core/Src/printf.c ****         format++;
 773:Core/Src/printf.c ****         break;
 774:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 775:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 776:Core/Src/printf.c ****       case 'c' : {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 61


 777:Core/Src/printf.c ****         unsigned int l = 1U;
 778:Core/Src/printf.c ****         // pre padding
 779:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 780:Core/Src/printf.c ****           while (l++ < width) {
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 782:Core/Src/printf.c ****           }
 783:Core/Src/printf.c ****         }
 784:Core/Src/printf.c ****         // char output
 785:Core/Src/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 786:Core/Src/printf.c ****         // post padding
 787:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 788:Core/Src/printf.c ****           while (l++ < width) {
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 790:Core/Src/printf.c ****           }
 791:Core/Src/printf.c ****         }
 792:Core/Src/printf.c ****         format++;
 793:Core/Src/printf.c ****         break;
 2336              		.loc 1 793 9 view .LVU568
 2337 0014 0026     		movs	r6, #0
 2338              	.LVL271:
 2339              	.L282:
 2340              		.loc 1 793 9 view .LVU569
 2341              	.LBE31:
 587:Core/Src/printf.c ****   {
 2342              		.loc 1 587 10 is_stmt 1 view .LVU570
 2343 0016 0F9B     		ldr	r3, [sp, #60]
 2344 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2345 001a 0028     		cmp	r0, #0
 2346 001c 00F04783 		beq	.L303
 590:Core/Src/printf.c ****       // no
 2347              		.loc 1 590 5 view .LVU571
 590:Core/Src/printf.c ****       // no
 2348              		.loc 1 590 8 is_stmt 0 view .LVU572
 2349 0020 2528     		cmp	r0, #37
 2350 0022 09D0     		beq	.L201
 592:Core/Src/printf.c ****       format++;
 2351              		.loc 1 592 7 is_stmt 1 view .LVU573
 2352 0024 741C     		adds	r4, r6, #1
 2353              	.LVL272:
 592:Core/Src/printf.c ****       format++;
 2354              		.loc 1 592 7 is_stmt 0 view .LVU574
 2355 0026 3B46     		mov	r3, r7
 2356 0028 3246     		mov	r2, r6
 2357 002a 4946     		mov	r1, r9
 2358 002c C047     		blx	r8
 2359              	.LVL273:
 593:Core/Src/printf.c ****       continue;
 2360              		.loc 1 593 7 is_stmt 1 view .LVU575
 593:Core/Src/printf.c ****       continue;
 2361              		.loc 1 593 13 is_stmt 0 view .LVU576
 2362 002e 0F9B     		ldr	r3, [sp, #60]
 2363 0030 0133     		adds	r3, r3, #1
 2364 0032 0F93     		str	r3, [sp, #60]
 594:Core/Src/printf.c ****     }
 2365              		.loc 1 594 7 is_stmt 1 view .LVU577
 592:Core/Src/printf.c ****       format++;
 2366              		.loc 1 592 7 is_stmt 0 view .LVU578
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 62


 2367 0034 2646     		mov	r6, r4
 594:Core/Src/printf.c ****     }
 2368              		.loc 1 594 7 view .LVU579
 2369 0036 EEE7     		b	.L282
 2370              	.LVL274:
 2371              	.L201:
 598:Core/Src/printf.c ****     }
 2372              		.loc 1 598 7 is_stmt 1 view .LVU580
 598:Core/Src/printf.c ****     }
 2373              		.loc 1 598 13 is_stmt 0 view .LVU581
 2374 0038 0133     		adds	r3, r3, #1
 2375 003a 0F93     		str	r3, [sp, #60]
 602:Core/Src/printf.c ****     do {
 2376              		.loc 1 602 5 is_stmt 1 view .LVU582
 2377              	.LVL275:
 602:Core/Src/printf.c ****     do {
 2378              		.loc 1 602 11 is_stmt 0 view .LVU583
 2379 003c 0025     		movs	r5, #0
 2380 003e 1FE0     		b	.L210
 2381              	.LVL276:
 2382              	.L204:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2383              		.loc 1 605 19 is_stmt 1 view .LVU584
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2384              		.loc 1 605 25 is_stmt 0 view .LVU585
 2385 0040 45F00105 		orr	r5, r5, #1
 2386              	.LVL277:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2387              		.loc 1 605 43 is_stmt 1 view .LVU586
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2388              		.loc 1 605 49 is_stmt 0 view .LVU587
 2389 0044 0132     		adds	r2, r2, #1
 2390 0046 0F92     		str	r2, [sp, #60]
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2391              		.loc 1 605 53 is_stmt 1 view .LVU588
 2392              	.LVL278:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2393              		.loc 1 605 61 view .LVU589
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2394              		.loc 1 605 55 is_stmt 0 view .LVU590
 2395 0048 0123     		movs	r3, #1
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2396              		.loc 1 605 61 view .LVU591
 2397 004a 18E0     		b	.L203
 2398              	.LVL279:
 2399              	.L206:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2400              		.loc 1 606 19 is_stmt 1 view .LVU592
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2401              		.loc 1 606 25 is_stmt 0 view .LVU593
 2402 004c 45F00205 		orr	r5, r5, #2
 2403              	.LVL280:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2404              		.loc 1 606 43 is_stmt 1 view .LVU594
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2405              		.loc 1 606 49 is_stmt 0 view .LVU595
 2406 0050 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 63


 2407 0052 0F92     		str	r2, [sp, #60]
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2408              		.loc 1 606 53 is_stmt 1 view .LVU596
 2409              	.LVL281:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2410              		.loc 1 606 61 view .LVU597
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2411              		.loc 1 606 55 is_stmt 0 view .LVU598
 2412 0054 0123     		movs	r3, #1
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2413              		.loc 1 606 61 view .LVU599
 2414 0056 12E0     		b	.L203
 2415              	.LVL282:
 2416              	.L207:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2417              		.loc 1 607 19 is_stmt 1 view .LVU600
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2418              		.loc 1 607 25 is_stmt 0 view .LVU601
 2419 0058 45F00405 		orr	r5, r5, #4
 2420              	.LVL283:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2421              		.loc 1 607 43 is_stmt 1 view .LVU602
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2422              		.loc 1 607 49 is_stmt 0 view .LVU603
 2423 005c 0132     		adds	r2, r2, #1
 2424 005e 0F92     		str	r2, [sp, #60]
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2425              		.loc 1 607 53 is_stmt 1 view .LVU604
 2426              	.LVL284:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2427              		.loc 1 607 61 view .LVU605
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2428              		.loc 1 607 55 is_stmt 0 view .LVU606
 2429 0060 0123     		movs	r3, #1
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2430              		.loc 1 607 61 view .LVU607
 2431 0062 0CE0     		b	.L203
 2432              	.LVL285:
 2433              	.L209:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2434              		.loc 1 608 19 is_stmt 1 view .LVU608
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2435              		.loc 1 608 25 is_stmt 0 view .LVU609
 2436 0064 45F00805 		orr	r5, r5, #8
 2437              	.LVL286:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2438              		.loc 1 608 43 is_stmt 1 view .LVU610
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2439              		.loc 1 608 49 is_stmt 0 view .LVU611
 2440 0068 0132     		adds	r2, r2, #1
 2441 006a 0F92     		str	r2, [sp, #60]
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2442              		.loc 1 608 53 is_stmt 1 view .LVU612
 2443              	.LVL287:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2444              		.loc 1 608 61 view .LVU613
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 64


 2445              		.loc 1 608 55 is_stmt 0 view .LVU614
 2446 006c 0123     		movs	r3, #1
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2447              		.loc 1 608 61 view .LVU615
 2448 006e 06E0     		b	.L203
 2449              	.LVL288:
 2450              	.L208:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2451              		.loc 1 609 19 is_stmt 1 view .LVU616
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2452              		.loc 1 609 25 is_stmt 0 view .LVU617
 2453 0070 45F01005 		orr	r5, r5, #16
 2454              	.LVL289:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2455              		.loc 1 609 43 is_stmt 1 view .LVU618
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2456              		.loc 1 609 49 is_stmt 0 view .LVU619
 2457 0074 0132     		adds	r2, r2, #1
 2458 0076 0F92     		str	r2, [sp, #60]
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2459              		.loc 1 609 53 is_stmt 1 view .LVU620
 2460              	.LVL290:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2461              		.loc 1 609 61 view .LVU621
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2462              		.loc 1 609 55 is_stmt 0 view .LVU622
 2463 0078 0123     		movs	r3, #1
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2464              		.loc 1 609 61 view .LVU623
 2465 007a 00E0     		b	.L203
 2466              	.LVL291:
 2467              	.L286:
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2468              		.loc 1 604 7 view .LVU624
 2469 007c 0023     		movs	r3, #0
 2470              	.L203:
 2471              	.LVL292:
 612:Core/Src/printf.c **** 
 2472              		.loc 1 612 14 is_stmt 1 view .LVU625
 2473 007e 4BB3     		cbz	r3, .L304
 2474              	.LVL293:
 2475              	.L210:
 603:Core/Src/printf.c ****       switch (*format) {
 2476              		.loc 1 603 5 view .LVU626
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2477              		.loc 1 604 7 view .LVU627
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2478              		.loc 1 604 15 is_stmt 0 view .LVU628
 2479 0080 0F9A     		ldr	r2, [sp, #60]
 2480 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2481              		.loc 1 604 7 view .LVU629
 2482 0084 203B     		subs	r3, r3, #32
 2483 0086 102B     		cmp	r3, #16
 2484 0088 F8D8     		bhi	.L286
 2485 008a 01A1     		adr	r1, .L205
 2486 008c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 65


 2487              		.p2align 2
 2488              	.L205:
 2489 0090 65000000 		.word	.L209+1
 2490 0094 7D000000 		.word	.L286+1
 2491 0098 7D000000 		.word	.L286+1
 2492 009c 71000000 		.word	.L208+1
 2493 00a0 7D000000 		.word	.L286+1
 2494 00a4 7D000000 		.word	.L286+1
 2495 00a8 7D000000 		.word	.L286+1
 2496 00ac 7D000000 		.word	.L286+1
 2497 00b0 7D000000 		.word	.L286+1
 2498 00b4 7D000000 		.word	.L286+1
 2499 00b8 7D000000 		.word	.L286+1
 2500 00bc 59000000 		.word	.L207+1
 2501 00c0 7D000000 		.word	.L286+1
 2502 00c4 4D000000 		.word	.L206+1
 2503 00c8 7D000000 		.word	.L286+1
 2504 00cc 7D000000 		.word	.L286+1
 2505 00d0 41000000 		.word	.L204+1
 2506              	.LVL294:
 2507              		.p2align 1
 2508              	.L304:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2509              		.loc 1 616 9 view .LVU630
 2510 00d4 0B93     		str	r3, [sp, #44]
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2511              		.loc 1 615 5 is_stmt 1 view .LVU631
 2512              	.LVL295:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2513              		.loc 1 616 5 view .LVU632
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2514              		.loc 1 616 9 is_stmt 0 view .LVU633
 2515 00d6 0F9B     		ldr	r3, [sp, #60]
 2516              	.LVL296:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2517              		.loc 1 616 9 view .LVU634
 2518 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2519              	.LVL297:
 2520              	.LBB32:
 2521              	.LBI32:
 181:Core/Src/printf.c **** {
 2522              		.loc 1 181 20 is_stmt 1 view .LVU635
 2523              	.LBB33:
 183:Core/Src/printf.c **** }
 2524              		.loc 1 183 3 view .LVU636
 183:Core/Src/printf.c **** }
 2525              		.loc 1 183 22 is_stmt 0 view .LVU637
 2526 00da A2F13003 		sub	r3, r2, #48
 2527 00de DBB2     		uxtb	r3, r3
 2528              	.LVL298:
 183:Core/Src/printf.c **** }
 2529              		.loc 1 183 22 view .LVU638
 2530              	.LBE33:
 2531              	.LBE32:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2532              		.loc 1 616 8 discriminator 1 view .LVU639
 2533 00e0 092B     		cmp	r3, #9
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 66


 2534 00e2 18D9     		bls	.L305
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2535              		.loc 1 619 10 is_stmt 1 view .LVU640
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2536              		.loc 1 619 13 is_stmt 0 view .LVU641
 2537 00e4 2A2A     		cmp	r2, #42
 2538 00e6 1BD0     		beq	.L306
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2539              		.loc 1 615 11 view .LVU642
 2540 00e8 DDF82CB0 		ldr	fp, [sp, #44]
 2541              	.LVL299:
 2542              	.L212:
 632:Core/Src/printf.c ****     if (*format == '.') {
 2543              		.loc 1 632 5 is_stmt 1 view .LVU643
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2544              		.loc 1 633 5 view .LVU644
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2545              		.loc 1 633 9 is_stmt 0 view .LVU645
 2546 00ec 0F9B     		ldr	r3, [sp, #60]
 2547 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2548              		.loc 1 633 8 view .LVU646
 2549 00f0 2E2A     		cmp	r2, #46
 2550 00f2 25D0     		beq	.L307
 2551              	.LVL300:
 2552              	.L215:
 647:Core/Src/printf.c ****       case 'l' :
 2553              		.loc 1 647 5 is_stmt 1 view .LVU647
 647:Core/Src/printf.c ****       case 'l' :
 2554              		.loc 1 647 13 is_stmt 0 view .LVU648
 2555 00f4 0F9A     		ldr	r2, [sp, #60]
 2556 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 647:Core/Src/printf.c ****       case 'l' :
 2557              		.loc 1 647 5 view .LVU649
 2558 00f8 683B     		subs	r3, r3, #104
 2559 00fa 122B     		cmp	r3, #18
 2560 00fc 5CD8     		bhi	.L217
 2561 00fe DFE803F0 		tbb	[pc, r3]
 2562              	.L219:
 2563 0102 49       		.byte	(.L223-.L219)/2
 2564 0103 5B       		.byte	(.L217-.L219)/2
 2565 0104 AC       		.byte	(.L222-.L219)/2
 2566 0105 5B       		.byte	(.L217-.L219)/2
 2567 0106 3B       		.byte	(.L221-.L219)/2
 2568 0107 5B       		.byte	(.L217-.L219)/2
 2569 0108 5B       		.byte	(.L217-.L219)/2
 2570 0109 5B       		.byte	(.L217-.L219)/2
 2571 010a 5B       		.byte	(.L217-.L219)/2
 2572 010b 5B       		.byte	(.L217-.L219)/2
 2573 010c 5B       		.byte	(.L217-.L219)/2
 2574 010d 5B       		.byte	(.L217-.L219)/2
 2575 010e 57       		.byte	(.L220-.L219)/2
 2576 010f 5B       		.byte	(.L217-.L219)/2
 2577 0110 5B       		.byte	(.L217-.L219)/2
 2578 0111 5B       		.byte	(.L217-.L219)/2
 2579 0112 5B       		.byte	(.L217-.L219)/2
 2580 0113 5B       		.byte	(.L217-.L219)/2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 67


 2581 0114 B1       		.byte	(.L218-.L219)/2
 2582              	.LVL301:
 2583 0115 00       		.p2align 1
 2584              	.L305:
 617:Core/Src/printf.c ****     }
 2585              		.loc 1 617 7 is_stmt 1 view .LVU650
 617:Core/Src/printf.c ****     }
 2586              		.loc 1 617 15 is_stmt 0 view .LVU651
 2587 0116 0FA8     		add	r0, sp, #60
 2588 0118 FFF7FEFF 		bl	_atoi
 2589              	.LVL302:
 2590 011c 8346     		mov	fp, r0
 2591              	.LVL303:
 617:Core/Src/printf.c ****     }
 2592              		.loc 1 617 15 view .LVU652
 2593 011e E5E7     		b	.L212
 2594              	.LVL304:
 2595              	.L306:
 2596              	.LBB34:
 620:Core/Src/printf.c ****       if (w < 0) {
 2597              		.loc 1 620 7 is_stmt 1 view .LVU653
 620:Core/Src/printf.c ****       if (w < 0) {
 2598              		.loc 1 620 17 is_stmt 0 view .LVU654
 2599 0120 1A9B     		ldr	r3, [sp, #104]
 2600 0122 1A1D     		adds	r2, r3, #4
 2601 0124 1A92     		str	r2, [sp, #104]
 2602 0126 1B68     		ldr	r3, [r3]
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2603              		.loc 1 621 7 is_stmt 1 view .LVU655
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2604              		.loc 1 621 10 is_stmt 0 view .LVU656
 2605 0128 002B     		cmp	r3, #0
 2606 012a 04DB     		blt	.L308
 626:Core/Src/printf.c ****       }
 2607              		.loc 1 626 9 is_stmt 1 view .LVU657
 626:Core/Src/printf.c ****       }
 2608              		.loc 1 626 15 is_stmt 0 view .LVU658
 2609 012c 9B46     		mov	fp, r3
 2610              	.LVL305:
 2611              	.L214:
 628:Core/Src/printf.c ****     }
 2612              		.loc 1 628 7 is_stmt 1 view .LVU659
 628:Core/Src/printf.c ****     }
 2613              		.loc 1 628 13 is_stmt 0 view .LVU660
 2614 012e 0F9B     		ldr	r3, [sp, #60]
 2615 0130 0133     		adds	r3, r3, #1
 2616 0132 0F93     		str	r3, [sp, #60]
 2617 0134 DAE7     		b	.L212
 2618              	.LVL306:
 2619              	.L308:
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2620              		.loc 1 622 9 is_stmt 1 view .LVU661
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2621              		.loc 1 622 15 is_stmt 0 view .LVU662
 2622 0136 45F00205 		orr	r5, r5, #2
 2623              	.LVL307:
 623:Core/Src/printf.c ****       }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 68


 2624              		.loc 1 623 9 is_stmt 1 view .LVU663
 623:Core/Src/printf.c ****       }
 2625              		.loc 1 623 31 is_stmt 0 view .LVU664
 2626 013a C3F1000B 		rsb	fp, r3, #0
 2627              	.LVL308:
 623:Core/Src/printf.c ****       }
 2628              		.loc 1 623 31 view .LVU665
 2629 013e F6E7     		b	.L214
 2630              	.LVL309:
 2631              	.L307:
 623:Core/Src/printf.c ****       }
 2632              		.loc 1 623 31 view .LVU666
 2633              	.LBE34:
 634:Core/Src/printf.c ****       format++;
 2634              		.loc 1 634 7 is_stmt 1 view .LVU667
 634:Core/Src/printf.c ****       format++;
 2635              		.loc 1 634 13 is_stmt 0 view .LVU668
 2636 0140 45F48065 		orr	r5, r5, #1024
 2637              	.LVL310:
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2638              		.loc 1 635 7 is_stmt 1 view .LVU669
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2639              		.loc 1 635 13 is_stmt 0 view .LVU670
 2640 0144 5A1C     		adds	r2, r3, #1
 2641 0146 0F92     		str	r2, [sp, #60]
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2642              		.loc 1 636 7 is_stmt 1 view .LVU671
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2643              		.loc 1 636 11 is_stmt 0 view .LVU672
 2644 0148 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2645              	.LVL311:
 2646              	.LBB35:
 2647              	.LBI35:
 181:Core/Src/printf.c **** {
 2648              		.loc 1 181 20 is_stmt 1 view .LVU673
 2649              	.LBB36:
 183:Core/Src/printf.c **** }
 2650              		.loc 1 183 3 view .LVU674
 183:Core/Src/printf.c **** }
 2651              		.loc 1 183 22 is_stmt 0 view .LVU675
 2652 014a A2F13003 		sub	r3, r2, #48
 2653 014e DBB2     		uxtb	r3, r3
 2654              	.LVL312:
 183:Core/Src/printf.c **** }
 2655              		.loc 1 183 22 view .LVU676
 2656              	.LBE36:
 2657              	.LBE35:
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2658              		.loc 1 636 10 discriminator 1 view .LVU677
 2659 0150 092B     		cmp	r3, #9
 2660 0152 0CD9     		bls	.L309
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2661              		.loc 1 639 12 is_stmt 1 view .LVU678
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2662              		.loc 1 639 15 is_stmt 0 view .LVU679
 2663 0154 2A2A     		cmp	r2, #42
 2664 0156 CDD1     		bne	.L215
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 69


 2665              	.LBB37:
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2666              		.loc 1 640 9 is_stmt 1 view .LVU680
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2667              		.loc 1 640 19 is_stmt 0 view .LVU681
 2668 0158 1A9B     		ldr	r3, [sp, #104]
 2669 015a 1A1D     		adds	r2, r3, #4
 2670 015c 1A92     		str	r2, [sp, #104]
 2671 015e 1C68     		ldr	r4, [r3]
 641:Core/Src/printf.c ****         format++;
 2672              		.loc 1 641 9 is_stmt 1 view .LVU682
 641:Core/Src/printf.c ****         format++;
 2673              		.loc 1 641 51 is_stmt 0 view .LVU683
 2674 0160 24EAE473 		bic	r3, r4, r4, asr #31
 2675 0164 0B93     		str	r3, [sp, #44]
 2676              	.LVL313:
 642:Core/Src/printf.c ****       }
 2677              		.loc 1 642 9 is_stmt 1 view .LVU684
 642:Core/Src/printf.c ****       }
 2678              		.loc 1 642 15 is_stmt 0 view .LVU685
 2679 0166 0F9B     		ldr	r3, [sp, #60]
 2680              	.LVL314:
 642:Core/Src/printf.c ****       }
 2681              		.loc 1 642 15 view .LVU686
 2682 0168 0133     		adds	r3, r3, #1
 2683 016a 0F93     		str	r3, [sp, #60]
 2684 016c C2E7     		b	.L215
 2685              	.LVL315:
 2686              	.L309:
 642:Core/Src/printf.c ****       }
 2687              		.loc 1 642 15 view .LVU687
 2688              	.LBE37:
 637:Core/Src/printf.c ****       }
 2689              		.loc 1 637 9 is_stmt 1 view .LVU688
 637:Core/Src/printf.c ****       }
 2690              		.loc 1 637 21 is_stmt 0 view .LVU689
 2691 016e 0FA8     		add	r0, sp, #60
 2692 0170 FFF7FEFF 		bl	_atoi
 2693              	.LVL316:
 2694 0174 0B90     		str	r0, [sp, #44]
 2695              	.LVL317:
 637:Core/Src/printf.c ****       }
 2696              		.loc 1 637 21 view .LVU690
 2697 0176 BDE7     		b	.L215
 2698              	.LVL318:
 2699              	.L221:
 649:Core/Src/printf.c ****         format++;
 2700              		.loc 1 649 9 is_stmt 1 view .LVU691
 649:Core/Src/printf.c ****         format++;
 2701              		.loc 1 649 15 is_stmt 0 view .LVU692
 2702 0178 45F48071 		orr	r1, r5, #256
 2703              	.LVL319:
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2704              		.loc 1 650 9 is_stmt 1 view .LVU693
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2705              		.loc 1 650 15 is_stmt 0 view .LVU694
 2706 017c 531C     		adds	r3, r2, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 70


 2707 017e 0F93     		str	r3, [sp, #60]
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2708              		.loc 1 651 9 is_stmt 1 view .LVU695
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2709              		.loc 1 651 13 is_stmt 0 view .LVU696
 2710 0180 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2711              		.loc 1 651 12 view .LVU697
 2712 0182 6C2B     		cmp	r3, #108
 2713 0184 01D0     		beq	.L310
 649:Core/Src/printf.c ****         format++;
 2714              		.loc 1 649 15 view .LVU698
 2715 0186 0D46     		mov	r5, r1
 2716 0188 16E0     		b	.L217
 2717              	.L310:
 652:Core/Src/printf.c ****           format++;
 2718              		.loc 1 652 11 is_stmt 1 view .LVU699
 652:Core/Src/printf.c ****           format++;
 2719              		.loc 1 652 17 is_stmt 0 view .LVU700
 2720 018a 45F44075 		orr	r5, r5, #768
 2721              	.LVL320:
 653:Core/Src/printf.c ****         }
 2722              		.loc 1 653 11 is_stmt 1 view .LVU701
 653:Core/Src/printf.c ****         }
 2723              		.loc 1 653 17 is_stmt 0 view .LVU702
 2724 018e 0232     		adds	r2, r2, #2
 2725 0190 0F92     		str	r2, [sp, #60]
 2726 0192 11E0     		b	.L217
 2727              	.L223:
 657:Core/Src/printf.c ****         format++;
 2728              		.loc 1 657 9 is_stmt 1 view .LVU703
 657:Core/Src/printf.c ****         format++;
 2729              		.loc 1 657 15 is_stmt 0 view .LVU704
 2730 0194 45F08001 		orr	r1, r5, #128
 2731              	.LVL321:
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2732              		.loc 1 658 9 is_stmt 1 view .LVU705
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2733              		.loc 1 658 15 is_stmt 0 view .LVU706
 2734 0198 531C     		adds	r3, r2, #1
 2735 019a 0F93     		str	r3, [sp, #60]
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2736              		.loc 1 659 9 is_stmt 1 view .LVU707
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2737              		.loc 1 659 13 is_stmt 0 view .LVU708
 2738 019c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2739              		.loc 1 659 12 view .LVU709
 2740 019e 682B     		cmp	r3, #104
 2741 01a0 01D0     		beq	.L311
 657:Core/Src/printf.c ****         format++;
 2742              		.loc 1 657 15 view .LVU710
 2743 01a2 0D46     		mov	r5, r1
 2744 01a4 08E0     		b	.L217
 2745              	.L311:
 660:Core/Src/printf.c ****           format++;
 2746              		.loc 1 660 11 is_stmt 1 view .LVU711
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 71


 660:Core/Src/printf.c ****           format++;
 2747              		.loc 1 660 17 is_stmt 0 view .LVU712
 2748 01a6 45F0C005 		orr	r5, r5, #192
 2749              	.LVL322:
 661:Core/Src/printf.c ****         }
 2750              		.loc 1 661 11 is_stmt 1 view .LVU713
 661:Core/Src/printf.c ****         }
 2751              		.loc 1 661 17 is_stmt 0 view .LVU714
 2752 01aa 0232     		adds	r2, r2, #2
 2753 01ac 0F92     		str	r2, [sp, #60]
 2754 01ae 03E0     		b	.L217
 2755              	.L220:
 666:Core/Src/printf.c ****         format++;
 2756              		.loc 1 666 9 is_stmt 1 view .LVU715
 666:Core/Src/printf.c ****         format++;
 2757              		.loc 1 666 15 is_stmt 0 view .LVU716
 2758 01b0 45F48075 		orr	r5, r5, #256
 2759              	.LVL323:
 667:Core/Src/printf.c ****         break;
 2760              		.loc 1 667 9 is_stmt 1 view .LVU717
 667:Core/Src/printf.c ****         break;
 2761              		.loc 1 667 15 is_stmt 0 view .LVU718
 2762 01b4 0132     		adds	r2, r2, #1
 2763 01b6 0F92     		str	r2, [sp, #60]
 668:Core/Src/printf.c **** #endif
 2764              		.loc 1 668 9 is_stmt 1 view .LVU719
 2765              	.L217:
 683:Core/Src/printf.c ****       case 'd' :
 2766              		.loc 1 683 5 view .LVU720
 683:Core/Src/printf.c ****       case 'd' :
 2767              		.loc 1 683 13 is_stmt 0 view .LVU721
 2768 01b8 0F9B     		ldr	r3, [sp, #60]
 2769 01ba 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 683:Core/Src/printf.c ****       case 'd' :
 2770              		.loc 1 683 5 view .LVU722
 2771 01bc 6728     		cmp	r0, #103
 2772 01be 56D8     		bhi	.L224
 683:Core/Src/printf.c ****       case 'd' :
 2773              		.loc 1 683 5 view .LVU723
 2774 01c0 2528     		cmp	r0, #37
 2775 01c2 C0F06782 		bcc	.L226
 2776 01c6 A0F12503 		sub	r3, r0, #37
 2777 01ca 422B     		cmp	r3, #66
 2778 01cc 00F26282 		bhi	.L226
 2779 01d0 DFE813F0 		tbh	[pc, r3, lsl #1]
 2780              	.L231:
 2781 01d4 5502     		.2byte	(.L234-.L231)/2
 2782 01d6 6002     		.2byte	(.L226-.L231)/2
 2783 01d8 6002     		.2byte	(.L226-.L231)/2
 2784 01da 6002     		.2byte	(.L226-.L231)/2
 2785 01dc 6002     		.2byte	(.L226-.L231)/2
 2786 01de 6002     		.2byte	(.L226-.L231)/2
 2787 01e0 6002     		.2byte	(.L226-.L231)/2
 2788 01e2 6002     		.2byte	(.L226-.L231)/2
 2789 01e4 6002     		.2byte	(.L226-.L231)/2
 2790 01e6 6002     		.2byte	(.L226-.L231)/2
 2791 01e8 6002     		.2byte	(.L226-.L231)/2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 72


 2792 01ea 6002     		.2byte	(.L226-.L231)/2
 2793 01ec 6002     		.2byte	(.L226-.L231)/2
 2794 01ee 6002     		.2byte	(.L226-.L231)/2
 2795 01f0 6002     		.2byte	(.L226-.L231)/2
 2796 01f2 6002     		.2byte	(.L226-.L231)/2
 2797 01f4 6002     		.2byte	(.L226-.L231)/2
 2798 01f6 6002     		.2byte	(.L226-.L231)/2
 2799 01f8 6002     		.2byte	(.L226-.L231)/2
 2800 01fa 6002     		.2byte	(.L226-.L231)/2
 2801 01fc 6002     		.2byte	(.L226-.L231)/2
 2802 01fe 6002     		.2byte	(.L226-.L231)/2
 2803 0200 6002     		.2byte	(.L226-.L231)/2
 2804 0202 6002     		.2byte	(.L226-.L231)/2
 2805 0204 6002     		.2byte	(.L226-.L231)/2
 2806 0206 6002     		.2byte	(.L226-.L231)/2
 2807 0208 6002     		.2byte	(.L226-.L231)/2
 2808 020a 6002     		.2byte	(.L226-.L231)/2
 2809 020c 6002     		.2byte	(.L226-.L231)/2
 2810 020e 6002     		.2byte	(.L226-.L231)/2
 2811 0210 6002     		.2byte	(.L226-.L231)/2
 2812 0212 6002     		.2byte	(.L226-.L231)/2
 2813 0214 8701     		.2byte	(.L230-.L231)/2
 2814 0216 6701     		.2byte	(.L232-.L231)/2
 2815 0218 8701     		.2byte	(.L230-.L231)/2
 2816 021a 6002     		.2byte	(.L226-.L231)/2
 2817 021c 6002     		.2byte	(.L226-.L231)/2
 2818 021e 6002     		.2byte	(.L226-.L231)/2
 2819 0220 6002     		.2byte	(.L226-.L231)/2
 2820 0222 6002     		.2byte	(.L226-.L231)/2
 2821 0224 6002     		.2byte	(.L226-.L231)/2
 2822 0226 6002     		.2byte	(.L226-.L231)/2
 2823 0228 6002     		.2byte	(.L226-.L231)/2
 2824 022a 6002     		.2byte	(.L226-.L231)/2
 2825 022c 6002     		.2byte	(.L226-.L231)/2
 2826 022e 6002     		.2byte	(.L226-.L231)/2
 2827 0230 6002     		.2byte	(.L226-.L231)/2
 2828 0232 6002     		.2byte	(.L226-.L231)/2
 2829 0234 6002     		.2byte	(.L226-.L231)/2
 2830 0236 6002     		.2byte	(.L226-.L231)/2
 2831 0238 6002     		.2byte	(.L226-.L231)/2
 2832 023a 7100     		.2byte	(.L227-.L231)/2
 2833 023c 6002     		.2byte	(.L226-.L231)/2
 2834 023e 6002     		.2byte	(.L226-.L231)/2
 2835 0240 6002     		.2byte	(.L226-.L231)/2
 2836 0242 6002     		.2byte	(.L226-.L231)/2
 2837 0244 6002     		.2byte	(.L226-.L231)/2
 2838 0246 6002     		.2byte	(.L226-.L231)/2
 2839 0248 6002     		.2byte	(.L226-.L231)/2
 2840 024a 6002     		.2byte	(.L226-.L231)/2
 2841 024c 6002     		.2byte	(.L226-.L231)/2
 2842 024e 7100     		.2byte	(.L227-.L231)/2
 2843 0250 AE01     		.2byte	(.L233-.L231)/2
 2844 0252 7100     		.2byte	(.L227-.L231)/2
 2845 0254 8701     		.2byte	(.L230-.L231)/2
 2846 0256 6701     		.2byte	(.L232-.L231)/2
 2847 0258 8701     		.2byte	(.L230-.L231)/2
 2848              		.p2align 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 73


 2849              	.L222:
 671:Core/Src/printf.c ****         format++;
 2850              		.loc 1 671 9 is_stmt 1 view .LVU724
 671:Core/Src/printf.c ****         format++;
 2851              		.loc 1 671 15 is_stmt 0 view .LVU725
 2852 025a 45F40075 		orr	r5, r5, #512
 2853              	.LVL324:
 672:Core/Src/printf.c ****         break;
 2854              		.loc 1 672 9 is_stmt 1 view .LVU726
 672:Core/Src/printf.c ****         break;
 2855              		.loc 1 672 15 is_stmt 0 view .LVU727
 2856 025e 0132     		adds	r2, r2, #1
 2857 0260 0F92     		str	r2, [sp, #60]
 673:Core/Src/printf.c ****       case 'z' :
 2858              		.loc 1 673 9 is_stmt 1 view .LVU728
 2859 0262 A9E7     		b	.L217
 2860              	.L218:
 675:Core/Src/printf.c ****         format++;
 2861              		.loc 1 675 9 view .LVU729
 675:Core/Src/printf.c ****         format++;
 2862              		.loc 1 675 15 is_stmt 0 view .LVU730
 2863 0264 45F48075 		orr	r5, r5, #256
 2864              	.LVL325:
 676:Core/Src/printf.c ****         break;
 2865              		.loc 1 676 9 is_stmt 1 view .LVU731
 676:Core/Src/printf.c ****         break;
 2866              		.loc 1 676 15 is_stmt 0 view .LVU732
 2867 0268 0132     		adds	r2, r2, #1
 2868 026a 0F92     		str	r2, [sp, #60]
 677:Core/Src/printf.c ****       default :
 2869              		.loc 1 677 9 is_stmt 1 view .LVU733
 2870 026c A4E7     		b	.L217
 2871              	.L224:
 683:Core/Src/printf.c ****       case 'd' :
 2872              		.loc 1 683 5 is_stmt 0 view .LVU734
 2873 026e 7828     		cmp	r0, #120
 2874 0270 00F21082 		bhi	.L226
 2875 0274 6928     		cmp	r0, #105
 2876 0276 C0F00D82 		bcc	.L226
 2877 027a A0F16902 		sub	r2, r0, #105
 2878 027e D2B2     		uxtb	r2, r2
 2879 0280 0123     		movs	r3, #1
 2880 0282 9340     		lsls	r3, r3, r2
 2881 0284 49F24102 		movw	r2, #36929
 2882 0288 1342     		tst	r3, r2
 2883 028a 14D1     		bne	.L227
 2884 028c 13F0800F 		tst	r3, #128
 2885 0290 40F0DA81 		bne	.L228
 2886 0294 13F4806F 		tst	r3, #1024
 2887 0298 00F0FC81 		beq	.L226
 2888              	.LBB38:
 794:Core/Src/printf.c ****       }
 795:Core/Src/printf.c **** 
 796:Core/Src/printf.c ****       case 's' : {
 797:Core/Src/printf.c ****         const char* p = va_arg(va, char*);
 2889              		.loc 1 797 9 is_stmt 1 view .LVU735
 2890              		.loc 1 797 21 is_stmt 0 view .LVU736
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 74


 2891 029c 1A9B     		ldr	r3, [sp, #104]
 2892 029e 1A1D     		adds	r2, r3, #4
 2893 02a0 1A92     		str	r2, [sp, #104]
 2894 02a2 D3F800A0 		ldr	r10, [r3]
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 2895              		.loc 1 798 9 is_stmt 1 view .LVU737
 2896              		.loc 1 798 26 is_stmt 0 view .LVU738
 2897 02a6 0B9B     		ldr	r3, [sp, #44]
 2898 02a8 002B     		cmp	r3, #0
 2899 02aa 40F08F81 		bne	.L267
 2900              		.loc 1 798 26 discriminator 2 view .LVU739
 2901 02ae 4FF0FF32 		mov	r2, #-1
 2902              	.L268:
 2903              		.loc 1 798 26 discriminator 1 view .LVU740
 2904 02b2 5346     		mov	r3, r10
 2905 02b4 70E1     		b	.L269
 2906              	.L227:
 2907              	.LBE38:
 2908              	.LBB41:
 692:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 2909              		.loc 1 692 9 is_stmt 1 view .LVU741
 693:Core/Src/printf.c ****           base = 16U;
 2910              		.loc 1 693 9 view .LVU742
 2911 02b6 6F28     		cmp	r0, #111
 2912 02b8 0CD0     		beq	.L290
 2913 02ba 05D8     		bhi	.L237
 2914 02bc 5828     		cmp	r0, #88
 2915 02be 3CD0     		beq	.L291
 2916 02c0 6228     		cmp	r0, #98
 2917 02c2 03D1     		bne	.L238
 2918              	.LBE41:
 657:Core/Src/printf.c ****         format++;
 2919              		.loc 1 657 15 is_stmt 0 view .LVU743
 2920 02c4 0223     		movs	r3, #2
 2921 02c6 06E0     		b	.L236
 2922              	.L237:
 2923 02c8 7828     		cmp	r0, #120
 2924 02ca 38D0     		beq	.L293
 2925              	.L238:
 2926              	.LBB49:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2927              		.loc 1 703 11 is_stmt 1 view .LVU744
 2928              	.LVL326:
 704:Core/Src/printf.c ****         }
 2929              		.loc 1 704 11 view .LVU745
 704:Core/Src/printf.c ****         }
 2930              		.loc 1 704 17 is_stmt 0 view .LVU746
 2931 02cc 25F01005 		bic	r5, r5, #16
 2932              	.LVL327:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2933              		.loc 1 703 16 view .LVU747
 2934 02d0 0A23     		movs	r3, #10
 2935 02d2 00E0     		b	.L236
 2936              	.LVL328:
 2937              	.L290:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2938              		.loc 1 703 16 view .LVU748
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 75


 2939              	.LBE49:
 657:Core/Src/printf.c ****         format++;
 2940              		.loc 1 657 15 view .LVU749
 2941 02d4 0823     		movs	r3, #8
 2942              	.L236:
 2943              	.LVL329:
 2944              	.LBB50:
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2945              		.loc 1 707 9 is_stmt 1 view .LVU750
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2946              		.loc 1 707 12 is_stmt 0 view .LVU751
 2947 02d6 5828     		cmp	r0, #88
 2948 02d8 33D0     		beq	.L312
 2949              	.L239:
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2950              		.loc 1 712 9 is_stmt 1 view .LVU752
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2951              		.loc 1 712 12 is_stmt 0 view .LVU753
 2952 02da 6928     		cmp	r0, #105
 2953 02dc 03D0     		beq	.L240
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2954              		.loc 1 712 30 discriminator 1 view .LVU754
 2955 02de 6428     		cmp	r0, #100
 2956 02e0 01D0     		beq	.L240
 713:Core/Src/printf.c ****         }
 2957              		.loc 1 713 11 is_stmt 1 view .LVU755
 713:Core/Src/printf.c ****         }
 2958              		.loc 1 713 17 is_stmt 0 view .LVU756
 2959 02e2 25F00C05 		bic	r5, r5, #12
 2960              	.LVL330:
 2961              	.L240:
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 2962              		.loc 1 717 9 is_stmt 1 view .LVU757
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 2963              		.loc 1 717 12 is_stmt 0 view .LVU758
 2964 02e6 15F4806F 		tst	r5, #1024
 2965 02ea 01D0     		beq	.L241
 718:Core/Src/printf.c ****         }
 2966              		.loc 1 718 11 is_stmt 1 view .LVU759
 718:Core/Src/printf.c ****         }
 2967              		.loc 1 718 17 is_stmt 0 view .LVU760
 2968 02ec 25F00105 		bic	r5, r5, #1
 2969              	.LVL331:
 2970              	.L241:
 722:Core/Src/printf.c ****           // signed
 2971              		.loc 1 722 9 is_stmt 1 view .LVU761
 722:Core/Src/printf.c ****           // signed
 2972              		.loc 1 722 12 is_stmt 0 view .LVU762
 2973 02f0 6928     		cmp	r0, #105
 2974 02f2 29D0     		beq	.L242
 722:Core/Src/printf.c ****           // signed
 2975              		.loc 1 722 30 discriminator 1 view .LVU763
 2976 02f4 6428     		cmp	r0, #100
 2977 02f6 27D0     		beq	.L242
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2978              		.loc 1 741 11 is_stmt 1 view .LVU764
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 76


 2979              		.loc 1 741 14 is_stmt 0 view .LVU765
 2980 02f8 15F4007F 		tst	r5, #512
 2981 02fc 40F09480 		bne	.L313
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 2982              		.loc 1 746 16 is_stmt 1 view .LVU766
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 2983              		.loc 1 746 19 is_stmt 0 view .LVU767
 2984 0300 15F4807F 		tst	r5, #256
 2985 0304 40F0AB80 		bne	.L314
 2986              	.LBB42:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 2987              		.loc 1 750 13 is_stmt 1 view .LVU768
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 2988              		.loc 1 750 103 is_stmt 0 view .LVU769
 2989 0308 15F0400F 		tst	r5, #64
 2990 030c 00F0BC80 		beq	.L253
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 2991              		.loc 1 750 78 discriminator 1 view .LVU770
 2992 0310 1A9A     		ldr	r2, [sp, #104]
 2993 0312 111D     		adds	r1, r2, #4
 2994 0314 1A91     		str	r1, [sp, #104]
 2995 0316 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2996              	.L254:
 2997              	.LVL332:
 751:Core/Src/printf.c ****           }
 2998              		.loc 1 751 13 is_stmt 1 view .LVU771
 751:Core/Src/printf.c ****           }
 2999              		.loc 1 751 19 is_stmt 0 view .LVU772
 3000 0318 0595     		str	r5, [sp, #20]
 3001 031a CDF810B0 		str	fp, [sp, #16]
 3002 031e 0B99     		ldr	r1, [sp, #44]
 3003 0320 0391     		str	r1, [sp, #12]
 3004 0322 0293     		str	r3, [sp, #8]
 3005 0324 0023     		movs	r3, #0
 3006              	.LVL333:
 751:Core/Src/printf.c ****           }
 3007              		.loc 1 751 19 view .LVU773
 3008 0326 0193     		str	r3, [sp, #4]
 3009 0328 0092     		str	r2, [sp]
 3010 032a 3B46     		mov	r3, r7
 3011 032c 3246     		mov	r2, r6
 3012              	.LVL334:
 751:Core/Src/printf.c ****           }
 3013              		.loc 1 751 19 view .LVU774
 3014 032e 4946     		mov	r1, r9
 3015 0330 4046     		mov	r0, r8
 3016 0332 FFF7FEFF 		bl	_ntoa_long
 3017              	.LVL335:
 751:Core/Src/printf.c ****           }
 3018              		.loc 1 751 19 view .LVU775
 3019 0336 0646     		mov	r6, r0
 3020              	.LVL336:
 751:Core/Src/printf.c ****           }
 3021              		.loc 1 751 19 view .LVU776
 3022 0338 27E0     		b	.L246
 3023              	.LVL337:
 3024              	.L291:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 77


 751:Core/Src/printf.c ****           }
 3025              		.loc 1 751 19 view .LVU777
 3026              	.LBE42:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 3027              		.loc 1 703 16 view .LVU778
 3028 033a 1023     		movs	r3, #16
 3029 033c CBE7     		b	.L236
 3030              	.L293:
 3031              	.LBE50:
 657:Core/Src/printf.c ****         format++;
 3032              		.loc 1 657 15 view .LVU779
 3033 033e 1023     		movs	r3, #16
 3034 0340 C9E7     		b	.L236
 3035              	.LVL338:
 3036              	.L312:
 3037              	.LBB51:
 708:Core/Src/printf.c ****         }
 3038              		.loc 1 708 11 is_stmt 1 view .LVU780
 708:Core/Src/printf.c ****         }
 3039              		.loc 1 708 17 is_stmt 0 view .LVU781
 3040 0342 45F02005 		orr	r5, r5, #32
 3041              	.LVL339:
 708:Core/Src/printf.c ****         }
 3042              		.loc 1 708 17 view .LVU782
 3043 0346 C8E7     		b	.L239
 3044              	.L242:
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3045              		.loc 1 724 11 is_stmt 1 view .LVU783
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3046              		.loc 1 724 14 is_stmt 0 view .LVU784
 3047 0348 15F4007F 		tst	r5, #512
 3048 034c 21D1     		bne	.L315
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3049              		.loc 1 730 16 is_stmt 1 view .LVU785
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3050              		.loc 1 730 19 is_stmt 0 view .LVU786
 3051 034e 15F4807F 		tst	r5, #256
 3052 0352 42D1     		bne	.L316
 3053              	.LBB43:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3054              		.loc 1 735 13 is_stmt 1 view .LVU787
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3055              		.loc 1 735 76 is_stmt 0 view .LVU788
 3056 0354 15F0400F 		tst	r5, #64
 3057 0358 58D0     		beq	.L248
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3058              		.loc 1 735 60 discriminator 1 view .LVU789
 3059 035a 1A9A     		ldr	r2, [sp, #104]
 3060 035c 111D     		adds	r1, r2, #4
 3061 035e 1A91     		str	r1, [sp, #104]
 3062 0360 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3063              	.L249:
 3064              	.LVL340:
 736:Core/Src/printf.c ****           }
 3065              		.loc 1 736 13 is_stmt 1 view .LVU790
 736:Core/Src/printf.c ****           }
 3066              		.loc 1 736 56 is_stmt 0 view .LVU791
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 78


 3067 0362 82EAE271 		eor	r1, r2, r2, asr #31
 3068 0366 A1EBE271 		sub	r1, r1, r2, asr #31
 736:Core/Src/printf.c ****           }
 3069              		.loc 1 736 19 view .LVU792
 3070 036a 0595     		str	r5, [sp, #20]
 3071 036c CDF810B0 		str	fp, [sp, #16]
 3072 0370 0B98     		ldr	r0, [sp, #44]
 3073 0372 0390     		str	r0, [sp, #12]
 3074 0374 0293     		str	r3, [sp, #8]
 3075 0376 D20F     		lsrs	r2, r2, #31
 3076              	.LVL341:
 736:Core/Src/printf.c ****           }
 3077              		.loc 1 736 19 view .LVU793
 3078 0378 0192     		str	r2, [sp, #4]
 3079 037a 0091     		str	r1, [sp]
 3080 037c 3B46     		mov	r3, r7
 3081              	.LVL342:
 736:Core/Src/printf.c ****           }
 3082              		.loc 1 736 19 view .LVU794
 3083 037e 3246     		mov	r2, r6
 3084 0380 4946     		mov	r1, r9
 3085 0382 4046     		mov	r0, r8
 3086 0384 FFF7FEFF 		bl	_ntoa_long
 3087              	.LVL343:
 736:Core/Src/printf.c ****           }
 3088              		.loc 1 736 19 view .LVU795
 3089 0388 0646     		mov	r6, r0
 3090              	.LVL344:
 3091              	.L246:
 736:Core/Src/printf.c ****           }
 3092              		.loc 1 736 19 view .LVU796
 3093              	.LBE43:
 754:Core/Src/printf.c ****         break;
 3094              		.loc 1 754 9 is_stmt 1 view .LVU797
 754:Core/Src/printf.c ****         break;
 3095              		.loc 1 754 15 is_stmt 0 view .LVU798
 3096 038a 0F9B     		ldr	r3, [sp, #60]
 3097 038c 0133     		adds	r3, r3, #1
 3098 038e 0F93     		str	r3, [sp, #60]
 755:Core/Src/printf.c ****       }
 3099              		.loc 1 755 9 is_stmt 1 view .LVU799
 3100 0390 41E6     		b	.L282
 3101              	.LVL345:
 3102              	.L315:
 3103              	.LBB44:
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3104              		.loc 1 726 13 view .LVU800
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3105              		.loc 1 726 29 is_stmt 0 view .LVU801
 3106 0392 1A9A     		ldr	r2, [sp, #104]
 3107 0394 0732     		adds	r2, r2, #7
 3108 0396 22F00702 		bic	r2, r2, #7
 3109 039a 02F10801 		add	r1, r2, #8
 3110 039e 1A91     		str	r1, [sp, #104]
 3111 03a0 5168     		ldr	r1, [r2, #4]
 727:Core/Src/printf.c **** #endif
 3112              		.loc 1 727 13 is_stmt 1 view .LVU802
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 79


 727:Core/Src/printf.c **** #endif
 3113              		.loc 1 727 61 is_stmt 0 view .LVU803
 3114 03a2 1268     		ldr	r2, [r2]
 3115 03a4 0846     		mov	r0, r1
 3116 03a6 0029     		cmp	r1, #0
 3117 03a8 13DB     		blt	.L317
 3118              	.L245:
 727:Core/Src/printf.c **** #endif
 3119              		.loc 1 727 19 view .LVU804
 3120 03aa 0895     		str	r5, [sp, #32]
 3121 03ac CDF81CB0 		str	fp, [sp, #28]
 3122 03b0 0B9C     		ldr	r4, [sp, #44]
 3123 03b2 0694     		str	r4, [sp, #24]
 3124 03b4 0493     		str	r3, [sp, #16]
 3125 03b6 0023     		movs	r3, #0
 3126              	.LVL346:
 727:Core/Src/printf.c **** #endif
 3127              		.loc 1 727 19 view .LVU805
 3128 03b8 0593     		str	r3, [sp, #20]
 3129 03ba C90F     		lsrs	r1, r1, #31
 3130 03bc 0291     		str	r1, [sp, #8]
 3131 03be 0092     		str	r2, [sp]
 3132 03c0 0190     		str	r0, [sp, #4]
 3133 03c2 3B46     		mov	r3, r7
 3134 03c4 3246     		mov	r2, r6
 3135 03c6 4946     		mov	r1, r9
 3136 03c8 4046     		mov	r0, r8
 3137 03ca FFF7FEFF 		bl	_ntoa_long_long
 3138              	.LVL347:
 727:Core/Src/printf.c **** #endif
 3139              		.loc 1 727 19 view .LVU806
 3140 03ce 0646     		mov	r6, r0
 3141              	.LVL348:
 727:Core/Src/printf.c **** #endif
 3142              		.loc 1 727 19 view .LVU807
 3143              	.LBE44:
 3144 03d0 DBE7     		b	.L246
 3145              	.LVL349:
 3146              	.L317:
 3147              	.LBB45:
 727:Core/Src/printf.c **** #endif
 3148              		.loc 1 727 61 view .LVU808
 3149 03d2 5242     		negs	r2, r2
 3150 03d4 61EB4100 		sbc	r0, r1, r1, lsl #1
 3151 03d8 E7E7     		b	.L245
 3152              	.L316:
 3153              	.LBE45:
 3154              	.LBB46:
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3155              		.loc 1 731 13 is_stmt 1 view .LVU809
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3156              		.loc 1 731 24 is_stmt 0 view .LVU810
 3157 03da 1A9A     		ldr	r2, [sp, #104]
 3158 03dc 111D     		adds	r1, r2, #4
 3159 03de 1A91     		str	r1, [sp, #104]
 3160 03e0 1268     		ldr	r2, [r2]
 732:Core/Src/printf.c ****           }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 80


 3161              		.loc 1 732 13 is_stmt 1 view .LVU811
 732:Core/Src/printf.c ****           }
 3162              		.loc 1 732 56 is_stmt 0 view .LVU812
 3163 03e2 82EAE271 		eor	r1, r2, r2, asr #31
 3164 03e6 A1EBE271 		sub	r1, r1, r2, asr #31
 732:Core/Src/printf.c ****           }
 3165              		.loc 1 732 19 view .LVU813
 3166 03ea 0595     		str	r5, [sp, #20]
 3167 03ec CDF810B0 		str	fp, [sp, #16]
 3168 03f0 0B98     		ldr	r0, [sp, #44]
 3169 03f2 0390     		str	r0, [sp, #12]
 3170 03f4 0293     		str	r3, [sp, #8]
 3171 03f6 D20F     		lsrs	r2, r2, #31
 3172 03f8 0192     		str	r2, [sp, #4]
 3173 03fa 0091     		str	r1, [sp]
 3174 03fc 3B46     		mov	r3, r7
 3175              	.LVL350:
 732:Core/Src/printf.c ****           }
 3176              		.loc 1 732 19 view .LVU814
 3177 03fe 3246     		mov	r2, r6
 3178 0400 4946     		mov	r1, r9
 3179 0402 4046     		mov	r0, r8
 3180 0404 FFF7FEFF 		bl	_ntoa_long
 3181              	.LVL351:
 732:Core/Src/printf.c ****           }
 3182              		.loc 1 732 19 view .LVU815
 3183 0408 0646     		mov	r6, r0
 3184              	.LVL352:
 732:Core/Src/printf.c ****           }
 3185              		.loc 1 732 19 view .LVU816
 3186              	.LBE46:
 3187 040a BEE7     		b	.L246
 3188              	.LVL353:
 3189              	.L248:
 3190              	.LBB47:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3191              		.loc 1 735 129 discriminator 2 view .LVU817
 3192 040c 15F0800F 		tst	r5, #128
 3193 0410 05D0     		beq	.L250
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3194              		.loc 1 735 113 discriminator 4 view .LVU818
 3195 0412 1A9A     		ldr	r2, [sp, #104]
 3196 0414 111D     		adds	r1, r2, #4
 3197 0416 1A91     		str	r1, [sp, #104]
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3198              		.loc 1 735 102 discriminator 1 view .LVU819
 3199 0418 B2F90020 		ldrsh	r2, [r2]
 3200 041c A1E7     		b	.L249
 3201              	.L250:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3202              		.loc 1 735 129 discriminator 5 view .LVU820
 3203 041e 1A9A     		ldr	r2, [sp, #104]
 3204 0420 111D     		adds	r1, r2, #4
 3205 0422 1A91     		str	r1, [sp, #104]
 3206 0424 1268     		ldr	r2, [r2]
 3207 0426 9CE7     		b	.L249
 3208              	.L313:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 81


 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3209              		.loc 1 735 129 discriminator 5 view .LVU821
 3210              	.LBE47:
 743:Core/Src/printf.c **** #endif
 3211              		.loc 1 743 13 is_stmt 1 view .LVU822
 743:Core/Src/printf.c **** #endif
 3212              		.loc 1 743 19 is_stmt 0 view .LVU823
 3213 0428 1A9A     		ldr	r2, [sp, #104]
 3214 042a 0732     		adds	r2, r2, #7
 3215 042c 22F00702 		bic	r2, r2, #7
 3216 0430 02F10801 		add	r1, r2, #8
 3217 0434 1A91     		str	r1, [sp, #104]
 743:Core/Src/printf.c **** #endif
 3218              		.loc 1 743 19 discriminator 1 view .LVU824
 3219 0436 0895     		str	r5, [sp, #32]
 3220 0438 CDF81CB0 		str	fp, [sp, #28]
 3221 043c 0B99     		ldr	r1, [sp, #44]
 3222 043e 0691     		str	r1, [sp, #24]
 3223 0440 0021     		movs	r1, #0
 3224 0442 0493     		str	r3, [sp, #16]
 3225 0444 0591     		str	r1, [sp, #20]
 3226 0446 0291     		str	r1, [sp, #8]
 3227 0448 0CCA     		ldmia	r2, {r2-r3}
 3228 044a CDE90023 		strd	r2, [sp]
 3229 044e 3B46     		mov	r3, r7
 3230              	.LVL354:
 743:Core/Src/printf.c **** #endif
 3231              		.loc 1 743 19 discriminator 1 view .LVU825
 3232 0450 3246     		mov	r2, r6
 3233 0452 4946     		mov	r1, r9
 3234 0454 4046     		mov	r0, r8
 3235 0456 FFF7FEFF 		bl	_ntoa_long_long
 3236              	.LVL355:
 743:Core/Src/printf.c **** #endif
 3237              		.loc 1 743 19 discriminator 1 view .LVU826
 3238 045a 0646     		mov	r6, r0
 3239              	.LVL356:
 743:Core/Src/printf.c **** #endif
 3240              		.loc 1 743 19 discriminator 1 view .LVU827
 3241 045c 95E7     		b	.L246
 3242              	.LVL357:
 3243              	.L314:
 747:Core/Src/printf.c ****           }
 3244              		.loc 1 747 13 is_stmt 1 view .LVU828
 747:Core/Src/printf.c ****           }
 3245              		.loc 1 747 19 is_stmt 0 view .LVU829
 3246 045e 1A9A     		ldr	r2, [sp, #104]
 3247 0460 111D     		adds	r1, r2, #4
 3248 0462 1A91     		str	r1, [sp, #104]
 747:Core/Src/printf.c ****           }
 3249              		.loc 1 747 19 discriminator 1 view .LVU830
 3250 0464 0595     		str	r5, [sp, #20]
 3251 0466 CDF810B0 		str	fp, [sp, #16]
 3252 046a 0B99     		ldr	r1, [sp, #44]
 3253 046c 0391     		str	r1, [sp, #12]
 3254 046e 0293     		str	r3, [sp, #8]
 3255 0470 0023     		movs	r3, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 82


 3256              	.LVL358:
 747:Core/Src/printf.c ****           }
 3257              		.loc 1 747 19 discriminator 1 view .LVU831
 3258 0472 0193     		str	r3, [sp, #4]
 3259 0474 1368     		ldr	r3, [r2]
 3260 0476 0093     		str	r3, [sp]
 3261 0478 3B46     		mov	r3, r7
 3262 047a 3246     		mov	r2, r6
 3263 047c 4946     		mov	r1, r9
 3264 047e 4046     		mov	r0, r8
 3265 0480 FFF7FEFF 		bl	_ntoa_long
 3266              	.LVL359:
 747:Core/Src/printf.c ****           }
 3267              		.loc 1 747 19 discriminator 1 view .LVU832
 3268 0484 0646     		mov	r6, r0
 3269              	.LVL360:
 747:Core/Src/printf.c ****           }
 3270              		.loc 1 747 19 discriminator 1 view .LVU833
 3271 0486 80E7     		b	.L246
 3272              	.LVL361:
 3273              	.L253:
 3274              	.LBB48:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3275              		.loc 1 750 174 discriminator 2 view .LVU834
 3276 0488 15F0800F 		tst	r5, #128
 3277 048c 04D0     		beq	.L255
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3278              		.loc 1 750 149 discriminator 4 view .LVU835
 3279 048e 1A9A     		ldr	r2, [sp, #104]
 3280 0490 111D     		adds	r1, r2, #4
 3281 0492 1A91     		str	r1, [sp, #104]
 3282 0494 1288     		ldrh	r2, [r2]
 3283 0496 3FE7     		b	.L254
 3284              	.L255:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3285              		.loc 1 750 174 discriminator 5 view .LVU836
 3286 0498 1A9A     		ldr	r2, [sp, #104]
 3287 049a 111D     		adds	r1, r2, #4
 3288 049c 1A91     		str	r1, [sp, #104]
 3289 049e 1268     		ldr	r2, [r2]
 3290 04a0 3AE7     		b	.L254
 3291              	.LVL362:
 3292              	.L232:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3293              		.loc 1 750 174 discriminator 5 view .LVU837
 3294              	.LBE48:
 3295              	.LBE51:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3296              		.loc 1 760 9 is_stmt 1 view .LVU838
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3297              		.loc 1 760 12 is_stmt 0 view .LVU839
 3298 04a2 4628     		cmp	r0, #70
 3299 04a4 1AD0     		beq	.L318
 3300              	.L256:
 761:Core/Src/printf.c ****         format++;
 3301              		.loc 1 761 9 is_stmt 1 view .LVU840
 761:Core/Src/printf.c ****         format++;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 83


 3302              		.loc 1 761 15 is_stmt 0 view .LVU841
 3303 04a6 1A9B     		ldr	r3, [sp, #104]
 3304 04a8 0733     		adds	r3, r3, #7
 3305 04aa 23F00703 		bic	r3, r3, #7
 3306 04ae 03F10802 		add	r2, r3, #8
 3307 04b2 1A92     		str	r2, [sp, #104]
 761:Core/Src/printf.c ****         format++;
 3308              		.loc 1 761 15 discriminator 1 view .LVU842
 3309 04b4 0495     		str	r5, [sp, #16]
 3310 04b6 CDF80CB0 		str	fp, [sp, #12]
 3311 04ba 0B9A     		ldr	r2, [sp, #44]
 3312 04bc 0292     		str	r2, [sp, #8]
 3313 04be D3E90023 		ldrd	r2, [r3]
 3314 04c2 CDE90023 		strd	r2, [sp]
 3315 04c6 3B46     		mov	r3, r7
 3316 04c8 3246     		mov	r2, r6
 3317 04ca 4946     		mov	r1, r9
 3318 04cc 4046     		mov	r0, r8
 3319 04ce FFF7FEFF 		bl	_ftoa
 3320              	.LVL363:
 3321 04d2 0646     		mov	r6, r0
 3322              	.LVL364:
 762:Core/Src/printf.c ****         break;
 3323              		.loc 1 762 9 is_stmt 1 view .LVU843
 762:Core/Src/printf.c ****         break;
 3324              		.loc 1 762 15 is_stmt 0 view .LVU844
 3325 04d4 0F9B     		ldr	r3, [sp, #60]
 3326 04d6 0133     		adds	r3, r3, #1
 3327 04d8 0F93     		str	r3, [sp, #60]
 763:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 3328              		.loc 1 763 9 is_stmt 1 view .LVU845
 3329 04da 9CE5     		b	.L282
 3330              	.LVL365:
 3331              	.L318:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3332              		.loc 1 760 29 discriminator 1 view .LVU846
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3333              		.loc 1 760 35 is_stmt 0 discriminator 1 view .LVU847
 3334 04dc 45F02005 		orr	r5, r5, #32
 3335              	.LVL366:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3336              		.loc 1 760 35 discriminator 1 view .LVU848
 3337 04e0 E1E7     		b	.L256
 3338              	.L230:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3339              		.loc 1 769 9 is_stmt 1 view .LVU849
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3340              		.loc 1 769 12 is_stmt 0 view .LVU850
 3341 04e2 6728     		cmp	r0, #103
 3342 04e4 01D0     		beq	.L257
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3343              		.loc 1 769 29 discriminator 2 view .LVU851
 3344 04e6 4728     		cmp	r0, #71
 3345 04e8 01D1     		bne	.L258
 3346              	.L257:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3347              		.loc 1 769 49 is_stmt 1 discriminator 3 view .LVU852
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 84


 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3348              		.loc 1 769 55 is_stmt 0 discriminator 3 view .LVU853
 3349 04ea 45F40065 		orr	r5, r5, #2048
 3350              	.LVL367:
 3351              	.L258:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3352              		.loc 1 770 9 is_stmt 1 view .LVU854
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3353              		.loc 1 770 12 is_stmt 0 view .LVU855
 3354 04ee 4528     		cmp	r0, #69
 3355 04f0 01D0     		beq	.L259
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3356              		.loc 1 770 29 discriminator 2 view .LVU856
 3357 04f2 4728     		cmp	r0, #71
 3358 04f4 01D1     		bne	.L260
 3359              	.L259:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3360              		.loc 1 770 49 is_stmt 1 discriminator 3 view .LVU857
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3361              		.loc 1 770 55 is_stmt 0 discriminator 3 view .LVU858
 3362 04f6 45F02005 		orr	r5, r5, #32
 3363              	.LVL368:
 3364              	.L260:
 771:Core/Src/printf.c ****         format++;
 3365              		.loc 1 771 9 is_stmt 1 view .LVU859
 771:Core/Src/printf.c ****         format++;
 3366              		.loc 1 771 15 is_stmt 0 view .LVU860
 3367 04fa 1A9B     		ldr	r3, [sp, #104]
 3368 04fc 0733     		adds	r3, r3, #7
 3369 04fe 23F00703 		bic	r3, r3, #7
 3370 0502 03F10802 		add	r2, r3, #8
 3371 0506 1A92     		str	r2, [sp, #104]
 771:Core/Src/printf.c ****         format++;
 3372              		.loc 1 771 15 discriminator 1 view .LVU861
 3373 0508 0495     		str	r5, [sp, #16]
 3374 050a CDF80CB0 		str	fp, [sp, #12]
 3375 050e 0B9A     		ldr	r2, [sp, #44]
 3376 0510 0292     		str	r2, [sp, #8]
 3377 0512 D3E90023 		ldrd	r2, [r3]
 3378 0516 CDE90023 		strd	r2, [sp]
 3379 051a 3B46     		mov	r3, r7
 3380 051c 3246     		mov	r2, r6
 3381 051e 4946     		mov	r1, r9
 3382 0520 4046     		mov	r0, r8
 3383 0522 FFF7FEFF 		bl	_etoa
 3384              	.LVL369:
 3385 0526 0646     		mov	r6, r0
 3386              	.LVL370:
 772:Core/Src/printf.c ****         break;
 3387              		.loc 1 772 9 is_stmt 1 view .LVU862
 772:Core/Src/printf.c ****         break;
 3388              		.loc 1 772 15 is_stmt 0 view .LVU863
 3389 0528 0F9B     		ldr	r3, [sp, #60]
 3390 052a 0133     		adds	r3, r3, #1
 3391 052c 0F93     		str	r3, [sp, #60]
 773:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 3392              		.loc 1 773 9 is_stmt 1 view .LVU864
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 85


 3393 052e 72E5     		b	.L282
 3394              	.LVL371:
 3395              	.L233:
 3396              	.LBB52:
 777:Core/Src/printf.c ****         // pre padding
 3397              		.loc 1 777 9 view .LVU865
 779:Core/Src/printf.c ****           while (l++ < width) {
 3398              		.loc 1 779 9 view .LVU866
 779:Core/Src/printf.c ****           while (l++ < width) {
 3399              		.loc 1 779 12 is_stmt 0 view .LVU867
 3400 0530 15F00205 		ands	r5, r5, #2
 3401              	.LVL372:
 779:Core/Src/printf.c ****           while (l++ < width) {
 3402              		.loc 1 779 12 view .LVU868
 3403 0534 1DD0     		beq	.L294
 777:Core/Src/printf.c ****         // pre padding
 3404              		.loc 1 777 22 view .LVU869
 3405 0536 0124     		movs	r4, #1
 3406              	.LVL373:
 3407              	.L262:
 785:Core/Src/printf.c ****         // post padding
 3408              		.loc 1 785 9 is_stmt 1 view .LVU870
 785:Core/Src/printf.c ****         // post padding
 3409              		.loc 1 785 19 is_stmt 0 view .LVU871
 3410 0538 1A98     		ldr	r0, [sp, #104]
 3411 053a 031D     		adds	r3, r0, #4
 3412 053c 1A93     		str	r3, [sp, #104]
 785:Core/Src/printf.c ****         // post padding
 3413              		.loc 1 785 9 discriminator 1 view .LVU872
 3414 053e 06F1010A 		add	r10, r6, #1
 3415              	.LVL374:
 785:Core/Src/printf.c ****         // post padding
 3416              		.loc 1 785 9 discriminator 1 view .LVU873
 3417 0542 3B46     		mov	r3, r7
 3418 0544 3246     		mov	r2, r6
 3419 0546 4946     		mov	r1, r9
 3420 0548 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3421 054a C047     		blx	r8
 3422              	.LVL375:
 787:Core/Src/printf.c ****           while (l++ < width) {
 3423              		.loc 1 787 9 is_stmt 1 view .LVU874
 787:Core/Src/printf.c ****           while (l++ < width) {
 3424              		.loc 1 787 12 is_stmt 0 view .LVU875
 3425 054c A5B9     		cbnz	r5, .L319
 3426              	.LVL376:
 3427              	.L265:
 792:Core/Src/printf.c ****         break;
 3428              		.loc 1 792 9 is_stmt 1 view .LVU876
 792:Core/Src/printf.c ****         break;
 3429              		.loc 1 792 15 is_stmt 0 view .LVU877
 3430 054e 0F9B     		ldr	r3, [sp, #60]
 3431 0550 0133     		adds	r3, r3, #1
 3432 0552 0F93     		str	r3, [sp, #60]
 793:Core/Src/printf.c ****       }
 3433              		.loc 1 793 9 is_stmt 1 view .LVU878
 3434 0554 5646     		mov	r6, r10
 3435 0556 5EE5     		b	.L282
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 86


 3436              	.LVL377:
 3437              	.L263:
 781:Core/Src/printf.c ****           }
 3438              		.loc 1 781 13 view .LVU879
 3439 0558 02F1010A 		add	r10, r2, #1
 3440              	.LVL378:
 781:Core/Src/printf.c ****           }
 3441              		.loc 1 781 13 is_stmt 0 view .LVU880
 3442 055c 3B46     		mov	r3, r7
 3443 055e 4946     		mov	r1, r9
 3444 0560 2020     		movs	r0, #32
 3445 0562 C047     		blx	r8
 3446              	.LVL379:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3447              		.loc 1 780 19 view .LVU881
 3448 0564 2346     		mov	r3, r4
 781:Core/Src/printf.c ****           }
 3449              		.loc 1 781 13 view .LVU882
 3450 0566 5246     		mov	r2, r10
 3451              	.LVL380:
 3452              	.L261:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3453              		.loc 1 780 22 is_stmt 1 view .LVU883
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3454              		.loc 1 780 19 is_stmt 0 view .LVU884
 3455 0568 5C1C     		adds	r4, r3, #1
 3456              	.LVL381:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3457              		.loc 1 780 22 view .LVU885
 3458 056a 9B45     		cmp	fp, r3
 3459 056c F4D8     		bhi	.L263
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3460              		.loc 1 780 22 view .LVU886
 3461 056e 1646     		mov	r6, r2
 3462 0570 E2E7     		b	.L262
 3463              	.LVL382:
 3464              	.L294:
 777:Core/Src/printf.c ****         // pre padding
 3465              		.loc 1 777 22 view .LVU887
 3466 0572 0123     		movs	r3, #1
 3467 0574 3246     		mov	r2, r6
 3468 0576 F7E7     		b	.L261
 3469              	.LVL383:
 3470              	.L319:
 777:Core/Src/printf.c ****         // pre padding
 3471              		.loc 1 777 22 view .LVU888
 3472 0578 5246     		mov	r2, r10
 3473 057a 06E0     		b	.L264
 3474              	.LVL384:
 3475              	.L266:
 789:Core/Src/printf.c ****           }
 3476              		.loc 1 789 13 is_stmt 1 view .LVU889
 3477 057c 561C     		adds	r6, r2, #1
 3478              	.LVL385:
 789:Core/Src/printf.c ****           }
 3479              		.loc 1 789 13 is_stmt 0 view .LVU890
 3480 057e 3B46     		mov	r3, r7
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 87


 3481 0580 4946     		mov	r1, r9
 3482 0582 2020     		movs	r0, #32
 3483 0584 C047     		blx	r8
 3484              	.LVL386:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3485              		.loc 1 788 19 view .LVU891
 3486 0586 2C46     		mov	r4, r5
 789:Core/Src/printf.c ****           }
 3487              		.loc 1 789 13 view .LVU892
 3488 0588 3246     		mov	r2, r6
 3489              	.LVL387:
 3490              	.L264:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3491              		.loc 1 788 22 is_stmt 1 view .LVU893
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3492              		.loc 1 788 19 is_stmt 0 view .LVU894
 3493 058a 651C     		adds	r5, r4, #1
 3494              	.LVL388:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3495              		.loc 1 788 22 view .LVU895
 3496 058c A345     		cmp	fp, r4
 3497 058e F5D8     		bhi	.L266
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3498              		.loc 1 788 22 view .LVU896
 3499 0590 9246     		mov	r10, r2
 3500 0592 DCE7     		b	.L265
 3501              	.LVL389:
 3502              	.L271:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3503              		.loc 1 788 22 view .LVU897
 3504              	.LBE52:
 3505              	.LBB53:
 3506              	.LBB39:
 3507              	.LBB40:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3508              		.loc 1 174 34 is_stmt 1 discriminator 4 view .LVU898
 3509 0594 0133     		adds	r3, r3, #1
 3510              	.LVL390:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3511              		.loc 1 174 30 is_stmt 0 discriminator 3 view .LVU899
 3512 0596 0A46     		mov	r2, r1
 3513              	.LVL391:
 3514              	.L269:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3515              		.loc 1 174 20 is_stmt 1 discriminator 1 view .LVU900
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3516              		.loc 1 174 17 is_stmt 0 discriminator 1 view .LVU901
 3517 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3518              		.loc 1 174 20 discriminator 1 view .LVU902
 3519 059a 11B1     		cbz	r1, .L270
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3520              		.loc 1 174 30 discriminator 3 view .LVU903
 3521 059c 511E     		subs	r1, r2, #1
 3522              	.LVL392:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3523              		.loc 1 174 20 discriminator 3 view .LVU904
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 88


 3524 059e 002A     		cmp	r2, #0
 3525 05a0 F8D1     		bne	.L271
 3526              	.LVL393:
 3527              	.L270:
 175:Core/Src/printf.c **** }
 3528              		.loc 1 175 3 is_stmt 1 view .LVU905
 175:Core/Src/printf.c **** }
 3529              		.loc 1 175 27 is_stmt 0 view .LVU906
 3530 05a2 A3EB0A03 		sub	r3, r3, r10
 3531              	.LVL394:
 175:Core/Src/printf.c **** }
 3532              		.loc 1 175 27 view .LVU907
 3533              	.LBE40:
 3534              	.LBE39:
 799:Core/Src/printf.c ****         // pre padding
 800:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 3535              		.loc 1 800 9 is_stmt 1 view .LVU908
 3536              		.loc 1 800 12 is_stmt 0 view .LVU909
 3537 05a6 15F48062 		ands	r2, r5, #1024
 3538 05aa 0C92     		str	r2, [sp, #48]
 3539 05ac 03D0     		beq	.L272
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3540              		.loc 1 801 11 is_stmt 1 view .LVU910
 3541              		.loc 1 801 13 is_stmt 0 view .LVU911
 3542 05ae 0B9A     		ldr	r2, [sp, #44]
 3543 05b0 9342     		cmp	r3, r2
 3544 05b2 28BF     		it	cs
 3545 05b4 1346     		movcs	r3, r2
 3546              	.LVL395:
 3547              	.L272:
 802:Core/Src/printf.c ****         }
 803:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 3548              		.loc 1 803 9 is_stmt 1 view .LVU912
 3549              		.loc 1 803 12 is_stmt 0 view .LVU913
 3550 05b6 15F00204 		ands	r4, r5, #2
 3551 05ba 09D0     		beq	.L320
 3552              		.loc 1 803 12 view .LVU914
 3553 05bc 0D94     		str	r4, [sp, #52]
 3554 05be CDF838B0 		str	fp, [sp, #56]
 3555 05c2 0B9D     		ldr	r5, [sp, #44]
 3556              	.LVL396:
 3557              		.loc 1 803 12 view .LVU915
 3558 05c4 3246     		mov	r2, r6
 3559 05c6 0C9E     		ldr	r6, [sp, #48]
 3560              	.LVL397:
 3561              		.loc 1 803 12 view .LVU916
 3562 05c8 9B46     		mov	fp, r3
 3563              	.LVL398:
 3564              		.loc 1 803 12 view .LVU917
 3565 05ca 1FE0     		b	.L276
 3566              	.LVL399:
 3567              	.L267:
 798:Core/Src/printf.c ****         // pre padding
 3568              		.loc 1 798 26 discriminator 1 view .LVU918
 3569 05cc 0B9A     		ldr	r2, [sp, #44]
 3570 05ce 70E6     		b	.L268
 3571              	.LVL400:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 89


 3572              	.L320:
 798:Core/Src/printf.c ****         // pre padding
 3573              		.loc 1 798 26 discriminator 1 view .LVU919
 3574 05d0 3246     		mov	r2, r6
 3575 05d2 2646     		mov	r6, r4
 3576              	.LVL401:
 798:Core/Src/printf.c ****         // pre padding
 3577              		.loc 1 798 26 discriminator 1 view .LVU920
 3578 05d4 06E0     		b	.L273
 3579              	.LVL402:
 3580              	.L275:
 804:Core/Src/printf.c ****           while (l++ < width) {
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3581              		.loc 1 805 13 is_stmt 1 view .LVU921
 3582 05d6 541C     		adds	r4, r2, #1
 3583              	.LVL403:
 3584              		.loc 1 805 13 is_stmt 0 view .LVU922
 3585 05d8 3B46     		mov	r3, r7
 3586 05da 4946     		mov	r1, r9
 3587 05dc 2020     		movs	r0, #32
 3588 05de C047     		blx	r8
 3589              	.LVL404:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3590              		.loc 1 804 19 view .LVU923
 3591 05e0 2B46     		mov	r3, r5
 3592              		.loc 1 805 13 view .LVU924
 3593 05e2 2246     		mov	r2, r4
 3594              	.LVL405:
 3595              	.L273:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3596              		.loc 1 804 22 is_stmt 1 view .LVU925
 804:Core/Src/printf.c ****           while (l++ < width) {
 3597              		.loc 1 804 19 is_stmt 0 view .LVU926
 3598 05e4 5D1C     		adds	r5, r3, #1
 3599              	.LVL406:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3600              		.loc 1 804 22 view .LVU927
 3601 05e6 9B45     		cmp	fp, r3
 3602 05e8 F5D8     		bhi	.L275
 804:Core/Src/printf.c ****           while (l++ < width) {
 3603              		.loc 1 804 19 view .LVU928
 3604 05ea 3446     		mov	r4, r6
 3605 05ec 2B46     		mov	r3, r5
 3606 05ee 0D94     		str	r4, [sp, #52]
 3607 05f0 CDF838B0 		str	fp, [sp, #56]
 3608 05f4 0B9D     		ldr	r5, [sp, #44]
 3609              	.LVL407:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3610              		.loc 1 804 19 view .LVU929
 3611 05f6 0C9E     		ldr	r6, [sp, #48]
 3612 05f8 9B46     		mov	fp, r3
 3613              	.LVL408:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3614              		.loc 1 804 19 view .LVU930
 3615 05fa 07E0     		b	.L276
 3616              	.LVL409:
 3617              	.L295:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 90


 806:Core/Src/printf.c ****           }
 807:Core/Src/printf.c ****         }
 808:Core/Src/printf.c ****         // string output
 809:Core/Src/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 3618              		.loc 1 809 69 discriminator 2 view .LVU931
 3619 05fc 1D46     		mov	r5, r3
 3620              	.LVL410:
 3621              	.L278:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3622              		.loc 1 810 11 is_stmt 1 view .LVU932
 3623              		.loc 1 810 18 is_stmt 0 view .LVU933
 3624 05fe 0AF1010A 		add	r10, r10, #1
 3625              	.LVL411:
 3626              		.loc 1 810 11 view .LVU934
 3627 0602 541C     		adds	r4, r2, #1
 3628              	.LVL412:
 3629              		.loc 1 810 11 view .LVU935
 3630 0604 3B46     		mov	r3, r7
 3631 0606 4946     		mov	r1, r9
 3632 0608 C047     		blx	r8
 3633              	.LVL413:
 3634 060a 2246     		mov	r2, r4
 3635              	.LVL414:
 3636              	.L276:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3637              		.loc 1 809 26 is_stmt 1 view .LVU936
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3638              		.loc 1 809 17 is_stmt 0 view .LVU937
 3639 060c 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3640              		.loc 1 809 26 view .LVU938
 3641 0610 20B1     		cbz	r0, .L277
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3642              		.loc 1 809 26 discriminator 1 view .LVU939
 3643 0612 002E     		cmp	r6, #0
 3644 0614 F3D0     		beq	.L278
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3645              		.loc 1 809 69 discriminator 2 view .LVU940
 3646 0616 6B1E     		subs	r3, r5, #1
 3647              	.LVL415:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3648              		.loc 1 809 57 discriminator 2 view .LVU941
 3649 0618 002D     		cmp	r5, #0
 3650 061a EFD1     		bne	.L295
 3651              	.LVL416:
 3652              	.L277:
 811:Core/Src/printf.c ****         }
 812:Core/Src/printf.c ****         // post padding
 813:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 3653              		.loc 1 813 12 view .LVU942
 3654 061c 0D9C     		ldr	r4, [sp, #52]
 3655 061e 1646     		mov	r6, r2
 3656 0620 5B46     		mov	r3, fp
 3657 0622 DDF838B0 		ldr	fp, [sp, #56]
 3658              	.LVL417:
 3659              		.loc 1 813 9 is_stmt 1 view .LVU943
 3660              		.loc 1 813 12 is_stmt 0 view .LVU944
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 91


 3661 0626 54B9     		cbnz	r4, .L279
 3662              	.LVL418:
 3663              	.L280:
 814:Core/Src/printf.c ****           while (l++ < width) {
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 816:Core/Src/printf.c ****           }
 817:Core/Src/printf.c ****         }
 818:Core/Src/printf.c ****         format++;
 3664              		.loc 1 818 9 is_stmt 1 view .LVU945
 3665              		.loc 1 818 15 is_stmt 0 view .LVU946
 3666 0628 0F9B     		ldr	r3, [sp, #60]
 3667 062a 0133     		adds	r3, r3, #1
 3668 062c 0F93     		str	r3, [sp, #60]
 819:Core/Src/printf.c ****         break;
 3669              		.loc 1 819 9 is_stmt 1 view .LVU947
 3670 062e F2E4     		b	.L282
 3671              	.LVL419:
 3672              	.L281:
 815:Core/Src/printf.c ****           }
 3673              		.loc 1 815 13 view .LVU948
 3674 0630 551C     		adds	r5, r2, #1
 3675              	.LVL420:
 815:Core/Src/printf.c ****           }
 3676              		.loc 1 815 13 is_stmt 0 view .LVU949
 3677 0632 3B46     		mov	r3, r7
 3678 0634 4946     		mov	r1, r9
 3679 0636 2020     		movs	r0, #32
 3680 0638 C047     		blx	r8
 3681              	.LVL421:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3682              		.loc 1 814 19 view .LVU950
 3683 063a 2346     		mov	r3, r4
 815:Core/Src/printf.c ****           }
 3684              		.loc 1 815 13 view .LVU951
 3685 063c 2A46     		mov	r2, r5
 3686              	.LVL422:
 3687              	.L279:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3688              		.loc 1 814 22 is_stmt 1 view .LVU952
 814:Core/Src/printf.c ****           while (l++ < width) {
 3689              		.loc 1 814 19 is_stmt 0 view .LVU953
 3690 063e 5C1C     		adds	r4, r3, #1
 3691              	.LVL423:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3692              		.loc 1 814 22 view .LVU954
 3693 0640 9B45     		cmp	fp, r3
 3694 0642 F5D8     		bhi	.L281
 814:Core/Src/printf.c ****           while (l++ < width) {
 3695              		.loc 1 814 22 view .LVU955
 3696 0644 1646     		mov	r6, r2
 3697 0646 EFE7     		b	.L280
 3698              	.LVL424:
 3699              	.L228:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3700              		.loc 1 814 22 view .LVU956
 3701              	.LBE53:
 3702              	.LBB54:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 92


 820:Core/Src/printf.c ****       }
 821:Core/Src/printf.c **** 
 822:Core/Src/printf.c ****       case 'p' : {
 823:Core/Src/printf.c ****         width = sizeof(void*) * 2U;
 3703              		.loc 1 823 9 is_stmt 1 view .LVU957
 824:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 3704              		.loc 1 824 9 view .LVU958
 3705              		.loc 1 824 15 is_stmt 0 view .LVU959
 3706 0648 45F02105 		orr	r5, r5, #33
 3707              	.LVL425:
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 826:Core/Src/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 3708              		.loc 1 826 9 is_stmt 1 view .LVU960
 827:Core/Src/printf.c ****         if (is_ll) {
 3709              		.loc 1 827 9 view .LVU961
 828:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 829:Core/Src/printf.c ****         }
 830:Core/Src/printf.c ****         else {
 831:Core/Src/printf.c **** #endif
 832:Core/Src/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 3710              		.loc 1 832 11 view .LVU962
 3711              		.loc 1 832 81 is_stmt 0 view .LVU963
 3712 064c 1A9B     		ldr	r3, [sp, #104]
 3713 064e 1A1D     		adds	r2, r3, #4
 3714 0650 1A92     		str	r2, [sp, #104]
 3715 0652 1B68     		ldr	r3, [r3]
 3716              		.loc 1 832 17 discriminator 1 view .LVU964
 3717 0654 0595     		str	r5, [sp, #20]
 3718 0656 0822     		movs	r2, #8
 3719 0658 0492     		str	r2, [sp, #16]
 3720 065a 0B9A     		ldr	r2, [sp, #44]
 3721 065c 0392     		str	r2, [sp, #12]
 3722 065e 1022     		movs	r2, #16
 3723 0660 0292     		str	r2, [sp, #8]
 3724 0662 0022     		movs	r2, #0
 3725 0664 0192     		str	r2, [sp, #4]
 3726 0666 0093     		str	r3, [sp]
 3727 0668 3B46     		mov	r3, r7
 3728 066a 3246     		mov	r2, r6
 3729 066c 4946     		mov	r1, r9
 3730 066e 4046     		mov	r0, r8
 3731 0670 FFF7FEFF 		bl	_ntoa_long
 3732              	.LVL426:
 3733 0674 0646     		mov	r6, r0
 3734              	.LVL427:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 834:Core/Src/printf.c ****         }
 835:Core/Src/printf.c **** #endif
 836:Core/Src/printf.c ****         format++;
 3735              		.loc 1 836 9 is_stmt 1 view .LVU965
 3736              		.loc 1 836 15 is_stmt 0 view .LVU966
 3737 0676 0F9B     		ldr	r3, [sp, #60]
 3738 0678 0133     		adds	r3, r3, #1
 3739 067a 0F93     		str	r3, [sp, #60]
 837:Core/Src/printf.c ****         break;
 3740              		.loc 1 837 9 is_stmt 1 view .LVU967
 3741 067c CBE4     		b	.L282
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 93


 3742              	.LVL428:
 3743              	.L234:
 3744              		.loc 1 837 9 is_stmt 0 view .LVU968
 3745              	.LBE54:
 838:Core/Src/printf.c ****       }
 839:Core/Src/printf.c **** 
 840:Core/Src/printf.c ****       case '%' :
 841:Core/Src/printf.c ****         out('%', buffer, idx++, maxlen);
 3746              		.loc 1 841 9 is_stmt 1 view .LVU969
 3747 067e 741C     		adds	r4, r6, #1
 3748              	.LVL429:
 3749              		.loc 1 841 9 is_stmt 0 view .LVU970
 3750 0680 3B46     		mov	r3, r7
 3751 0682 3246     		mov	r2, r6
 3752 0684 4946     		mov	r1, r9
 3753 0686 2520     		movs	r0, #37
 3754 0688 C047     		blx	r8
 3755              	.LVL430:
 842:Core/Src/printf.c ****         format++;
 3756              		.loc 1 842 9 is_stmt 1 view .LVU971
 3757              		.loc 1 842 15 is_stmt 0 view .LVU972
 3758 068a 0F9B     		ldr	r3, [sp, #60]
 3759 068c 0133     		adds	r3, r3, #1
 3760 068e 0F93     		str	r3, [sp, #60]
 843:Core/Src/printf.c ****         break;
 3761              		.loc 1 843 9 is_stmt 1 view .LVU973
 841:Core/Src/printf.c ****         format++;
 3762              		.loc 1 841 9 is_stmt 0 view .LVU974
 3763 0690 2646     		mov	r6, r4
 3764              		.loc 1 843 9 view .LVU975
 3765 0692 C0E4     		b	.L282
 3766              	.LVL431:
 3767              	.L226:
 844:Core/Src/printf.c **** 
 845:Core/Src/printf.c ****       default :
 846:Core/Src/printf.c ****         out(*format, buffer, idx++, maxlen);
 3768              		.loc 1 846 9 is_stmt 1 view .LVU976
 3769 0694 741C     		adds	r4, r6, #1
 3770              	.LVL432:
 3771              		.loc 1 846 9 is_stmt 0 view .LVU977
 3772 0696 3B46     		mov	r3, r7
 3773 0698 3246     		mov	r2, r6
 3774 069a 4946     		mov	r1, r9
 3775 069c C047     		blx	r8
 3776              	.LVL433:
 847:Core/Src/printf.c ****         format++;
 3777              		.loc 1 847 9 is_stmt 1 view .LVU978
 3778              		.loc 1 847 15 is_stmt 0 view .LVU979
 3779 069e 0F9B     		ldr	r3, [sp, #60]
 3780 06a0 0133     		adds	r3, r3, #1
 3781 06a2 0F93     		str	r3, [sp, #60]
 848:Core/Src/printf.c ****         break;
 3782              		.loc 1 848 9 is_stmt 1 view .LVU980
 846:Core/Src/printf.c ****         format++;
 3783              		.loc 1 846 9 is_stmt 0 view .LVU981
 3784 06a4 2646     		mov	r6, r4
 3785              		.loc 1 848 9 view .LVU982
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 94


 3786 06a6 B6E4     		b	.L282
 3787              	.LVL434:
 3788              	.L302:
 584:Core/Src/printf.c ****   }
 3789              		.loc 1 584 9 view .LVU983
 3790 06a8 DFF81C80 		ldr	r8, .L321
 3791 06ac B2E4     		b	.L199
 3792              	.LVL435:
 3793              	.L303:
 849:Core/Src/printf.c ****     }
 850:Core/Src/printf.c ****   }
 851:Core/Src/printf.c **** 
 852:Core/Src/printf.c ****   // termination
 853:Core/Src/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 3794              		.loc 1 853 3 is_stmt 1 view .LVU984
 3795 06ae BE42     		cmp	r6, r7
 3796 06b0 08D3     		bcc	.L296
 3797              		.loc 1 853 3 is_stmt 0 discriminator 1 view .LVU985
 3798 06b2 7A1E     		subs	r2, r7, #1
 3799              	.L284:
 3800              		.loc 1 853 3 discriminator 4 view .LVU986
 3801 06b4 3B46     		mov	r3, r7
 3802 06b6 4946     		mov	r1, r9
 3803 06b8 0020     		movs	r0, #0
 3804 06ba C047     		blx	r8
 3805              	.LVL436:
 854:Core/Src/printf.c **** 
 855:Core/Src/printf.c ****   // return written chars without terminating \0
 856:Core/Src/printf.c ****   return (int)idx;
 3806              		.loc 1 856 3 is_stmt 1 view .LVU987
 857:Core/Src/printf.c **** }
 3807              		.loc 1 857 1 is_stmt 0 view .LVU988
 3808 06bc 3046     		mov	r0, r6
 3809 06be 11B0     		add	sp, sp, #68
 3810              	.LCFI26:
 3811              		.cfi_remember_state
 3812              		.cfi_def_cfa_offset 36
 3813              		@ sp needed
 3814 06c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3815              	.LVL437:
 3816              	.L296:
 3817              	.LCFI27:
 3818              		.cfi_restore_state
 853:Core/Src/printf.c **** 
 3819              		.loc 1 853 3 discriminator 2 view .LVU989
 3820 06c4 3246     		mov	r2, r6
 3821 06c6 F5E7     		b	.L284
 3822              	.L322:
 3823              		.align	2
 3824              	.L321:
 3825 06c8 00000000 		.word	_out_null
 3826              		.cfi_endproc
 3827              	.LFE13:
 3829              		.section	.text._out_char,"ax",%progbits
 3830              		.align	1
 3831              		.syntax unified
 3832              		.thumb
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 95


 3833              		.thumb_func
 3835              	_out_char:
 3836              	.LVL438:
 3837              	.LFB2:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3838              		.loc 1 150 1 is_stmt 1 view -0
 3839              		.cfi_startproc
 3840              		@ args = 0, pretend = 0, frame = 0
 3841              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Core/Src/printf.c ****   if (character) {
 3842              		.loc 1 151 3 view .LVU991
 151:Core/Src/printf.c ****   if (character) {
 3843              		.loc 1 151 17 view .LVU992
 151:Core/Src/printf.c ****   if (character) {
 3844              		.loc 1 151 28 view .LVU993
 152:Core/Src/printf.c ****     _putchar(character);
 3845              		.loc 1 152 3 view .LVU994
 152:Core/Src/printf.c ****     _putchar(character);
 3846              		.loc 1 152 6 is_stmt 0 view .LVU995
 3847 0000 00B9     		cbnz	r0, .L329
 3848 0002 7047     		bx	lr
 3849              	.L329:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3850              		.loc 1 150 1 view .LVU996
 3851 0004 08B5     		push	{r3, lr}
 3852              	.LCFI28:
 3853              		.cfi_def_cfa_offset 8
 3854              		.cfi_offset 3, -8
 3855              		.cfi_offset 14, -4
 153:Core/Src/printf.c ****   }
 3856              		.loc 1 153 5 is_stmt 1 view .LVU997
 3857 0006 FFF7FEFF 		bl	_putchar
 3858              	.LVL439:
 155:Core/Src/printf.c **** 
 3859              		.loc 1 155 1 is_stmt 0 view .LVU998
 3860 000a 08BD     		pop	{r3, pc}
 3861              		.cfi_endproc
 3862              	.LFE2:
 3864              		.section	.text.printf_,"ax",%progbits
 3865              		.align	1
 3866              		.global	printf_
 3867              		.syntax unified
 3868              		.thumb
 3869              		.thumb_func
 3871              	printf_:
 3872              	.LVL440:
 3873              	.LFB14:
 858:Core/Src/printf.c **** 
 859:Core/Src/printf.c **** 
 860:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 861:Core/Src/printf.c **** 
 862:Core/Src/printf.c **** int printf_(const char* format, ...)
 863:Core/Src/printf.c **** {
 3874              		.loc 1 863 1 is_stmt 1 view -0
 3875              		.cfi_startproc
 3876              		@ args = 4, pretend = 16, frame = 8
 3877              		@ frame_needed = 0, uses_anonymous_args = 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 96


 3878              		.loc 1 863 1 is_stmt 0 view .LVU1000
 3879 0000 0FB4     		push	{r0, r1, r2, r3}
 3880              	.LCFI29:
 3881              		.cfi_def_cfa_offset 16
 3882              		.cfi_offset 0, -16
 3883              		.cfi_offset 1, -12
 3884              		.cfi_offset 2, -8
 3885              		.cfi_offset 3, -4
 3886 0002 00B5     		push	{lr}
 3887              	.LCFI30:
 3888              		.cfi_def_cfa_offset 20
 3889              		.cfi_offset 14, -20
 3890 0004 85B0     		sub	sp, sp, #20
 3891              	.LCFI31:
 3892              		.cfi_def_cfa_offset 40
 3893 0006 06AA     		add	r2, sp, #24
 3894 0008 52F8043B 		ldr	r3, [r2], #4
 864:Core/Src/printf.c ****   va_list va;
 3895              		.loc 1 864 3 is_stmt 1 view .LVU1001
 865:Core/Src/printf.c ****   va_start(va, format);
 3896              		.loc 1 865 3 view .LVU1002
 3897 000c 0392     		str	r2, [sp, #12]
 866:Core/Src/printf.c ****   char buffer[1];
 3898              		.loc 1 866 3 view .LVU1003
 867:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 3899              		.loc 1 867 3 view .LVU1004
 3900              		.loc 1 867 19 is_stmt 0 view .LVU1005
 3901 000e 0092     		str	r2, [sp]
 3902 0010 4FF0FF32 		mov	r2, #-1
 3903 0014 02A9     		add	r1, sp, #8
 3904 0016 0448     		ldr	r0, .L332
 3905 0018 FFF7FEFF 		bl	_vsnprintf
 3906              	.LVL441:
 868:Core/Src/printf.c ****   va_end(va);
 3907              		.loc 1 868 3 is_stmt 1 view .LVU1006
 869:Core/Src/printf.c ****   return ret;
 3908              		.loc 1 869 3 view .LVU1007
 870:Core/Src/printf.c **** }
 3909              		.loc 1 870 1 is_stmt 0 view .LVU1008
 3910 001c 05B0     		add	sp, sp, #20
 3911              	.LCFI32:
 3912              		.cfi_def_cfa_offset 20
 3913              		@ sp needed
 3914 001e 5DF804EB 		ldr	lr, [sp], #4
 3915              	.LCFI33:
 3916              		.cfi_restore 14
 3917              		.cfi_def_cfa_offset 16
 3918 0022 04B0     		add	sp, sp, #16
 3919              	.LCFI34:
 3920              		.cfi_restore 3
 3921              		.cfi_restore 2
 3922              		.cfi_restore 1
 3923              		.cfi_restore 0
 3924              		.cfi_def_cfa_offset 0
 3925 0024 7047     		bx	lr
 3926              	.L333:
 3927 0026 00BF     		.align	2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 97


 3928              	.L332:
 3929 0028 00000000 		.word	_out_char
 3930              		.cfi_endproc
 3931              	.LFE14:
 3933              		.section	.text.sprintf_,"ax",%progbits
 3934              		.align	1
 3935              		.global	sprintf_
 3936              		.syntax unified
 3937              		.thumb
 3938              		.thumb_func
 3940              	sprintf_:
 3941              	.LVL442:
 3942              	.LFB15:
 871:Core/Src/printf.c **** 
 872:Core/Src/printf.c **** 
 873:Core/Src/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 874:Core/Src/printf.c **** {
 3943              		.loc 1 874 1 is_stmt 1 view -0
 3944              		.cfi_startproc
 3945              		@ args = 4, pretend = 12, frame = 8
 3946              		@ frame_needed = 0, uses_anonymous_args = 1
 3947              		.loc 1 874 1 is_stmt 0 view .LVU1010
 3948 0000 0EB4     		push	{r1, r2, r3}
 3949              	.LCFI35:
 3950              		.cfi_def_cfa_offset 12
 3951              		.cfi_offset 1, -12
 3952              		.cfi_offset 2, -8
 3953              		.cfi_offset 3, -4
 3954 0002 00B5     		push	{lr}
 3955              	.LCFI36:
 3956              		.cfi_def_cfa_offset 16
 3957              		.cfi_offset 14, -16
 3958 0004 84B0     		sub	sp, sp, #16
 3959              	.LCFI37:
 3960              		.cfi_def_cfa_offset 32
 3961 0006 0146     		mov	r1, r0
 3962 0008 05AA     		add	r2, sp, #20
 3963 000a 52F8043B 		ldr	r3, [r2], #4
 875:Core/Src/printf.c ****   va_list va;
 3964              		.loc 1 875 3 is_stmt 1 view .LVU1011
 876:Core/Src/printf.c ****   va_start(va, format);
 3965              		.loc 1 876 3 view .LVU1012
 3966 000e 0392     		str	r2, [sp, #12]
 877:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 3967              		.loc 1 877 3 view .LVU1013
 3968              		.loc 1 877 19 is_stmt 0 view .LVU1014
 3969 0010 0092     		str	r2, [sp]
 3970 0012 4FF0FF32 		mov	r2, #-1
 3971 0016 0448     		ldr	r0, .L336
 3972              	.LVL443:
 3973              		.loc 1 877 19 view .LVU1015
 3974 0018 FFF7FEFF 		bl	_vsnprintf
 3975              	.LVL444:
 878:Core/Src/printf.c ****   va_end(va);
 3976              		.loc 1 878 3 is_stmt 1 view .LVU1016
 879:Core/Src/printf.c ****   return ret;
 3977              		.loc 1 879 3 view .LVU1017
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 98


 880:Core/Src/printf.c **** }
 3978              		.loc 1 880 1 is_stmt 0 view .LVU1018
 3979 001c 04B0     		add	sp, sp, #16
 3980              	.LCFI38:
 3981              		.cfi_def_cfa_offset 16
 3982              		@ sp needed
 3983 001e 5DF804EB 		ldr	lr, [sp], #4
 3984              	.LCFI39:
 3985              		.cfi_restore 14
 3986              		.cfi_def_cfa_offset 12
 3987 0022 03B0     		add	sp, sp, #12
 3988              	.LCFI40:
 3989              		.cfi_restore 3
 3990              		.cfi_restore 2
 3991              		.cfi_restore 1
 3992              		.cfi_def_cfa_offset 0
 3993 0024 7047     		bx	lr
 3994              	.L337:
 3995 0026 00BF     		.align	2
 3996              	.L336:
 3997 0028 00000000 		.word	_out_buffer
 3998              		.cfi_endproc
 3999              	.LFE15:
 4001              		.section	.text.snprintf_,"ax",%progbits
 4002              		.align	1
 4003              		.global	snprintf_
 4004              		.syntax unified
 4005              		.thumb
 4006              		.thumb_func
 4008              	snprintf_:
 4009              	.LVL445:
 4010              	.LFB16:
 881:Core/Src/printf.c **** 
 882:Core/Src/printf.c **** 
 883:Core/Src/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 884:Core/Src/printf.c **** {
 4011              		.loc 1 884 1 is_stmt 1 view -0
 4012              		.cfi_startproc
 4013              		@ args = 4, pretend = 8, frame = 8
 4014              		@ frame_needed = 0, uses_anonymous_args = 1
 4015              		.loc 1 884 1 is_stmt 0 view .LVU1020
 4016 0000 0CB4     		push	{r2, r3}
 4017              	.LCFI41:
 4018              		.cfi_def_cfa_offset 8
 4019              		.cfi_offset 2, -8
 4020              		.cfi_offset 3, -4
 4021 0002 10B5     		push	{r4, lr}
 4022              	.LCFI42:
 4023              		.cfi_def_cfa_offset 16
 4024              		.cfi_offset 4, -16
 4025              		.cfi_offset 14, -12
 4026 0004 84B0     		sub	sp, sp, #16
 4027              	.LCFI43:
 4028              		.cfi_def_cfa_offset 32
 4029 0006 0A46     		mov	r2, r1
 4030 0008 06AC     		add	r4, sp, #24
 4031 000a 54F8043B 		ldr	r3, [r4], #4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 99


 885:Core/Src/printf.c ****   va_list va;
 4032              		.loc 1 885 3 is_stmt 1 view .LVU1021
 886:Core/Src/printf.c ****   va_start(va, format);
 4033              		.loc 1 886 3 view .LVU1022
 4034 000e 0394     		str	r4, [sp, #12]
 887:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 4035              		.loc 1 887 3 view .LVU1023
 4036              		.loc 1 887 19 is_stmt 0 view .LVU1024
 4037 0010 0094     		str	r4, [sp]
 4038 0012 0146     		mov	r1, r0
 4039              	.LVL446:
 4040              		.loc 1 887 19 view .LVU1025
 4041 0014 0348     		ldr	r0, .L340
 4042              	.LVL447:
 4043              		.loc 1 887 19 view .LVU1026
 4044 0016 FFF7FEFF 		bl	_vsnprintf
 4045              	.LVL448:
 888:Core/Src/printf.c ****   va_end(va);
 4046              		.loc 1 888 3 is_stmt 1 view .LVU1027
 889:Core/Src/printf.c ****   return ret;
 4047              		.loc 1 889 3 view .LVU1028
 890:Core/Src/printf.c **** }
 4048              		.loc 1 890 1 is_stmt 0 view .LVU1029
 4049 001a 04B0     		add	sp, sp, #16
 4050              	.LCFI44:
 4051              		.cfi_def_cfa_offset 16
 4052              		@ sp needed
 4053 001c BDE81040 		pop	{r4, lr}
 4054              	.LCFI45:
 4055              		.cfi_restore 14
 4056              		.cfi_restore 4
 4057              		.cfi_def_cfa_offset 8
 4058 0020 02B0     		add	sp, sp, #8
 4059              	.LCFI46:
 4060              		.cfi_restore 3
 4061              		.cfi_restore 2
 4062              		.cfi_def_cfa_offset 0
 4063 0022 7047     		bx	lr
 4064              	.L341:
 4065              		.align	2
 4066              	.L340:
 4067 0024 00000000 		.word	_out_buffer
 4068              		.cfi_endproc
 4069              	.LFE16:
 4071              		.section	.text.vprintf_,"ax",%progbits
 4072              		.align	1
 4073              		.global	vprintf_
 4074              		.syntax unified
 4075              		.thumb
 4076              		.thumb_func
 4078              	vprintf_:
 4079              	.LVL449:
 4080              	.LFB17:
 891:Core/Src/printf.c **** 
 892:Core/Src/printf.c **** 
 893:Core/Src/printf.c **** int vprintf_(const char* format, va_list va)
 894:Core/Src/printf.c **** {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 100


 4081              		.loc 1 894 1 is_stmt 1 view -0
 4082              		.cfi_startproc
 4083              		@ args = 0, pretend = 0, frame = 8
 4084              		@ frame_needed = 0, uses_anonymous_args = 0
 4085              		.loc 1 894 1 is_stmt 0 view .LVU1031
 4086 0000 00B5     		push	{lr}
 4087              	.LCFI47:
 4088              		.cfi_def_cfa_offset 4
 4089              		.cfi_offset 14, -4
 4090 0002 85B0     		sub	sp, sp, #20
 4091              	.LCFI48:
 4092              		.cfi_def_cfa_offset 24
 4093 0004 0346     		mov	r3, r0
 895:Core/Src/printf.c ****   char buffer[1];
 4094              		.loc 1 895 3 is_stmt 1 view .LVU1032
 896:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 4095              		.loc 1 896 3 view .LVU1033
 4096              		.loc 1 896 10 is_stmt 0 view .LVU1034
 4097 0006 0091     		str	r1, [sp]
 4098 0008 4FF0FF32 		mov	r2, #-1
 4099 000c 03A9     		add	r1, sp, #12
 4100              	.LVL450:
 4101              		.loc 1 896 10 view .LVU1035
 4102 000e 0348     		ldr	r0, .L344
 4103              	.LVL451:
 4104              		.loc 1 896 10 view .LVU1036
 4105 0010 FFF7FEFF 		bl	_vsnprintf
 4106              	.LVL452:
 897:Core/Src/printf.c **** }
 4107              		.loc 1 897 1 view .LVU1037
 4108 0014 05B0     		add	sp, sp, #20
 4109              	.LCFI49:
 4110              		.cfi_def_cfa_offset 4
 4111              		@ sp needed
 4112 0016 5DF804FB 		ldr	pc, [sp], #4
 4113              	.L345:
 4114 001a 00BF     		.align	2
 4115              	.L344:
 4116 001c 00000000 		.word	_out_char
 4117              		.cfi_endproc
 4118              	.LFE17:
 4120              		.section	.text.vsnprintf_,"ax",%progbits
 4121              		.align	1
 4122              		.global	vsnprintf_
 4123              		.syntax unified
 4124              		.thumb
 4125              		.thumb_func
 4127              	vsnprintf_:
 4128              	.LVL453:
 4129              	.LFB18:
 898:Core/Src/printf.c **** 
 899:Core/Src/printf.c **** 
 900:Core/Src/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 901:Core/Src/printf.c **** {
 4130              		.loc 1 901 1 is_stmt 1 view -0
 4131              		.cfi_startproc
 4132              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 101


 4133              		@ frame_needed = 0, uses_anonymous_args = 0
 4134              		.loc 1 901 1 is_stmt 0 view .LVU1039
 4135 0000 00B5     		push	{lr}
 4136              	.LCFI50:
 4137              		.cfi_def_cfa_offset 4
 4138              		.cfi_offset 14, -4
 4139 0002 83B0     		sub	sp, sp, #12
 4140              	.LCFI51:
 4141              		.cfi_def_cfa_offset 16
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 4142              		.loc 1 902 3 is_stmt 1 view .LVU1040
 4143              		.loc 1 902 10 is_stmt 0 view .LVU1041
 4144 0004 0093     		str	r3, [sp]
 4145 0006 1346     		mov	r3, r2
 4146              	.LVL454:
 4147              		.loc 1 902 10 view .LVU1042
 4148 0008 0A46     		mov	r2, r1
 4149              	.LVL455:
 4150              		.loc 1 902 10 view .LVU1043
 4151 000a 0146     		mov	r1, r0
 4152              	.LVL456:
 4153              		.loc 1 902 10 view .LVU1044
 4154 000c 0248     		ldr	r0, .L348
 4155              	.LVL457:
 4156              		.loc 1 902 10 view .LVU1045
 4157 000e FFF7FEFF 		bl	_vsnprintf
 4158              	.LVL458:
 903:Core/Src/printf.c **** }
 4159              		.loc 1 903 1 view .LVU1046
 4160 0012 03B0     		add	sp, sp, #12
 4161              	.LCFI52:
 4162              		.cfi_def_cfa_offset 4
 4163              		@ sp needed
 4164 0014 5DF804FB 		ldr	pc, [sp], #4
 4165              	.L349:
 4166              		.align	2
 4167              	.L348:
 4168 0018 00000000 		.word	_out_buffer
 4169              		.cfi_endproc
 4170              	.LFE18:
 4172              		.section	.text.fctprintf,"ax",%progbits
 4173              		.align	1
 4174              		.global	fctprintf
 4175              		.syntax unified
 4176              		.thumb
 4177              		.thumb_func
 4179              	fctprintf:
 4180              	.LVL459:
 4181              	.LFB19:
 904:Core/Src/printf.c **** 
 905:Core/Src/printf.c **** 
 906:Core/Src/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 907:Core/Src/printf.c **** {
 4182              		.loc 1 907 1 is_stmt 1 view -0
 4183              		.cfi_startproc
 4184              		@ args = 4, pretend = 8, frame = 16
 4185              		@ frame_needed = 0, uses_anonymous_args = 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 102


 4186              		.loc 1 907 1 is_stmt 0 view .LVU1048
 4187 0000 0CB4     		push	{r2, r3}
 4188              	.LCFI53:
 4189              		.cfi_def_cfa_offset 8
 4190              		.cfi_offset 2, -8
 4191              		.cfi_offset 3, -4
 4192 0002 00B5     		push	{lr}
 4193              	.LCFI54:
 4194              		.cfi_def_cfa_offset 12
 4195              		.cfi_offset 14, -12
 4196 0004 87B0     		sub	sp, sp, #28
 4197              	.LCFI55:
 4198              		.cfi_def_cfa_offset 40
 4199 0006 08AA     		add	r2, sp, #32
 4200 0008 52F8043B 		ldr	r3, [r2], #4
 908:Core/Src/printf.c ****   va_list va;
 4201              		.loc 1 908 3 is_stmt 1 view .LVU1049
 909:Core/Src/printf.c ****   va_start(va, format);
 4202              		.loc 1 909 3 view .LVU1050
 4203 000c 0592     		str	r2, [sp, #20]
 910:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 4204              		.loc 1 910 3 view .LVU1051
 4205              		.loc 1 910 27 is_stmt 0 view .LVU1052
 4206 000e 0390     		str	r0, [sp, #12]
 4207 0010 0491     		str	r1, [sp, #16]
 911:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 4208              		.loc 1 911 3 is_stmt 1 view .LVU1053
 4209              		.loc 1 911 19 is_stmt 0 view .LVU1054
 4210 0012 0092     		str	r2, [sp]
 4211 0014 4FF0FF32 		mov	r2, #-1
 4212 0018 03A9     		add	r1, sp, #12
 4213              	.LVL460:
 4214              		.loc 1 911 19 view .LVU1055
 4215 001a 0448     		ldr	r0, .L352
 4216              	.LVL461:
 4217              		.loc 1 911 19 view .LVU1056
 4218 001c FFF7FEFF 		bl	_vsnprintf
 4219              	.LVL462:
 912:Core/Src/printf.c ****   va_end(va);
 4220              		.loc 1 912 3 is_stmt 1 view .LVU1057
 913:Core/Src/printf.c ****   return ret;
 4221              		.loc 1 913 3 view .LVU1058
 914:Core/Src/printf.c **** }
 4222              		.loc 1 914 1 is_stmt 0 view .LVU1059
 4223 0020 07B0     		add	sp, sp, #28
 4224              	.LCFI56:
 4225              		.cfi_def_cfa_offset 12
 4226              		@ sp needed
 4227 0022 5DF804EB 		ldr	lr, [sp], #4
 4228              	.LCFI57:
 4229              		.cfi_restore 14
 4230              		.cfi_def_cfa_offset 8
 4231 0026 02B0     		add	sp, sp, #8
 4232              	.LCFI58:
 4233              		.cfi_restore 3
 4234              		.cfi_restore 2
 4235              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 103


 4236 0028 7047     		bx	lr
 4237              	.L353:
 4238 002a 00BF     		.align	2
 4239              	.L352:
 4240 002c 00000000 		.word	_out_fct
 4241              		.cfi_endproc
 4242              	.LFE19:
 4244              		.section	.rodata.pow10.0,"a"
 4245              		.align	3
 4248              	pow10.0:
 4249 0000 00000000 		.word	0
 4250 0004 0000F03F 		.word	1072693248
 4251 0008 00000000 		.word	0
 4252 000c 00002440 		.word	1076101120
 4253 0010 00000000 		.word	0
 4254 0014 00005940 		.word	1079574528
 4255 0018 00000000 		.word	0
 4256 001c 00408F40 		.word	1083129856
 4257 0020 00000000 		.word	0
 4258 0024 0088C340 		.word	1086556160
 4259 0028 00000000 		.word	0
 4260 002c 006AF840 		.word	1090021888
 4261 0030 00000000 		.word	0
 4262 0034 80842E41 		.word	1093567616
 4263 0038 00000000 		.word	0
 4264 003c D0126341 		.word	1097011920
 4265 0040 00000000 		.word	0
 4266 0044 84D79741 		.word	1100470148
 4267 0048 00000000 		.word	0
 4268 004c 65CDCD41 		.word	1104006501
 4269              		.text
 4270              	.Letext0:
 4271              		.file 2 "C:/Arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 4272              		.file 3 "C:/Arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 4273              		.file 4 "C:/Arm-gnu-toolchain/lib/gcc/arm-none-eabi/13.3.1/include/stdarg.h"
 4274              		.file 5 "C:/Arm-gnu-toolchain/lib/gcc/arm-none-eabi/13.3.1/include/stddef.h"
 4275              		.file 6 "<built-in>"
 4276              		.file 7 "Core/Inc/printf.h"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 104


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:19     .text._out_buffer:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:24     .text._out_buffer:00000000 _out_buffer
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:46     .text._out_null:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:51     .text._out_null:00000000 _out_null
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:69     .text._out_fct:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:74     .text._out_fct:00000000 _out_fct
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:116    .text._atoi:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:121    .text._atoi:00000000 _atoi
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:184    .text._out_rev:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:189    .text._out_rev:00000000 _out_rev
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:321    .text._ntoa_format:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:326    .text._ntoa_format:00000000 _ntoa_format
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:615    .text._ntoa_long:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:620    .text._ntoa_long:00000000 _ntoa_long
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:767    .text._ntoa_long_long:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:772    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:953    .text._etoa:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:958    .text._etoa:00000000 _etoa
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:1618   .text._ftoa:00000000 _ftoa
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:1421   .text._etoa:000002a0 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:1447   .text._etoa:000002fc $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:1597   .rodata._ftoa.str1.4:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:1613   .text._ftoa:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2189   .text._ftoa:000002e0 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4248   .rodata.pow10.0:00000000 pow10.0
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2208   .text._ftoa:00000314 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2294   .text._vsnprintf:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2299   .text._vsnprintf:00000000 _vsnprintf
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2489   .text._vsnprintf:00000090 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2507   .text._vsnprintf:000000d4 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2563   .text._vsnprintf:00000102 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2781   .text._vsnprintf:000001d4 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2848   .text._vsnprintf:0000025a $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3825   .text._vsnprintf:000006c8 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3830   .text._out_char:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3835   .text._out_char:00000000 _out_char
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3865   .text.printf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3871   .text.printf_:00000000 printf_
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3929   .text.printf_:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3934   .text.sprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3940   .text.sprintf_:00000000 sprintf_
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:3997   .text.sprintf_:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4002   .text.snprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4008   .text.snprintf_:00000000 snprintf_
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4067   .text.snprintf_:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4072   .text.vprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4078   .text.vprintf_:00000000 vprintf_
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4116   .text.vprintf_:0000001c $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4121   .text.vsnprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4127   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4168   .text.vsnprintf_:00000018 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4173   .text.fctprintf:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4179   .text.fctprintf:00000000 fctprintf
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4240   .text.fctprintf:0000002c $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:4245   .rodata.pow10.0:00000000 $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s 			page 105


C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2583   .text._vsnprintf:00000115 $d
C:\Users\Lamp\AppData\Local\Temp\cccCqIjg.s:2583   .text._vsnprintf:00000116 $t

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dcmple
_putchar
