void PID(float SetPoint, float CurrentValue)
{
	uint32_t PWM;
	
	High_lim = 3600, Low_lim = 0;
	static float e_pre = 0, Ui_pre = 0, e_reset = 0, Ud_f_pre = 0;
	
	double Up, Ui, Ud, Ud_f;
	
    	// Kp = 259.0972;
    	// Ki = 1847.9848;
    	// Kd = 7.4299;
    	// Kb = 15.771;

	// Ts = 0.01, alpha = 0.9;
	
	float Error = SetPoint - CurrentValue;		// error
	
	Up = Kp*Error;
	
	Ui = Ui_pre + Ki*Ts*Error + Kb*Ts*e_reset;	// Anti-Windup
	
	Ud = Kd*(Error - e_pre)/Ts;
	Ud_f = (1 - alpha)*Ud_f_pre + alpha*Ud;		// low pass fillter

	// Luu lai cac gia tri
	e_pre = Error;
	Ui_pre = Ui;
	Ud_f_pre = Ud_f;
	
	float U = Up + Ui + Ud_f;
	
	// set rotations
	RotationMode(U);

	uint32_t Uout = abs((int) U);

	// Saturated
	if (Uout > High_lim) PWM = High_lim;
	else if(Uout < Low_lim) PWM = Low_lim;

	e_reset = PWM - Uout;

	// Set value PWM
	PWM_Set(PWM);
}